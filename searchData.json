[{"title":"LeetCode自动展示","url":"/leetcode-python-auto-show/","content":"\n# Before\n\n之前的时候链接只展示了`Sampele Link`。这次想着正好使用`Python`来读取我之前写好的文件，并且自动处理成连接，显式把这些连接展示出来。\n\n# Now Python Auto Show\n\n这次的制作需要一下几个功能：\n\n1. 读取md文件形式的文件\n2. 按照`easy` \\ `median` \\ `hard` 的形式把他们区分开\n3. 使用数字排序的顺序进行排序，而非直接使用字符串排序的方式\n4. 格式化输出\n\n---\n\n有了以上的诉求，实现起来就很简单了。\n\n- 使用`os.path.splitext(file)`实现`功能1`。\n\n- 使用`startswith` 函数来实现`功能2`。\n\n- 先转换成`int` ，然后使用`sort`来进行数字化的排序。\n\n格式化输出的时候遇到一点困难是表面上看起来是没有太大长度区分的，但是实际采用的是超链接的形式。这样长度因为`难度`和`题号`长度就会有一个较大的差异。\n\n解决的时候使用的是：\n\n这个地方留一个`~未完待续`吧。\n\n因为现在才整理了几十道题目，并且目前的方法调整格式之后，网页上并没有太多的变化，所以就暂时搁置。主要精力回到刷题目上来。\n\n---\n\n同时我也全新升级了我的网页排版设计。\n\n![image-20200229102318252](我的LeetCode整理/image-20200229102318252.png)\n\n这样的话，可以更加明显的展示我的网页里面包含哪些入口。\n\n未来还会把我的`个人主页`和`博客特性`页面放上来【200229已经成功添加】。","categories":["技术"]},{"title":"Windows子系统Ubuntu","url":"/windows-subsystem-ubuntu/","content":"\n最近发现在Windows商店里面就可以直接安装Ubuntu，就不用安装虚拟机软件啦~\n\n---\n\n### Python\n\n首先设置账户和密码，进入之后发现没有python，是一个完全纯净的环境。\n\n使用`sudo apt install python`来安装我需要的`Python2`版本。\n\n安装成功。\n\n---\n\n### 系统版本和CPU信息\n\n接着有些好奇这样一个系统的文件目录系统和资源分配情况，简单用命令来调研一下。\n\n**查看系统版本**\n\n```bash\n>>>lsb_release -a\n\nNo LSB modules are available.\nDistributor ID: Ubuntu\nDescription:    Ubuntu 18.04.2 LTS\nRelease:        18.04\nCodename:       bionic \n```\n\n1. 检测系统32位还是64位：`getconf LONG_BIT`\n2. Linux的版本：`uname -a`\n3. 查看CPU信息：`cat /proc/cpuinfo`\n\n---\n\n### 修改软件源\n\n源列表文件位于`/etc/apt/sources.list，`可以使用vim打开该文件，将官方的源注释掉，然后加入新的软件源 (这里不推荐阿里的源，因为后面要安装图形界面的时候会出问题，推荐使用中科大的源)\n\n```\nsudo cp /etc/apt/sources.list /etc/apt/sources.list_backup\nsudo vi /etc/apt/sources.list\n```\n\n中科大的源\n\n```\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\n\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\n```\n\n更新配置\n\n```\nsudo apt-get update\n```\n\n---\n\n### 文件系统\n\n```bash\ncd /\n```\n\n然后就可以看到了，我自己的配置是文件在home文件夹下面，然后通过`/mnt`获取我本地Win系统下的内容。\n\n上面的操作实现了Ubuntu子系统对Win系统的访问，为了方便Win系统传递文件到Ubuntu里面，还是使用挂载的方式。\n\n```bash\nln -s /mnt/c/Starky/ubuntu18 ~/ubuntu \nln -s /mnt/c/workspace/remote/ubuntu18 ~/ubuntu\nln -s /mnt/c/workspace/remote/ubuntu ~/ubuntu\n```\n\n---\n\n### Flask\n\n```bash\nsudo apt install python-pip\n\npip install Flask\npip install flask_bootstrap\npip install flask_sqlalchemy\npip install flask_wtf\n```\n---\n\n### Docker\n\n直接进入主题，安装我们的`docker`。\n\n找了好多命令，不如直接朴实无华的使用：\n\n```bash\napt-get install -y docker.io\n```\n\ndocker的使用过程中，使用后台运行的命令得时候，需要给一个不会结束的动作，这样他就不会自动退出啦。\n\n我们使用docker就行，不用使用docker-compose啦。\n\n结果就是暂时我们的WSL（Windows下面的子系统）暂时不支持Docker Daemon，所以就老老实实在服务器上开发啦！\n\nhttps://www.cnblogs.com/xiaoliangge/p/9134585.html\n\n---\n\n### 继续配置我的WSL环境\n\n1. 安装 Miniconda 产生虚拟环境\n\n   官网下载 `Miniconda` 然后安装就行了。\n\n   添加路径：\n\n   ```bash\n   vim /home/starky/.bashrc\n   conda \n   \n   source /home/starky/.bashrc\n   echo $PATH\n   ```\n\n   现在我的机器前面就有一个 base 了。\n\n   **服务器：**服务器上面需要 activate 一下，在此备注。\n\n2. 创建 `Python` 环境\n\n   ```bash\n   conda create -n paper python=2.7\n   ```\n\n3. 使用 `Pycharm` 链接 `WSL`。\n\n   暂时 Ubuntu 20.04 不支持，支持18版本的Ubuntu\n\n4. 单次使用清华源\n\n   需要提前安装 g++ 等相关编译组件，**才知道不同版本的Ubuntu对应的源不一致。**\n\n```bash\npip install -r requirements -i https://pypi.tuna.tsinghua.edu.cn/simple\npip install -r requirements -i https://pypi.mirrors.ustc.edu.cn/simple\n\npip install pytest -i https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n5. PIL 安装不上，使用 `Pillow` 来替代\n\n","categories":["技术"]},{"title":"iPhone 11 Pro 冲冲冲","url":"/when-to-buy-iPhone11Pro/","content":"\n预计购买iPhone 11 Pro（暗夜绿）64GB 国行 + Apple Store 官方贴膜服务\n\n预计总成本 ￥7399 + 358\n\n| 现在就买                   | 考完GRE的双十二                      |\n| -------------------------- | ------------------------------------ |\n| 现在上手免纠结（天天纠结） | 专心的诺基亚学习                     |\n| 双十二不一定会更便宜       | 电子产品更便宜                       |\n| 信用卡                     | 可以现金全款                         |\n| 手表怎么配？               | 可以官网下单现实比较，然后一起冲手表 |\n| iOS12 Deep Fusion          | 无解。。。系统更稳定                 |\n| 看流星雨的时候能到手       | 考完也有一个星期的决定时间           |\n\n担忧主要是双十二是不是有可能没有双十一的价格了。\n\n11 PRO 也是在逐步满足市场对他的需求，在未来会更加的充足。买到暗夜绿肯定也是没有问题的了，价格如果贵一点也可以接受，重要的是安心把GRE考好！\n\n***总结：***安心静气宁心冲GRE，然后不管结果怎么样我都会买这部手机（定心丸），冲！ \n\n---\n\n不买 iPhone 11 64GB（4799 PK 7399 双十一价格 差价2600）：\n\n差了快一个表也是纠结的一个原因\n\n| iPhone 11 Pro          | iPhone 11                |\n| ---------------------- | ------------------------ |\n| XDR 屏幕 OLED          | LCD 护眼                 |\n| 暗夜绿                 | 我便宜。。。             |\n| 长焦                   | 超广角，用不到长焦。。。 |\n| 更小更好的握持感       | 我便宜。。。             |\n| 边框世界最牛逼         | 我便宜。。。             |\n| 我就是世界最牛逼的机器 | 我便宜。。。             |\n| 一看就知道我最nbbbbb   | 我便宜。。。             |\n\n能用几年决定买不买***Apple Care***\n\n> 预算都够。。。天天在这儿纠结什么。。。\n>\n> 64 暗夜绿 最便宜能用几年用几年呗。。。\n>\n> 妈的，我要是再纠结就买一个吃灰放着。。。\n>\n> 拼多多，不要考虑官换了。。。\n>\n> 差价不包含快充套装和官方一年保修。。。\n\n【191108】前景明朗，11Pro官换+官方保护膜（一年重贴）欧耶！\n\n**快乐最重要！！！***\n\n---\n\n关于不买 iPhone XS 256 GB(￥5050)的原因也在此记录，省着纠结：\n\n- 处理器过时\n- 拍照不行了，去迪士尼需要`Ultra Wide`\n- 不支持夜景和`Deep Fusion`\n- 我换一次手机太费劲了。。。11Pro坚持多用一阵\n- 屏幕没有11Pro的好\n- 价格便宜但是也不能随便裸奔使用（没有啥意义）\n- 心理没有那么爽\n\n","tags":["杂"],"categories":["文字"]},{"title":"猫城记","url":"/cat-city/","content":"\n\n\n今天读完了老舍的猫城记，很有趣，觉得有点暗讽。\n\n---\n\nOver","tags":["读书笔记"],"categories":["文字"]},{"title":"英语口语8000句01-在家中","url":"/spoken-english-01-at-home/","content":"# 从起床到出门\n把被子叠好。\nLet's fold up the futon. \n\n昨天晚上你打呼噜了。\nYou were snoring last night. *snore“打呼噜”。 \n\n我做了个可怕的梦。\nI had a nightmare. \n\n我还打哈欠呢。\nI'm still yawning. \n\n今天我们逃学吧。\nLet's play hooky today!\n\n今天该你扔垃圾了。\nIt's your turn to take out the garbage.\n\n你锁门了吗?\nDid you lock the door?\n\n没忘了什么东西吧?\nAren't you forgetting something?\n\n我得赶紧走!\nI have to rush!\n\n你今天会回来得晚吗?\nAre you gonna be late today?\n\n# 从回家到就寝\n\n我去补习学校了啊。\nI'm going to cram school now. *cram意为“填鸭式补习”。\n\n能给我点儿零花钱吗?\nMay I have my allowance?\n\n真累啊!\nI'm tired.\nI'm exhausted. (我精疲力尽了)\n\n晚饭你想吃什么?\nWhat would you like for dinner?\nWhat would you like for dinner? (晚饭你想吃什么?)\nHow about steak? (吃牛排怎么样?)\nWhat do you want for dinner? (晚饭吃什么?)\nWhat do you want to eat for dinner? (晚饭你想吃点什么?)\n\n你能帮我准备餐具吗?\nWould you help me set the table? *set the table 是将刀、叉和杯子在桌子上摆好，准备吃饭的意思。\nHelp me set up the table, will you? (你能帮我把餐具摆好吗?)\n\n晚饭做什么好呢?\nWhat should I make for dinner?\nWhat should I whip up for dinner?\nWhat should I cook for dinner?\nWhat should I fix for dinner?\n\n还是家好哇。\nIt's good to be home.\nThere's no place like home. *意为“哪儿也没有自己家好”，是句常用的谚语。\n\n你能不能赶紧去趟商店?\nWould you run to the store? *不见得是“跑着去”，在这儿是“快点儿去”的意思。\n\n洗澡水烧好了。\nThe bath is ready.\n\n我要冲个澡。\nI'm taking a shower.\nI'm going to take a shower.\n\n妈妈，今天晚饭吃什么?\nMom, what's for dinner tonight?\n\n晚饭吃什么?\nWhat's for dinner?\n\n这把刀真快呀!\nThis knife cuts well, doesn't it?\n\n开饭啦!\nCome and get it!\nIt's time for dinner!\n\n手洗干净了吗?\nDid you wash your hands well?\n\n把盘子洗了。\nDo the dishes!\n\n我擦盘子。\nI'll dry the dishes. \n\n野茂上电视了。\nNomo is on TV.\n\n铺床吧。\nLet's spread out the futon.\n\n一定要刷牙噢。\nMake sure you brush your teeth.\n\n别把你的东西都摊在这儿。\nDon't leave your stuff here.\n\n做个好梦。\nSweet dreams!\n\n#休息日\n我真想睡个午觉。\nI want to take a nap.\n\n你在装睡啊!\nYou're pretending to be asleep.\n\n你能给孩子换块尿布吗?\nWill you change the baby's diaper?\n\n想尿尿吗?\nDo you need to pee? *主要对小孩子用。\n\n该尿尿了。\nIt's time to go wee-wee. *主要对小孩子用。\n\n胳肢胳肢。\nKuchi-kuchi-koo. *胳肢婴儿时用。大人有时开玩笑时也用。\n\n漏水了。\nThe water is leaking.\n\n这间屋子通风真差。\nIt's stuffy in this room. *stuffy 房间等地方“通风不好”、“憋闷得慌”。\nThe air is thick. (这里真闷。)\nI can't breathe in this room. (这屋让人喘不过气来。)\nThe air is dense. (空气混浊。)\n\n这个房间很通风。\nIt's drafty in this room. *drafty “有穿堂风的”。\n\n帮我照看一下弟弟和妹妹啊。\nTake care of my brother and sister.\nYou bet. (放心吧。)\n\n帮我照看一下弟弟和妹妹啊。\nTake care of my brother and sister.\nTake care of my brother and sister. (帮我照看一下弟弟和妹妹。)\nYou bet. (放心吧。)\n\n洗涤灵用完了。\nWe're out of dish detergent. *“洗衣粉”是laundry detergent。\n\n你能把衣服晾上吗?\nWould you put up the clothes to dry?\n*put up是“向上挂”的意思，但在这里表示“晾衣服”。\n\n你能帮我把衣服叠起来吗?\nWill you help me fold up the clothes? *fold up“叠整齐”。\n\n我得用吸尘器吸吸我房间了。\nI have to vacuum my room. *vacuum“用吸尘器打扫”。\n\n掸掸柜子上的土。\nPlease dust the shelves. *dust“掸土”。\n\n请拖拖地。\nPlease mop the floor.\n\n你能把那件衬衫熨熨吗?\nWill you iron the shirt?\n\n今晚能帮我照看一下孩子吗?\nCan you baby-sit tonight? *baby-sit“父母不在时帮忙照顾孩子”。\n\n# 送礼物\n噢，来喽!\nTa-dah! *把礼物等送到别人面前时的一种表达方式。\nHere you are! (请收下。)\nHere you have it!\n\n这是你的那份。\nThis is your share. *share“(一个一个分开的)分成的份儿，分开”。\n\n# 生活习惯\n我经常下班以后运动。\nI usually work out after work. *work out“训练，运动”。\nI usually go to the gym after work.\nI usually exercise after work.\n\n我开始慢跑锻炼。\nI've started jogging.\n\n我戒烟了。\nI quit smoking. *quit“辞职，改变习惯”。\n\n最近我总是丢三落四的。\nI've been forgetful lately.\n\n# 理财\n什么时候到期?\nWhen is this due? *due“必须支付”、“支付期限到了”。\n\n交费日期截止到30号。\nIt's due on the thirtieth.\n\n能帮我换一下零钱吗?\nCould you give me change? * change 也有“零钱”的意思。\nCan you change this?\n\n我要存5000日元(在我的账户上。)\nI need to deposit five thousand yen (in my savings account).\n\n我要取5000日元(从我的账户上)。\nI need to withdraw ￥5,000 (from my savings account). \n\n我是自己掏的腰包。\nI paid out of my own pocket. \n\n我没带现金。\nI'm out of cash.\n\n身无分文。\nI'm broke.\n\n我可没有时间闲呆着。\nI can't afford to be lazy.\nI can't afford to be idle.\nI don't have time to be lazy.\n\n","categories":["文字"]},{"title":"LaTex中的常用数学符号","url":"/latex-math-mark/","content":"\n１、指数和下标可以用^和_后加相应字符来实现。比如：\n\n![img](LaTex中的常用数学符号/foot.gif)\n\n2、平方根（square root）的输入命令为：\\sqrt，n 次方根相应地为: \\sqrt[n]。方根符号的大小由LATEX自动加以调整。也可用\\surd 仅给出\n符号。比如：\n\n![img](LaTex中的常用数学符号/sqrt.GIF)\n\n3、命令\\overline 和\\underline 在表达式的上、下方画出水平线。比如：\n\n![img](LaTex中的常用数学符号/overline.GIF)\n\n4、命令\\overbrace 和\\underbrace 在表达式的上、下方给出一水平的大括号。\n\n![img](LaTex中的常用数学符号/brace.GIF)\n\n5、向量（Vectors）通常用上方有小箭头（arrow symbols）的变量表示。这可由\\vec 得到。另两个命令\\overrightarrow 和\\overleftarrow在定义从A 到B 的向量时非常有用。\n\n![img](LaTex中的常用数学符号/vec.GIF)\n\n6、分数（fraction）使用\\frac{...}{...} 排版。一般来说，1/2 这种形式更受欢迎，因为对于少量的分式，它看起来更好些。\n\n![img](LaTex中的常用数学符号/frac.GIF)\n\n7、积分运算符（integral operator）用\\int 来生成。求和运算符（sum operator）由\\sum 生成。乘积运算符（product operator）由\\prod 生成。上限和下限用^ 和_来生成，类似于上标和下标。\n\n![img](LaTex中的常用数学符号/int.GIF)\n\n## 以下提供一些常用符号的表示方法\n\n![img](LaTex中的常用数学符号/1.GIF)\n\n![img](LaTex中的常用数学符号/2.GIF)\n\n![img](LaTex中的常用数学符号/3.GIF)\n\n![img](LaTex中的常用数学符号/4.GIF)\n\n![img](LaTex中的常用数学符号/5.GIF)\n\n![img](LaTex中的常用数学符号/6.GIF)\n\n![img](LaTex中的常用数学符号/7.GIF)","categories":["技术"]},{"title":"Operating System-Project 1","url":"/ei338-project1/","content":"\n# EI338 Project1\n\n## Project Environment\n\nI use Ubuntu 16.04 in VMware.\n\n## 1. Jiffies\n\n### Question\n\nDesign a kernel module that creates a `/proc` file named `/proc/jiffies` that reports the current value of jiffies when the `/proc/jiffies` file is read, such as with the command\n\n> cat /proc/jiffies\n\nBe sure to remove `/proc/jiffies` when the module is removed.\n\n### Answer\n\nAt the beginning of code, we should include `<linux/jiffies.h>`, because we will use jiffies from this head file. \n\n##### `/proc` File System\n\nThe `/proc` file system is a “pseudo” file system that exists only in kernel memory and is used primarily for querying various kernel and per-process statistics.\n\n##### proc_init()\n\n```c\n/* This function is called when the module is loaded. */\nint proc_init(void)\n{\n/* creates the /proc/jiffies entry */\n\tproc_create(PROC_NAME, 0666, NULL, &proc_ops);\n\t\n\treturn 0;\n}\n```\n\nThis fuction create the new `/proc/jiffies` entry using the `proc_create()` , and passed `proc_ops`, which contains a reference to a struct file-operations. This struct initializes the `.owner` and `.read` members. The value of `.read` is the name of the function `proc_read()` that is to be called whenever `/proc/jiffies` is read.\n\n##### proc_exit(void)\n\n```c\n/* This function is called when the module is removed. */\nvoid proc_exit(void)\n{\n\t/* removes the /proc/jiffies entry */\n\tremove_proc_entry(PROC_NAME, NULL);\n}\n```\n\nThe `/proc/jiffies` file is removed in the module exit point `proc_exit() `using the function `remove_proc_entry()`.\n\n##### proc_read()\n\n```c\n/* This function is called each time /proc/jiffies is read */\nssize_t proc_read(struct file *file, char __user *usr_buf, size_t count, loff_t *pos)\n{\n\tint rv = 0;\n\tchar buffer[BUFFER_SIZE];\n\tstatic int completed = 0;\n\t\n\tif (completed) {\n\t\tcompleted = 0;\n\t\treturn 0;\n\t}\n\t\n\tcompleted = 1;\n\t\n\trv = sprintf(buffer, \"%lu\\n\", jiffies);\n\t\n\t/* copies kernel space buffer to user space usr buf */\n\tcopy_to_user(usr_buf, buffer, rv);\n\t\n\treturn rv;\n}\n```\n\nIn this fuction,  we write the unsigned long int `jiffies` into the variable buffer where buffer exists in kernel memory. Since `/proc/jiffies` can be accessed from user space, we must copy the contents of buffer to user space using the kernel function `copy_to_user()`. This function copies the contents of kernel memory buffer to the variable `usr_buf`, which exists in user space. \n\nEach time the `proc/jiffies` file is read, the `proc_read()` function is called repeatedly until it returns 0, so there must be logic to ensure that this function returns 0 once it has collected the data that is to go into the corresponding `/proc/jiffies` file.\n\n##### Makefile\n\n```makefile\nobj-m += jiffies.o\nall:\n\tmake -C /lib/modules/$(shell uname -r)/build M=$(PWD) modules\nclean:\n\tmake -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean\n```\n\nActually, this part of code is easy, and directly from the demo code.\n\n### Result Picture\n\n![7ef1dd6a2ed90ceb87f469673c7d554](Operating-System-Project-1/7ef1dd6a2ed90ceb87f469673c7d554.png)\n\n```shell\nstarky99@ubuntu:~/workspace/hw1/2$ make\nmake -C /lib/modules/4.15.0-45-generic/build M=/home/starky99/workspace/hw1/2 modules\nmake[1]: Entering directory '/usr/src/linux-headers-4.15.0-45-generic'\nMakefile:975: \"Cannot use CONFIG_STACK_VALIDATION=y, please install libelf-dev, libelf-devel or elfutils-libelf-devel\"\n  CC [M]  /home/starky99/workspace/hw1/2/jiffies.o\n  Building modules, stage 2.\n  MODPOST 1 modules\n  CC      /home/starky99/workspace/hw1/2/jiffies.mod.o\n  LD [M]  /home/starky99/workspace/hw1/2/jiffies.ko\nmake[1]: Leaving directory '/usr/src/linux-headers-4.15.0-45-generic'\n\nstarky99@ubuntu:~/workspace/hw1/2$ sudo insmod jiffies.ko\nstarky99@ubuntu:~/workspace/hw1/2$ dmesg\n\nstarky99@ubuntu:~/workspace/hw1/2$ cat /proc/jiffies \n4299778197\n\nstarky99@ubuntu:~/workspace/hw1/2$ cat /proc/jiffies \n4299779247\n\nstarky99@ubuntu:~/workspace/hw1/2$ cat /proc/jiffies \n4299779836\n\nstarky99@ubuntu:~/workspace/hw1/2$ sudo rmmod jiffies \nstarky99@ubuntu:~/workspace/hw1/2$ dmesg\n```\n\n![9966c465ba09eeb9cd8d0647dccd624](Operating-System-Project-1/9966c465ba09eeb9cd8d0647dccd624.png)\n\n---\n\n## 2. second\n\n### Question\n\nDesign a kernel module that creates a proc file named `/proc/seconds` that reports the number of elapsed seconds since the kernel module was loaded. This will involve using the value of `jiffies` as well as the HZ  rate. When a user enters the command\n\n> cat /proc/seconds\n\nyour kernel module will report the number of seconds that have elapsed since the kernel module was first loaded. Be sure to remove `/proc/seconds` when the module is removed.\n\n### Answer\n\nBase on the first question and introduction from the book. This question is also easy.\n\nWe should use a new model to introduce the new variable `HZ` using the following code\n\n```c\n#include <asm/param.h>\n```\n\nAnd change the name of the files to `second`.\n\n```c\n#define PROC_NAME \"second\"\n```\n\n##### proc_init()\n\n```c\n/* This function is called when the module is loaded. */\nint proc_init(void)\n{\n/* creates the /proc/second entry */\n\tproc_create(PROC_NAME, 0666, NULL, &proc_ops);\n\tt = jiffies;\n\treturn 0;\n}\n```\n\nIn this fuction, when the file is created, we should store jiffies of this second using variable `t`.\n\n##### proc_read()\n\n```c\n/* This function is called each time /proc/second is read */\nssize_t proc_read(struct file *file, char __user *usr_buf, size_t count, loff_t *pos)\n{\n\tint rv = 0;\n\tchar buffer[BUFFER_SIZE];\n\tstatic int completed = 0;\n\t\n\tif (completed) {\n\t\tcompleted = 0;\n\t\treturn 0;\n\t}\n\t\n\tcompleted = 1;\n\t\n\trv = sprintf(buffer, \"%lu\\n\", (jiffies-t)/HZ);\n\t\n\t/* copies kernel space buffer to user space usr buf */\n\tcopy_to_user(usr_buf, buffer, rv);\n\t\n\treturn rv;\n}\n```\n\nIn this fuction, we just need to caluculate the time by division. With the knowledge of c language, it is very easy to realize.\n\n```c\nrv = sprintf(buffer, \"%lu\\n\", (jiffies-t)/HZ);\n```\n\nWhat is a little bit difficult is that we need to learn how to formatted output, which is a little bit different from it in python.\n\n### Result Picture\n\n![5252ef844a68cb36bc25a949e6a7302](Operating-System-Project-1/5252ef844a68cb36bc25a949e6a7302.png)\n\n![0c3ae5c422d757562214cacf4b6dfab](Operating-System-Project-1/0c3ae5c422d757562214cacf4b6dfab.png)\n\nIn the command line, we can see the second has been calculated and shown on the screen.\n\nThese pictures do not contain `s` in the output, but it is also very easy to add it.\n\nJust change my former code to\n\n```c\nrv = sprintf(buffer, \"%lus\\n\", (jiffies-t)/HZ);\n```\n\ncan solve this problem.(I change it when I check my code with TA, while the pictures are out of date.)\n\n\n\n","tags":["课程"],"categories":["算法"]},{"title":"人间失格","url":"/no-longer-human/","content":"\n> 只是，一切都将消逝。\n>\n\n\n读这本书的时候，是在一个周五没课的清晨。图书馆，我顺手抄起了这本别人刚还的书。\n\n本以为这本书也想我之前顺手拿起的书一样，短暂翻翻，只停留在我站着等电梯的一瞬。没想到，一股脑就翻完了这本书。\n\n读书的时候也有一些思绪涌出来：比如说突然想到高中时候语文老师说的，要多看看书，写一些文字，可以邮寄给她。感觉确实，每日忙于精密的严谨的知识等待探寻，这样一点点不一样的文学别有一番韵味。还有比如说，生命中的女人，读罢，更能让人体会她们的善意美丽与可贵。等等。\n\n---\n\n《人间失格》被认为是太宰治先生的自传，完成于他39岁，之后他就和情人在玉川上水河投水身亡。\n\n这本书也是很新的译作，19年2月出版，田原先生译作。\n\n挺有趣的一本书，看别人的人生，争取不走他的路。\n\n---\n\n也不太知道写什么，不怎么知道怎么表达，希望每次都能进步，写的更加言之有物吧~\n\n---\n\n![1571372716924](人间失格/1571372716924.png)\n\nOver","tags":["读书笔记"],"categories":["文字"]},{"title":"核能开发和利用","url":"/development-and-utilization-of-nuclear-energy/","content":"# 引言 世界第一座核反应堆的诞生\n\n1942年12月2日，第二次世界大战中一个普通的日子。\n\n1942年12月2日，人类科技发展史上一个普通的日子。\n\n美国芝加哥大学斯塔格运动场西看台下的一个网球场，世界上第一座核反应堆。\n\n芝加哥反应堆第一号。\n\n# 第1章 为什么要开发核能\n\n核能不直接产生二氧化碳，间接产生的二氧化碳也比燃烧化石能源少一个数量级。\n\n从中国的能源状况来看，发展核能是非常必要的。\n\n# 第2章 核能发现的历史回顾\n\n曲折发展：美国三哩岛核电站 和 前苏联切尔诺贝利核电站。\n\n核电站两个影响因素：\n\n1. 核电站的安全性：但是现在已经很安全了\n2. 核电站的投资：一次性大量投资，之后的运行费就不是很高了\n\n### 最早原子概念的提出\n\nAtoms 希腊文中就是不可分割的意思。——古希腊人留基伯\n\n### 原子论的复兴\n\n道尔顿是第一个试图确定原子的质量的科学家。\n\n### 钋和镭的发现\n\n居里夫人，为了纪念当时被俄国侵占的祖国波兰，命名为钋(polonium)，放射性比铀强400倍。\n\n沥青铀矿中提炼出来了镭（数十吨沥青铀矿中提炼出0.1克的镭），放射性比铀强25万倍。\n\n### 质能守恒方程\n\n# 第3章 核燃料与核燃料循环\n\n### 链式反应\n\nP42 核子链式反应方程\n\n链式反应条件\n\n1. 铀要达到一定质量\n2. 中子的能量一定\n\n**抑制**\n\n原子弹就是很纯的铀+超过临界质量，一瞬间一起超多的反应，爆发出剧烈的能量。\n\n通过硼或者镉来进行抑制。\n\n### 放射性\n\n- 氦原子核\n- 高能电子\n- 高能光子\n\n### 核燃料\n\n铀-235，是自然界中存在的裂变材料。\n\n铀-233和钚-239并不存在，分别是由自然界中的钍-232和铀-238吸收中子后衰变生成的。\n\n### 核燃料循环\n\n铀燃料的反应堆，钍-239\n\n# 第4章 核能的军事应用\n\n### 概况\n\n**核武器代数**\n\n1代原子弹2代氢弹3代中子弹4代研制中\n\n**TNT当量（爆炸的破坏力相当于多少量的TNT)**\n\n- 原子弹 几十万吨一以下\n- 氢弹 几十万吨以上\n\n**引起下一代核裂变的中子数与引起本代核裂变的中子数之比叫做增值系数k**\n\n### 枪式原子弹\n\n一小块棒状的核材料和两块半球状的和材料合拢，三块的体积合起来超过了临界体积。\n\n制造技术简单，但是有缺点（利用率低，压缩需要很长时间，反应速度慢）\n\n小男孩——64kg铀，TNT当量1.5万吨，利用率仅为1.2%\n\n### 内爆式原子弹\n\n核材料的临界质量与其密度有关。密度越高，临界质量越小，定量的说：球形核材料的临界质量与和材料的密度的平方根成正比。密度增加一倍，临界质量减少为原来的1/4.\n\n内爆技术：利用强大的向心力将次临界状态的核材料压紧，变成高密度的超临界核材料。\n\n多点起爆，同时起爆。\n\n胖子——1945年8月9日，日本长崎，当量2.2万吨。\n\n### 核爆炸的破坏力及防护\n\n五种杀伤破坏作用：冲击波、光辐射、瞬时核辐射、剩余核辐射 和 核电磁脉冲。\n\n主要杀伤破坏作用是冲击波和光辐射。\n\n##### 光辐射\n\n35%\n\n原子弹在空中爆炸的时候，周围的空气温度可以达到几十万摄氏度，在百分之几秒到十分之几秒的很短的时间内形成一个直径约100m的大火球，亮度比一千个太阳还亮，能传播到很远的地方。\n\n防护：披遮白色反光物，或者躲入碉堡，暴露的人首先要闭眼。\n\n##### 冲击波\n\n50%\n\n核爆炸中心温度高达几百万温度到几千万温度，压强可以达到几十亿到上百亿个大气压。高温高压的蒸汽快速向外膨胀，强烈压缩空气层形成冲击波。\n\n防护：钢筋混凝土构成的掩蔽部。\n\n##### 瞬时核辐射\n\n5%\n\n爆炸一分钟内释放的核辐射，主要是中子和γ射线。\n\n对建筑物不起破坏作用，但是对人、动物有强大的杀伤作用。\n\n防护：重物质可以屏蔽γ射线，轻物质或者硼镉屏蔽中子。三层楼房的地下室就可以安全的防护中子。\n\n##### 剩余核辐射\n\n降落下来的裂变产物及核材料产生的核辐射，以及地表物质吸收核爆炸时产生的中子而形成的放射性物质产生的核辐射。\n\n主要是β射线和γ射线。\n\n防护：木板就可以挡住β射线，需要铅板挡住γ射线。\n\n##### 核电磁脉冲\n\n能量很小，但是高空爆炸时，核电磁脉冲会对电子系统造成破坏和干扰。\n\n1945~1996年，前苏联和美国共进行了1747次大气层和地下核试验，爆炸当量总和为47840万吨 TNT，是美国投在广岛和长崎两颗原子弹爆炸威力的13000 多倍，但是没有对地球引起太多的变化。\n\n### 原子弹的爆炸方式\n\n1. 大气层外爆炸（电磁脉冲）\n2. 高空爆炸（杀伤地面d暴露人员和破坏不坚固的物体）\n3. 低空爆炸（杀伤野战工事内的人员，破坏地面目标）但是对部队行动影响不大。\n4. 地面爆炸（火球接触地面的爆炸）对小面积目标造成严重的破坏。\n5. 地下爆炸（污染的形式造成障碍）\n\n原子弹爆炸时，依次出现闪光、火球和蘑菇云。\n\n### 核武器的小型化\n\n超高密度的钍临界质量只有几百克甚至几十克。\n\n两个技术：\n\n1. 内爆法提高核材料的密度\n2. 使用更高效的中子反射层\n\n### 氢弹\n\nP162 反应方程\n\n聚变反应不存在临界质量，但是需要很高的温度。\n\n只是把他们放在一起，不会发生核反应（和裂变对比)。需要很快的速度让他们克服强大的静电斥力进入核力的吸引范围，发生聚变反应。\n\n为了引发氢弹爆炸约需要六百万度，在这样的温度下，原子核的电子电离成为自由电子，原子核成为带正电的离子，这种高度电离的物质叫做等离子体。\n\n美国氢弹之父——爱德华·特勒：\n\n氢弹爆炸四步：\n\n1. 引发氢弹爆炸的原子弹\n2. 裂变\n3. 聚变\n4. 裂变（聚变产生的高能中子让壳体铀-238发生裂变，释放出更多的能量）\n\n特勒-乌拉姆模型，1952年11月1日，世界第一枚氢弹（”迈克“），在太平洋马绍尔群岛的埃尼威托岛试验成功。氢弹高6m，直径1.8m，重65吨，爆炸威力1040万吨TNT当量。他使埃卢杰拉卜岛整个沉没，地面的泉水直冲云霄，鱼类被滚烫的海水煮熟，遥远邻岛上的棕榈树化为了灰烬。\n\n莫兰德构型——《氢弹的秘密》\n\n氢弹的威力是没有限制的，因为没有一个临界的质量。按照”分级辐射内爆原理“，可以将巨变材料一级一级地串联起来进行引爆。\n\n前苏联1961年10月30日在新地岛进行了超级氢弹爆炸试验，设计威力达亿吨级，是世界上爆炸过的威力最大的。氢弹（166页，这个还没记完，下次上课再继续记录）\n\n---\n\n【我回来了，今天争取把这本书整理完】\n\n### 中子弹\n\n增强辐射弹，是第三代核武器。它是美国和北约在1958年为了阻止以前苏联为首的华约可能发生的集群坦克的进攻，增强核武器对坦克乘员的杀伤、减少对建筑物的附带破坏而提出的概念，并于1959年研制的。\n\n中子弹以高能中子的瞬时辐射作为主要杀伤，可以对人员造成重大伤亡，但是对建筑物基本没有毁伤作用。由于剩余辐射很少，又不产生放射性沾染，因此被称为“干净”氢弹。\n\n### 其他第三代核武器\n\n##### 减少剩余放射性弹\n\n可以更加减少剩余辐射，便于本方军队在核打击之后安全进入该区域进行作战。\n\n##### 增强X射线弹\n\n氢弹爆炸时，约有70%的威力通过X射线爆发出来。增强弹就是可以更加增加X射线，产生高温高压和电子脉冲，对敌方的导弹产生巨大的破坏作用。\n\n##### 核电磁脉冲弹\n\n### 核武计划\n\n不只是研制新型武器，小当量武器，而是还包括了保养，更新等。\n\n### 第四代核武器\n\n##### 金属氢武器\n\n氢气在一定的超高压力下可以转变为固态结晶甚至金属，其爆炸能量为高能炸药的25~35倍，可以点燃聚变武器。\n\n##### 反物质武器\n\n反物质武器是能量转换效率最高的武器。几毫克就可以引爆氢弹，几百毫克就可以进行星际航天飞行\n\n### 原子弹用于实战\n\n二战的时候攻击日本的两枚核武器，是仅有的两枚应用于实战的核武器。\n\n还有一枚“大男孩” 应用于第一次核试验。\n\n# 第6章 核应用技术\n\n辐射治疗、辐射育种、无损检测、食品辐射加工\n\n# 第7章辐射防护与核安全\n\n### 美国三哩岛核电站事故\n\n核泄漏没有造成太大的伤害，但是世界上第一次发生核事故，处理不当造成很多混乱。\n\n### 前苏联切尔诺贝利核电站\n\n### 福岛第一核电站事故\n\n这次事故是超强自然灾害导致的超设计基准事故。\n\n1. 1号机组按照0.18g，3、6号机组按照0.45g、0.46g设计，但是9级地震相当于0.52g，超出设计基准。由于地震，输电塔倒塌，但是应急柴油发电机和自动安全防护装置还是在正常工作，未对核电站造成致命破坏。\n2. 地震后引发的14m海啸大大超出了核电站5.7m洪水高程设防，导致柴油发电机停止运行。之后改成可以维持8个小时的蓄电池对仪控供电。\n3. 全厂断电后，汽轮机驱动堆芯隔离冷却系统投入。然而后期一系列连锁反应，导致汇聚在厂房顶部的大量氢气爆炸，造成核泄露。\n\n核电站使用了海水冷却，海水腐蚀性能强，核电站的关键设备无法使用了，核电站的报废的命运注定了。\n\n# 第8章 核能的未来发展\n\n### 三个关键问题：\n\n1. 研究与发展更先进的核反应堆。\n\n2. 逐步解决高放废物的最终处置问题。\n\n   现在的处理办法是玻璃固化，然后深埋在与生物圈隔离的地下。\n\n3. 解决防止核扩散的问题\n\n---\n\nOver","tags":["读书笔记"],"categories":["文字"]},{"title":"Astar算法走迷宫","url":"/Astar-maze/","content":"\n我理解这个算法，最本质的就是`F = G + H (G 为当前路径长度，H为估计长度) `\n\n每次挑选出最小的 F 值进行进一步的探索，探索同时更新相邻点的 F 值。\n\n我们用代码来看吧\n\n# Maze Problem\n\n### 输入\n\n输入文件是`maze.txt`，使用123来区分障碍物、起始点、终止点。\n\n![1570980534202](Astar算法走迷宫/1570980534202.png)\n\n生成图像是这样\n\n![1570980564433](Astar算法走迷宫/1570980564433.png)\n\n### Code\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpathes\nimport math\n\n\ndef loadMap(file):\n    # Load map txt as matrix.\n    # 0: path, 1: obstacle, 2: start point, 3: end point, 4: path\n    f = open(file)\n    lines = f.readlines()\n    numOfLines = len(lines)\n    returnMap = np.zeros((numOfLines, 40))\n    A_row = 0\n    for line in lines:\n        list = line.strip().split(' ')\n        returnMap[A_row:] = list[0:40]\n        A_row += 1\n    return returnMap\n\n\nclass Node:\n    def __init__(self, parent, x, y, dist):\n        self.parent = parent\n        self.x = x\n        self.y = y\n        self.dist = dist\n\n\nclass A_Star:\n    def __init__(self, map):\n        self.map = map\n        self.start_x, self.start_y = 0, 0\n        self.end_x, self.end_y = 39, 26\n        self.open, self.close = [], []  # 不知道用不用这么写\n        self.path = []\n\n    # 主调函数\n    def a_star(self):\n        self.find_path()\n        self.mark_path(self.path)\n        print(self.path[::-1])\n        self.drawMap()\n\n    # 查找路径的函数\n    def find_path(self):\n        # 构建开始节点\n        p = Node(None, self.start_x, self.start_y, 0.0)\n        while True:\n            # 扩展节点\n            self.extend_round(p)\n            # 如果open表为空，则不存在路径，返回\n            if not self.open:\n                return\n            # 取F值最小的节点\n            idx, p = self.get_best()\n            # 到达终点，生成路径，返回\n            if self.is_target(p):\n                self.make_path(p)\n                return\n            # 把此节点加入close表，并从open表里删除\n            self.close.append(p)\n            del self.open[idx]\n\n    # 生成路径\n    def make_path(self, p):\n        while p:\n            # 从结束点回溯到开始点，开始点的parent == None\n            self.path.append((p.x, p.y))\n            p = p.parent\n\n    # 标记路径\n    def mark_path(self, path):\n        for x, y in path:\n            self.map[y, x] = 4\n\n    # 判断是否为终点\n    def is_target(self, i):\n        return i.x == self.end_x and i.y == self.end_y\n\n    # 取F值最小的节点\n    def get_best(self):\n        best = None\n        bv = 9999999  # MAX值\n        bi = -1\n        for idx, i in enumerate(self.open):\n            value = self.get_dist(i)\n            if value < bv:\n                best = i\n                bv = value\n                bi = idx\n            return bi, best\n\n    # 求距离\n    def get_dist(self, i):\n        # F = G + H\n        # G 为当前路径长度，H为估计长度\n        return i.dist + math.sqrt((self.end_x - i.x) ** 2 + (self.end_y - i.y) ** 2)\n\n    # 扩展节点\n    def extend_round(self, p):\n        # 八个方向移动\n        xs = (-1, 0, 1, -1, 1, -1, 0, 1)\n        ys = (-1, -1, -1, 0, 0, 1, 1, 1)\n        # 上下左右四个方向移动\n        xs = (0, -1, 1, 0)\n        ys = (-1, 0, 0, 1)\n        for x, y in zip(xs, ys):\n            new_x, new_y = x + p.x, y + p.y\n            # 检查位置是否合法\n            if not self.is_valid_coord(new_x, new_y):\n                continue\n            # 构造新的节点，计算距离\n            node = Node(p, new_x, new_y, p.dist + self.get_cost(p.x, p.y, new_x, new_y))\n            # 新节点在关闭列表，则忽略\n            if self.node_in_close(node):\n                continue\n            i = self.node_in_open(node)\n            # 新节点在open表\n            if i != -1:\n                # 当前路径距离更短\n                if self.open[i].dist > node.dist:\n                    # 更新距离\n                    self.open[i].parrent = p\n                    self.open[i].dist = node.dist\n                continue\n            # 否则加入open表\n            self.open.append(node)\n\n    # 移动距离，直走1.0，斜走1.4\n    def get_cost(self, x1, y1, x2, y2):\n        if x1 == x2 or y1 == y2:\n            return 1.0\n        return 1.4\n\n    # 检查节点是否在close表\n    def node_in_close(self, node):\n        for i in self.close:\n            if node.x == i.x and node.y == i.y:\n                return True\n        return False\n\n    # 检查节点是否在open表，返回序号\n    def node_in_open(self, node):\n        for i, n in enumerate(self.open):\n            if node.x == n.x and node.y == n.y:\n                return i\n        return -1\n\n    # 判断位置是否合法，超出边界或者为阻碍\n    def is_valid_coord(self, x, y):\n        if x < 0 or x > 39 or y < 0 or y > 26:\n            return False\n        return self.map[y, x] != 1\n\n    def drawMap(self):\n        # Visulize the maze map.\n        # Draw obstacles(1) as red rectangles. Draw path(0) as white rectangles. Draw starting point(2) and ending point(3) as circles.\n        rowNum = len(self.map)\n        colNum = len(self.map[0])\n        ax = plt.subplot()\n        param = 1\n        for col in range(colNum):\n            for row in range(rowNum):\n                if self.map[row, col] == 2:\n                    circle = mpathes.Circle([param * col + param / 2.0, param * row + param / 2.0], param / 2.0,\n                                            color='g')\n                    ax.add_patch(circle)\n                elif self.map[row, col] == 3:\n                    circle = mpathes.Circle([param * col + param / 2.0, param * row + param / 2.0], param / 2.0,\n                                            color='y')\n                    ax.add_patch(circle)\n                elif self.map[row, col] == 1:\n                    rect = mpathes.Rectangle([param * col, param * row], param, param, color='r')\n                    ax.add_patch(rect)\n                elif self.map[row, col] == 4:\n                    rect = mpathes.Rectangle([param * col, param * row], param, param, color='b')\n                    ax.add_patch(rect)\n                else:\n                    rect = mpathes.Rectangle([param * col, param * row], param, param, color='w')\n                    ax.add_patch(rect)\n        # Improve visualization\n        plt.xlim((0, colNum))\n        plt.ylim((0, rowNum))\n        my_x_ticks = np.arange(0, colNum + 1, 1)\n        my_y_ticks = np.arange(0, rowNum + 1, 1)\n        plt.xticks(my_x_ticks)\n        plt.yticks(my_y_ticks)\n        axx = plt.gca()\n        axx.xaxis.set_ticks_position('top')\n        axx.invert_yaxis()\n        plt.grid()\n        # Save maze image.\n        plt.savefig('./A_Star_maze.jpg')\n\n\nif __name__ == \"__main__\":\n    A_Star(loadMap('maze.txt')).a_star()\n\n```\n\n相应的注释都在代码里面。\n\n代码使用的是一种方便理解的方式展示，要不我觉得使用一个最小堆的数据结构说不定更能展现Astar算法的内涵。\n\n这个也是一个代码项目的训练，能够从头到尾设计，用代码实现自己的思路还是一件挺让人开心的事儿。\n\n### 输出\n\n输出的路径\n\n```python\n[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (1, 7), (2, 7), (2, 6), (2, 5), (2, 4), (2, 3), (3, 3), (4, 3), (5, 3), (5, 4), (5, 5), (5, 6), (4, 6), (4, 7), (4, 8), (4, 9), (4, 10), (4, 11), (5, 11), (5, 12), (5, 13), (5, 14), (5, 15), (6, 15), (7, 15), (8, 15), (9, 15), (10, 15), (11, 15), (12, 15), (13, 15), (14, 15), (15, 15), (16, 15), (16, 16), (16, 17), (16, 18), (16, 19), (16, 20), (17, 20), (18, 20), (19, 20), (20, 20), (21, 20), (22, 20), (23, 20), (24, 20), (25, 20), (25, 21), (26, 21), (27, 21), (28, 21), (29, 21), (30, 21), (30, 22), (30, 23), (31, 23), (32, 23), (33, 23), (34, 23), (35, 23), (35, 24), (35, 25), (35, 26), (36, 26), (37, 26), (38, 26), (39, 26)]\n```\n\n输出的路径\n\n![1570980767366](Astar算法走迷宫/1570980767366.png)\n\n---\n\n第一次写代码的时候有点没有经验，使用的是直接点之间的距离。\n\n在后续研究和思考的过程中，发现使用曼哈顿距离更好一些。\n\n```python\n# 求距离\ndef get_dist(self, i):\n    # F = G + H\n    # G 为当前路径长度，H为估计长度\n    return i.dist + abs(self.end_x - i.x) + abs(self.end_y - i.y)\n```\n\n![A_Star_maze](Astar算法走迷宫/A_Star_maze.jpg)\n\n同时也注意到，改变探索的方向顺序会对有些算法的路径产生不同的影响。\n\n同时也还注意到，会产生几种不同的路径，但是都是最短路径（长度值相等）\n\n![BFS_maze](Astar算法走迷宫/BFS_maze.jpg)\n\nBFS\n\n![DFS_maze](Astar算法走迷宫/DFS_maze.jpg)\n\nDFS","categories":["技术"]},{"title":"游好蛙泳","url":"/swim-leads-to-good-health/","content":"\n# 游泳英语怎么说~\n\n![img](游好蛙泳/timgD9NEBH6F-750x420.jpg)\n\n### 泳姿的英语\n\n蛙泳 breaststroke\n\n自由泳 freestyle\n\n仰泳 backstroke\n\n蝶泳 butterfly stroke\n\n### 游泳装备的英语\n\n泳衣（总称） swimwear\n\n女士泳装 swimsuit\n\n泳裤 swimming trunks\n\n泳帽 bathing cap/swimming cap\n\n泳镜 swimming goggles\n\n游泳圈 swim ring\n\n浮板 kickboard\n\n# 蛙泳技巧\n\n游了这么长时间的蛙泳确实有很多小细节没有做到。\n\n1. 蛙泳的膝盖不必要并拢，但是脚要靠近臀部\n\n2. 手划水到下巴处，然后伸出（没有太多停顿，需要胳膊的力量）\n\n3. 蛙泳转身：\n\n   - 触壁 \n\n     ![1570867403312](游好蛙泳/1570867403312.png)\n\n     双手同时接触池壁-保持在同一高度\n\n   - 转身 \n\n     一只手在水里转过来，身子转过来，另一只手从水面上插进水中。\n\n   - 滑行的时候身体呈流线型，双臂划至大腿两侧进行牵引，同时蹬一下水。再蹬一下水，回到水面。\n\n4. 收大腿小腿，勾脚掌踹水\n\n5. 手部动作跟脚步动作  为什么不是同时的？\n\n   为了减阻,等手伸直上半身呈流线型的时候再蹬腿,同理,等双腿并拢,脚尖绷直了再划手,才能获得最好的游进效果。\n\n6. 蛙泳膝盖外分还是并拢？\n\n   普遍来说，收腿结束膝盖不宽于肩\n\n---\n\n震惊，191013参加完新生杯蛙泳比赛的瀚文见识到了真正的速度。。。\n\n我游的实在是太慢了，还需要继续努力啊！！！\n\n但是发现了我之前每次游都是2km，还是很棒的，继续努力！\n\n这次比赛成绩：\n\n25m蛙泳：26s\n\n50m蛙泳：53s\n\n还需要继续努力，期末考完试再测试一下~"},{"title":"aws搭建科学上网","url":"/ssr-vpn/","content":"\n# aws-云主机\n\n我一般是用的是`ubuntu`\n\n按顺序执行下列指令就好\n\n```bash\nsudo apt update\nsudo apt-get install python-pip\nsudo pip install shadowsocks\n```\n\n上面的命令执行了安装ssr的操作，接下来配置并启动ssr\n\n```bash\nsudo ssserver -p 2333 -k password -m aes-256-cfb -d start\n```\n\n端口 2333\n\n密码 password\n\n加密方式 aes-256-cfb\n\n```bash\n**有的时候启动会出错（ssr版本原因）**\n\n修改方法：\n\n用vim打开文件：\nvim /usr/local/lib/python2.7/dist-packages/shadowsocks/crypto/openssl.py \n\n将 cleanup 全替换成 reset (52行、111行)\n\n将第52行libcrypto.EVP_CIPHER_CTX_cleanup.argtypes = (c_void_p,)\n改为libcrypto.EVP_CIPHER_CTX_reset.argtypes = (c_void_p,)\n\n将第111行libcrypto.EVP_CIPHER_CTX_cleanup(self._ctx)\n改为libcrypto.EVP_CIPHER_CTX_reset(self._ctx)\n\n保存并退出\n```\n\n这个时候我们检查一下端口是否打开，可以使用这条命令。\n\n```bash\nnetstat -tln\n```\n\n# 本地电脑-win\n\n在 ssr 官方下载文件，[点击下载](https://github.com/shadowsocksrr/shadowsocksr-csharp/releases/download/4.9.0/ShadowsocksR-win-4.9.0.zip)\n\n解压压缩包到一个文件夹，点击里面唯一一个小飞机图标，打开配置页面。\n\n填写以下三项：\n服务器地址：*\n\n服务器端口：2333\n\n密码：password\n确认配置一样，点击确定进行下一步\n\n右键点击屏幕右下角的小飞机\n\n![1570791896792](aws搭建科学上网/1570791896792.png)\n\n选择系统代理 PAC模式（这步是开启ssr，不点击不行，不要开启全局模式）\nPAC模式可以智能识别国内国外网站，国外用vpn，国内正常访问\n\n这个时候就可以开心的上网啦~\n\n---\n\n测试网站：\nhttps://www.youtube.com/\nhttps://www.google.com.hk/\n\n\n\n","categories":["技术"]},{"title":"Dlib学习官方案例","url":"/dlib-python-demo/","content":"\n# [Binary Classification](http://dlib.net/svm_binary_classifier.py.html)\n\n训练一个分类器，实现二分类。\n\n```python\nimport dlib\n\ntry:\n    import cPickle as pickle\nexcept ImportError:\n    import pickle\n\nx = dlib.vectors()\ny = dlib.array()\n\n# Make a training dataset.  Here we have just two training examples.  Normally\n# you would use a much larger training dataset, but for the purpose of example\n# this is plenty.  For binary classification, the y labels should all be either +1 or -1.\nx.append(dlib.vector([1, 2, 3, -1, -2, -3]))\ny.append(+1)\n\nx.append(dlib.vector([-1, -2, -3, 1, 2, 3]))\ny.append(-1)\n\n# Now make a training object.  This object is responsible for turning a\n# training dataset into a prediction model.  This one here is a SVM trainer\n# that uses a linear kernel.  If you wanted to use a RBF kernel or histogram\n# intersection kernel you could change it to one of these lines:\n#  svm = dlib.svm_c_trainer_histogram_intersection()\n#  svm = dlib.svm_c_trainer_radial_basis()\nsvm = dlib.svm_c_trainer_linear()\nsvm.be_verbose()\nsvm.set_c(10)\n\n# Now train the model.  The return value is the trained model capable of making predictions.\nclassifier = svm.train(x, y)\n\n# Now run the model on our data and look at the results.\nprint(\"prediction for first sample:  {}\".format(classifier(x[0])))\nprint(\"prediction for second sample: {}\".format(classifier(x[1])))\n\n# classifier models can also be pickled in the same was as any other python object.\nwith open('saved_model.pickle', 'wb') as handle:\n    pickle.dump(classifier, handle, 2)\n\n```\n\n# [CNN Face Detector](http://dlib.net/cnn_face_detector.py.html)\n\n导入预训练模型并且用这个找寻图片中的脸。\n\n```python\nimport sys\nimport dlib\n\nif len(sys.argv) < 3:\n    print(\n        \"Call this program like this:\\n\"\n        \"   ./cnn_face_detector.py mmod_human_face_detector.dat ../examples/faces/*.jpg\\n\"\n        \"You can get the mmod_human_face_detector.dat file from:\\n\"\n        \"    http://dlib.net/files/mmod_human_face_detector.dat.bz2\")\n    exit()\n\ncnn_face_detector = dlib.cnn_face_detection_model_v1(sys.argv[1])\nwin = dlib.image_window()\n\nfor f in sys.argv[2:]:\n    print(\"Processing file: {}\".format(f))\n    img = dlib.load_rgb_image(f)\n    # The 1 in the second argument indicates that we should upsample the image\n    # 1 time.  This will make everything bigger and allow us to detect more\n    # faces.\n    dets = cnn_face_detector(img, 1)\n    '''\n    This detector returns a mmod_rectangles object. This object contains a list of mmod_rectangle objects.\n    These objects can be accessed by simply iterating over the mmod_rectangles object\n    The mmod_rectangle object has two member variables, a dlib.rectangle object, and a confidence score.\n\n    It is also possible to pass a list of images to the detector.\n        - like this: dets = cnn_face_detector([image list], upsample_num, batch_size = 128)\n\n    In this case it will return a mmod_rectangless object.\n    This object behaves just like a list of lists and can be iterated over.\n    '''\n    print(\"Number of faces detected: {}\".format(len(dets)))\n    for i, d in enumerate(dets):\n        print(\"Detection {}: Left: {} Top: {} Right: {} Bottom: {} Confidence: {}\".format(\n            i, d.rect.left(), d.rect.top(), d.rect.right(), d.rect.bottom(), d.confidence))\n\n    rects = dlib.rectangles()\n    rects.extend([d.rect for d in dets])\n\n    win.clear_overlay()\n    win.set_image(img)\n    win.add_overlay(rects)\n    dlib.hit_enter_to_continue()\n\n```\n\n![1570762436554](Dlib学习官方案例/1570762436554.png)\n\n![1570762460906](Dlib学习官方案例/1570762460906.png)\n\n# [Face Landmark Detection](http://dlib.net/face_landmark_detection.py.html)\n\n```python\nimport sys\nimport os\nimport dlib\nimport glob\n\nif len(sys.argv) != 3:\n    print(\n        \"Give the path to the trained shape predictor model as the first \"\n        \"argument and then the directory containing the facial images.\\n\"\n        \"For example, if you are in the python_examples folder then \"\n        \"execute this program by running:\\n\"\n        \"    ./face_landmark_detection.py shape_predictor_68_face_landmarks.dat ../examples/faces\\n\"\n        \"You can download a trained facial shape predictor from:\\n\"\n        \"    http://dlib.net/files/shape_predictor_68_face_landmarks.dat.bz2\")\n    exit()\n\npredictor_path = sys.argv[1]\nfaces_folder_path = sys.argv[2]\n\ndetector = dlib.get_frontal_face_detector()\npredictor = dlib.shape_predictor(predictor_path)\nwin = dlib.image_window()\n\nfor f in glob.glob(os.path.join(faces_folder_path, \"*.jpg\")):\n    print(\"Processing file: {}\".format(f))\n    img = dlib.load_rgb_image(f)\n\n    win.clear_overlay()\n    win.set_image(img)\n\n    # Ask the detector to find the bounding boxes of each face. The 1 in the\n    # second argument indicates that we should upsample the image 1 time. This\n    # will make everything bigger and allow us to detect more faces.\n    dets = detector(img, 1)\n    print(\"Number of faces detected: {}\".format(len(dets)))\n    for k, d in enumerate(dets):\n        print(\"Detection {}: Left: {} Top: {} Right: {} Bottom: {}\".format(\n            k, d.left(), d.top(), d.right(), d.bottom()))\n        # Get the landmarks/parts for the face in box d.\n        shape = predictor(img, d)\n        print(\"Part 0: {}, Part 1: {} ...\".format(shape.part(0),\n                                                  shape.part(1)))\n        # Draw the face landmarks on the screen.\n        win.add_overlay(shape)\n\n    win.add_overlay(dets)\n    dlib.hit_enter_to_continue()\n```\n\n![1570762935096](Dlib学习官方案例/1570762935096.png)\n\n![1570763487757](Dlib学习官方案例/1570763487757.png)\n\n但是对于太小的图片，就无法检测出每个人的人脸\n\n![1570763528573](Dlib学习官方案例/1570763528573.png)\n\n","categories":["技术"]},{"title":"Dlib遇到的坑","url":"/dlib-errs/","content":"\n1. `Dlib` 库在 `PyCharm` 里面，不要把 `py` 文件的名字设置成 `dlib.py`。\n\n2. 标准样例中给的是在命令行中调用的格式（确实这种格式好一些，方便和外界交互，连在一起）\n\n3. 我试图分开`dlib.point`\n\n   ```python\n    print(\"Part {} : x={}, y={}\".format(i,shape.part(i)[0],shape.part(i)[1]))\n   \n   TypeError: 'dlib.point' object is not subscriptable\n   ```\n\n   *subscriptable*的意思是可有下标的意思。\n\n   错误的原因就是把不具有下标操作的对象用成了对象[i]，比如int对象变量[i]就会报错。\n","categories":["技术"]},{"title":"我的Dlib安装日志","url":"/install-dlib/","content":"\n最近准备做一个人脸特征提取的项目，在网上看到Dlib这个库非常适合。之前也有初步接触过这个库，正好借这个机会来深入学习一下！\n\n安装Dlib的时候按照网上的说明，不能够直接`pip install dlib`.\n\n我按照一下的安装方式安装成功：\n\n1. 安装VS2019，选择里面的桌面C++程序，确认安装的里面包含了 `cmake` 组件。\n2. 在 Anaconda 里面执行`pip install dlib`。\n\n需要等待一定的时间，然后就安装完成啦。\n\n---\n\n直接`pip install dlib`的话，会提示你没有`cmake`，但是你直接装`pip install cmake`，也会报错。\n\n所以使用 VS2019 的方式进行肯定正确的安装。","tags":["Dlib"],"categories":["技术"]},{"title":"《美国的故事》","url":"/americanStory/","content":"\n\n\n# 美国的故事\n\n## 第一章——美国独立\n\n#### 殖民时代\n\n（美洲是一块殖民的土地）\n\n​\t詹姆斯城（弗吉尼亚州）\n\n​\t五月花号——《五月花号公约》 漂到了马萨诸塞州（'对全体殖民地人员'）\n\n​\t贵族 >> 小地主 >> 白奴（两种成分①穷②犯人流放）>>黑奴\n\n#### 税\n\n​\t经济逐渐和英国经济独立， 英国还想收税\n\n​\t印花税 —— 印刷品的税\n\n​\t\t\t纽约第一次《权利与自由宣言》 ×新英格兰人，而是美利坚人\n\n​\t英国取消了印花税，出台了《唐森德条例》：向所有殖民地从英国进口的商品征收商品税\n\n​\t\t\t波士顿惨案\t\n\n​\t英国保留了一项税——茶叶税（每磅收3便士）\n\n​\t\t\t“波士顿倾茶事件”\n\n​\t费城——第一届大陆会议的召开\n\n#### 列克星敦的枪声\n\n​\t《独立宣言》1776年7月4日\n\n​\t\t\t*<u>**宾夕法尼亚**</u>的议会大厦，*<u>**托马斯·杰斐逊**</u>主持撰写的《北美13州联合一致的共同宣言》\n\n#### 萨拉托加之战\n\n​\t转折点：之前是收视，之后逐步占据优势至取得了胜利\n\n#### 寻求帮助\n\n​\t富兰克林寻求法国等国的帮助（舰队、武器、资金）\t\n\n## 美国内战\n\n#### 购买与掠夺\n\n购买土地：\n\n1. 法国——路易斯安那州：\n   - 那个时候拿破仑和英国打仗，卖给美国①钱②关系\t\t\n   - 黑土地，世界上最大的粮仓之一\n2. 俄国——阿拉斯加\t\t\t\n   - 1728年沙皇 白令舰长\n\n掠夺土地：\n\n1. 佛罗里达——From西班牙\n2. 德克萨斯——From墨西哥\n\n从阿拉巴契亚山脉扩展到整个美国，本土有49个州\n\n#### 黑奴\n\n资本主义+种族主义\n\n南方 支持农奴制度；北方禁奴\n\n林肯是共和党人，共和党禁奴；南方支持农奴制度\n\n亚伯拉罕·林肯\n\n南方：罗伯特·李 将军 VS 北方：谨慎的麦克莱伦将军\n\n##### 1862年9月22日《解放宣言》\n\n1. 《宅地法》 $10 换取西部160英亩的土地\n2. 武装黑人：黑人也可以加入联邦军\n3. 《征兵法》：义务兵制：20-45岁都有当兵的制度\n\n##### 1863年7月：葛底斯堡战役\n\n​\t\t历史上最惨烈的战争\n\n​\t\t\t\t——民主、自由与正义的胜利\n\n##### 1863年11月：葛底斯堡演说\n\n## 美国的工业革命\n\n\n\n","tags":["美国","读书笔记","历史"],"categories":["文字"]},{"title":"自习教室安排时间","url":"/2019fall-self-study/","content":"\n震惊！\n---\n\n居然被赶出来了（XY111的周五下午6点）\n\n估计平时晚上8点之后正常自习就可以啦~\n\n贴一下上课时间表吧~\n\n---\n\n从教学信息服务网上面找到了自习时间的安排。\n\n下院114、115是通宵自习教室，115同时也是早读教室\n\n# 周三\n\n![1569638795662](自习教室安排时间/1569638795662.png)\n\n从时间上面看，我们最喜欢的***下院111***早上有两门课，所以自习时间可以从12点一直持续到晚上，都不会有人打扰。\n\n如果想要早上来学习，我们的选择可以是在115早读，然后在101-103学到早上10点。。。\n\n![1569639393169](自习教室安排时间/1569639393169.png)\n\n【鲁莽的网页，做这个感觉不如随机应变意义大】\n\n早上要是能起来，不如拍照+吃早饭+去图书馆了😀\n\n# 周五\n\n***下院111***的情况类似。\n\n只不过对于上午的情况，我们多了一个完整的选择——***下院101***\n\n![1569639589734](自习教室安排时间/1569639589734.png)\n\n可以早读***下院105***，加***下院101***一上午，加***下院111***一天的学习。\n\n# 周六周日\n\n对课程无感，努力学习吧！\n\n\n\n\n\n---\n\n一学期过去啦，很幸福很快乐的生活。\n\n下院真的特别适合学习啦。\n\n一学期平均成绩也是A。\n\n继续努力啦！","tags":["课程"]},{"title":"aws-EC2定价表","url":"/aws-ec2-price/","content":"\n# Windows\n\n### 弗吉尼亚北部\n\n| p2.xlarge   | 4    | 12   | 61 GiB  | 仅限 EBS | 每小时 1.084 USD  |\n| ----------- | ---- | ---- | ------- | -------- | ----------------- |\n| p2.8xlarge  | 32   | 94   | 488 GiB | 仅限 EBS | 每小时 8.672 USD  |\n| p2.16xlarge | 64   | 188  | 768 GiB | 仅限 EBS | 每小时 17.344 USD |\n\n### 俄亥俄\n\n| p2.xlarge   | 4    | 12   | 61 GiB  | 仅限 EBS | 每小时 1.084 USD  |\n| ----------- | ---- | ---- | ------- | -------- | ----------------- |\n| p2.8xlarge  | 32   | 94   | 488 GiB | 仅限 EBS | 每小时 8.672 USD  |\n| p2.16xlarge | 64   | 188  | 768 GiB | 仅限 EBS | 每小时 17.344 USD |\n\n### 俄勒冈\n\n| p2.xlarge   | 4    | 12   | 61 GiB  | 仅限 EBS | 每小时 1.084 USD  |\n| ----------- | ---- | ---- | ------- | -------- | ----------------- |\n| p2.8xlarge  | 32   | 94   | 488 GiB | 仅限 EBS | 每小时 8.672 USD  |\n| p2.16xlarge | 64   | 188  | 768 GiB | 仅限 EBS | 每小时 17.344 USD |\n\n### 香港\n\n暂无p2\n\n### 孟买\n\n| p2.xlarge   | 4    | 12   | 61 GiB  | 仅限 EBS | 每小时 1.902 USD  |\n| ----------- | ---- | ---- | ------- | -------- | ----------------- |\n| p2.8xlarge  | 32   | 94   | 488 GiB | 仅限 EBS | 每小时 15.216 USD |\n| p2.16xlarge | 64   | 188  | 768 GiB | 仅限 EBS | 每小时 30.432 USD |\n\n### 新加披\n\n| p2.xlarge   | 4    | 12   | 61 GiB  | 仅限 EBS | 每小时 1.902 USD  |\n| ----------- | ---- | ---- | ------- | -------- | ----------------- |\n| p2.8xlarge  | 32   | 94   | 488 GiB | 仅限 EBS | 每小时 15.216 USD |\n| p2.16xlarge | 64   | 188  | 768 GiB | 仅限 EBS | 每小时 30.432 USD |\n\n综合来看选择美国的合算，要跑超过12个小时我的数据。\n\n---\n\n2020年现在有服务器啦，环境就是小意思啦。\n\n这么看深度学习真的是有成本的。\n\n努力努力✊","categories":["技术"]},{"title":"cv2.VideoCapture","url":"/opencv-video-capture/","content":"\n程序里\n\n1. cap = cv2.VideoCapture(0)\n\n   VideoCapture()中参数是0，表示打开笔记本的内置摄像头，参数是视频文件路径则打开视频，如cap = cv2.VideoCapture(“../test.avi”)\n\n2. ret,frame = cap.read()\n\n   cap.read()按帧读取视频，ret,frame是获cap.read()方法的两个返回值。其中ret是布尔值，如果读取帧是正确的则返回True，如果文件读取到结尾，它的返回值就为False。frame就是每一帧的图像，是个三维矩阵。\n\n3. cv2.waitKey(1)，waitKey（）方法本身表示等待键盘输入，\n\n   参数是1，表示延时1ms切换到下一帧图像，对于视频而言；\n\n   参数为0，如cv2.waitKey(0)只显示当前帧图像，相当于视频暂停,；\n\n   参数过大如cv2.waitKey(1000)，会因为延时过久而卡顿感觉到卡顿。\n\n   c得到的是键盘输入的ASCII码，esc键对应的ASCII码是27，即当按esc键是if条件句成立\n\n4. 调用release()释放摄像头，调用destroyAllWindows()关闭所有图像窗口。","categories":["技术"]},{"title":"FaceID","url":"/myapp-faceid/","content":"\n","categories":["技术"]},{"title":"cv2.cvtColor","url":"/opencv-cvtcolor/","content":"\n### API Definition\n\n我们从 OpenCV官网 的Miscellaneous Image Transformations 上，可查到 cv2.cvtColor 这个api的定义如下：\n\n> cvtColor\n> Converts an image from one color space to another.\n>\n> C++: void cvtColor(InputArray src, OutputArray dst, int code, int dstCn=0 )\n> Python: cv2.cvtColor(src, code[, dst[, dstCn]]) → dst\n> C: void cvCvtColor(const CvArr* src, CvArr* dst, int code)\n> Python: cv.CvtColor(src, dst, code) → None\n>\n> Parameters:\n> src – input image: 8-bit unsigned, 16-bit unsigned ( CV_16UC… ), or single-precision floating-point.\n> dst – output image of the same size and depth as src.\n> code – color space conversion code (see the description below).\n> dstCn – number of channels in the destination image; if the parameter is 0, the number of the channels is derived automatically from src and code.\n>\n> The function converts an input image from one color space to another. In case of a transformation to-from RGB color space, the order of the channels should be specified explicitly (RGB or BGR). Note that the default color format in OpenCV is often referred to as RGB but it is actually BGR (the bytes are reversed). So the first byte in a standard (24-bit) color image will be an 8-bit Blue component, the second byte will be Green, and the third byte will be Red. The fourth, fifth, and sixth bytes would then be the second pixel (Blue, then Green, then Red), and so on.\n>\n\n### 参数探究\n\n在探究的过程中，我发现 code 参数的 输入类型 是 int 型，于是写代码进行验证：\n\n```python\nimport cv2\ncolor_types = [cv2.COLOR_BGR2RGB, cv2.COLOR_BGR2GRAY]\nfor color_type in color_types:\n    print ('{}    {}'.format(color_type, type(color_type)))\n```\n\n结果证明，原来 code 参数的 输入 不管是cv2.COLOR_BGR2RGB、cv2.COLOR_BGR2GRAY，或是其他 颜色转换空间（color space conversion），均是 int 型的：\n\n结果证明了，原来 code 参数的 输入 不管是cv2.COLOR_BGR2RGB、cv2.COLOR_BGR2GRAY，或是其他 颜色转换空间（color space conversion），均是 int 型的：\n\n```python\n4    <type 'int'>\n6    <type 'int'>\n```\n\n## 颜色空间转换探究\n\n于是我编写了一小段代码，探究哪些整数可以作为 **cv2.cvtColor** 中 `code` 参数的 **替代输入值** ，并看看在 **转换了颜色空间** 后，会生成什么样的图像。\n\n验证得知，以下整数可以作为 **cv2.cvtColor** 中 `code` 参数的 **替代输入值**：\n\n![qiu](cv2-cvtColor/qiu.jpg)\n\n```python\nValid index in cv2.cvtColor:\n[0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 127, 128, 129, 130, 131, 132, 133, 134]\n```\n\n我使用的图片是皮卡丘，网上其他人使用的酷炫毛子，产生了相同的结果，再测试一下👇\n\n![mao](cv2-cvtColor/mao.jpg)\n\n### 生成的图像\n\n![1568387520272](cv2-cvtColor/1568387520272.png)\n\n\n\n![1568387690151](cv2-cvtColor/1568387690151.png)\n\n./generated_pics/1.jpg：![1](cv2-cvtColor/1.jpg)\n\n\n./generated_pics/2.jpg：![2](cv2-cvtColor/2.jpg)\n\n\n./generated_pics/6.jpg：![6](cv2-cvtColor/6.jpg)\n\n\n./generated_pics/32.jpg：![32](cv2-cvtColor/32.jpg)\n\n\n./generated_pics/34.jpg：![34](cv2-cvtColor/34.jpg)\n\n\n./generated_pics/35.jpg：![35](cv2-cvtColor/35.jpg)\n\n\n./generated_pics/36.jpg：![36](cv2-cvtColor/36.jpg)\n\n\n./generated_pics/38.jpg：![38](cv2-cvtColor/38.jpg)\n\n\n./generated_pics/41.jpg：![41](cv2-cvtColor/41.jpg)\n\n\n./generated_pics/53.jpg：![53](cv2-cvtColor/53.jpg)\n\n\n./generated_pics/54.jpg：![54](cv2-cvtColor/54.jpg)\n\n\n./generated_pics/55.jpg：![55](cv2-cvtColor/55.jpg)\n\n\n./generated_pics/69.jpg：![69](cv2-cvtColor/69.jpg)\n\n\n./generated_pics/72.jpg：![72](cv2-cvtColor/72.jpg)\n\n\n./generated_pics/73.jpg：![73](cv2-cvtColor/73.jpg)\n\n\n./generated_pics/79.jpg：![79](cv2-cvtColor/79.jpg)\n\n\n./generated_pics/82.jpg：![82](cv2-cvtColor/82.jpg)\n\n\n./generated_pics/85.jpg：![85](cv2-cvtColor/85.jpg)\n\n### Code\n\n```python\norigin_pic = 'qiu.jpg'\nsave_folder = './generated_pics'\n\nimport os\n\ntry:\n    os.makedirs(save_folder)\nexcept OSError:\n    pass\n\nimport cv2\n\nimg = cv2.imread(origin_pic)\nvalid_index = []\nfor color_type in range(-100, 200, 1):\n    try:\n        img_new = cv2.cvtColor(img, color_type)\n        cv2.imwrite(os.path.join(save_folder, str(color_type) + '.jpg'), img_new)\n        valid_index.append(color_type)\n    except:\n        pass\nprint('Valid index in cv2.cvtColor:\\n{}'.format(valid_index))\n\n```\n\n","categories":["技术"]},{"title":"并行与分布式程序设计","url":"/2019fall-cs433/","content":"\n# 190912第一周\n\nHomework50 Project50\n\n一个月的时间，每周40个小时的工作量\n\n---\n\n这是很好的一门课，但是因为大作业也就到这里结束了。\n\n我很喜欢这门课的老师，希望我能够在之后自己抽出时间来学习这门课。\n\nOver","tags":["课程"]},{"title":"程序设计思想与方法","url":"/2019fall-cs902/","content":"\n# 190912第一周第一节课\n\n平时成绩：课后作业+出勤（20）下周上课前一天截至 - 助教\n\n大作业：独立设计一个较大的程序（30）老师的ftp\n\n期末考试16周开卷考试，笔试（50）\n\n---\n\n### 硬件\n\n**CPU**：执行指令，每条指令完成一种简单操作，例如加法，移动，etc\n\n> 按次序执行大量简单指令能完成复杂任务！\n\n \n\n**存储器**：存储信息（数据和程序）\n\n**主存**（内存）：CPU能直接访问，速度快但易失。\n\n**次级存储器**（外存）：速度慢但持久。\n\n**输入**/**输出设备**：人机交互\n\n\n\n计算机是信息处理机器，由程序控制。程序，即一个逐步执行的指令序列。 \n\n计算：和数学计算概念不同，指利用计算机执行程序来解决问题。\n\n用简单事情做复杂问题\n\n \n\n**通用计算机**：可以加载执行多种程序。\n\n \n\n**计算机科学**：并非研究计算机，研究的是计算的理论基础，设计，实现与应用\n\nEg，基本问题：什么是可计算的？\n\n**课程目标**：像计算机科学家一样思考。\n\n \n\n程序设计：计算的关键是程序设计\n\n \n\n### 程序设计语言\n\n机器语言：二进制\n\n汇编语言：汇编器处理后能懂\n\n高级语言（适合人类的语言）：编译器或解释器翻译后才懂\n\n \n\n程序设计：先找出算法，用自然语言表达：伪代码。再实现算法——程序。\n\n \n\n对算法的要求：明确可行，有限时间内完成\n\n \n\n计算思维：利用计算机解决问题时的思想和方法。建立在计算机的能力与局限之上。\n\n计算思维未来会成为人们的基本能力。\n\n \n\n本课程的定位：学习利用计算机解决问题的思想方法，应用于其他专业领域。\n\n不是程序设计语言课程，编程是计算思维的实践\n\n坏消息：学习编程语言需要掌握非常繁琐的细节\n\n好消息：python语言非常简单，易学易用\n\n不是算法和数据结构课程，而是会学习一些基本的知识。\n\n \n\n \n\n### Python语言\n\n1、通用，跨平台，开源，自由\n\n2、简单易学\n\n3、高度的可读性\n\n人工智能，数据分析，python在这些行业里用得最多\n\n \n\n#### Python安装与运行\n\n版本：都采用Python2.7\n\nPython的交互方式\n\n程序构件：数据\n\n数据：是被处理的信息\n\n不同类型的数据：\n\n字符串数据print”hello”\n\n数值数据 print “3.14”\n\n和数学类似：变量数据，Python命名：标识符\n\n以字母or下划线开头，后跟0or多个字母，数字，下划线，区分大小写字母。\n\n \n\n#### 良好的命名风格\n\n编程时很多地方需要命名：变量名、函数名、类名\n\n \n\n1. 有意义：例如gz  vs   salary\n\n2. 保持一致风格：annual_salary, annualSalary, myAnnualSalary\n\n \n\n#### 程序构件\n\n表达式，能计算一个值\n\n\\>>>2+3*4-5\n\n良好编程风格：用空格，括号增加表达式的可读性，而不是依赖优先级。不是对错问题，是追求美观。\n\n输出语句：print <sth> \n\n程序构件：函数：习惯上定义一个主函数main\n\n程序构件：注释，用于解释变量用途，函数功能。\n\n```\n#Author：Hanwen\n\n#Version：1.0\n\ndef main():\n```\n\n\n\n**计算=数据+处理**\n\n现实世界问题：信息+解法\n\n机器世界程序：数据+处理算法\n\n \n\n**常量与变量**\n\n变量，符号化名字表示数据，例如：s=”Hello”   /     print s\n\n为了更精细的表示信息，提供不同数据类型\n\n类型：合法值+合法运算\n\n编译器利用类型检查，可以发现程序错误，相当于量纲分析\n\n \n\n**整数类型int**\n\n不带小数点，运算符：+，-，*，/（取整），**乘方，%余数\n\n \n\n# 190919第二周第二节课\n\n---\n\nOver","tags":["课程"]},{"title":"摄影基础","url":"/2019fall-ad013-photography/","content":"\n# 190910第一节课\n\n> 摄影难就难在太容易了\n\n摄影史，技术艺术，曝光，构图，色彩，光的造型\n\n摄影家，好的作品\n\n> 摄影，就是用光绘画。曝光技术是摄影最核心的技术。\n>\n> 摄影的窍门：多看  +  多拍\n>\n> 对器材没有要求，任何相机都能拍出好照片\n>\n> 会有针对性的拍摄练习（手动调节光圈、快门速度）\n\n成绩构成：\n\n1. 出勤率（下课的时候勾选一下点名单）\n2. 平时的作业拍摄\n3. 最终大作业考核（拍摄制作完成一个作品）\n   - 个人独立\n   - 主题自定\n   - 一组图片（图片故事）\n   - 后期制作加入音频（音乐、拍摄时录的声音、自己制造的声音）\n   - 节奏、情绪、风格\n   - 1-3分钟\n\n## 第一章 摄影的功能\n\n1. art\n2. document\n3. market\n4. science\n\n### Art\n\n起源于18世纪中叶，作为绘画的辅助。\n\n​\t\t《驿站》1892\n\n​\t\t“美国现代摄影之父”阿尔弗雷德·斯蒂格里茨 - 指向了真实的社会生活\n\n20世纪70年代\n\n​\t\t美术馆陆续设立摄影专部\n\n《池塘 月光》$260万\n\n价值\n\n1. 艺术价值：文献价值\n2. 同底某一尺寸的印放数量\n3. 是否原作（作者亲自在暗房洗印）\n4. 有无作者签名（是用铅笔来签-无酸）\n5. 装裱要求（收藏级别的整套装备-无酸）\n\n### Document\n\n纪实摄影-长时间的\n\n报道摄影-时效性\n\n1936年美国农业安全署-FSA计划 拍摄农民迁移的视觉资料\n\n### Market\n\n商业摄影：广告摄影、人像摄影\n\n> 现在有趣的一个现象：\n>\n> 公司委托纪实摄影师拍摄照片，真实的生活\n\n给媒体提供照片定价：\n\n1. 发行量\n2. 尺寸\n3. 位置（封面、内页）\n4. 目的\n\n给广告客户提供图片\n\n1. 是否提供创意\n\n2. 拍摄难度\n\n3. 底片尺寸（胶片和商业并存）中画幅以上\n\n   ![img](摄影基础/u=4115343722,2559307368&fm=173&app=25&f=JPEG.jpg)\n\n4. 买断版权\n\n商业图片社提供图片\n\n1. 是否独家代理\n2. 多次销售分成比例\n\n### Science\n\n高速摄影\n\n显微摄影\n\n微距摄影\n\n## 第二章 摄影术的诞生和发展\n\n小孔成像\n\n谁发明了摄影术？\n\n1837年 达盖尔-银版法\n\n​\t\t研磨过的铜板 碘化银感光 + 正像，得到的是一张金属像，没有底片。\n\n​\t\t“真的好优雅哦”\n\n1824年 涅普斯  日光蚀刻法\n\n​\t\t1827年《窗外的庭院》 世界第一张照片 曝光时间8小时\n\n\n\n# 190917第二节课\n\n2. 从湿版、干版到胶片\n\n   - 湿版\n\n     1851年，英国人 阿切尔发明了——火棉胶法\n\n     湿版照相机很大，需要携带很多设备。\n\n     镜头是黄铜做的。特点：光敏度高、底片影纹极度清晰。\n\n     有缺陷，因为必须在干掉之前进行拍摄。\n\n   - 干版法\n\n     曝光能力大大增强，从原来几个小时，几分钟逐步降低到一秒钟。\n\n     1885年，美国伊士曼公司推出第一个卷筒底片。（伊士曼-柯达）\n\n   - 摄影胶片\n\n     - 胶片的结构\n\n       单层或者多层的感光乳剂层（单色单层，彩色RGB三层）\n\n       A. \t乳剂层（卤化银的细微颗粒）记录摄影中在该层上形成的光学影像。\n\n       ​\t\t卤化银堆积：亮的地方就是卤化银多的地方。\n\n       B.\t片基（主要成分是乙酸纤维）感光乳剂的载体。富于弹性，极其透明，呈化学惰性。\n\n     - 胶片的种类\n       - 负片：色温 ： 灯光型（3200K）日光（5500K)\n         - 数码相机用白平衡来调节色温WB\n         - 胶片相机：滤色镜来匹配色温\n       - 正片：感光度低，颗粒细，反差大，灰雾小。\n       - 中间片\n       - 反转片\n       - 反转复制片\n\n     - 胶片的规格：\n       - 135胶片：上下边缘有齿孔（24mm*36mm）全画幅\n       - 120胶片（无尺孔，可以拍摄）\n         - 6cm*9cm\n         - 6cm*6cm\n       \n     - 胶片特性\n       - 感光度 ISO：对光的敏感度（感光度越大，允许的快门速度越短，曝光时间越短）\n       - 颗粒度：对应数码相机的噪点。\n       - 反差性：对应动态范围\n         - 胶片所能呈现的胶片反差的能力。\n         - HDR\n       - 宽容度：胶片宽容度\n       - 解像力：胶片对景物细节的记录能力\n       - 灰雾度：未经曝光的底片经显影后会产生均匀的浅灰色密度层。\n       - 保存性\n       \n       自己操作相机的模式。铅袋可以阻挡X光。\n\n### 数字化革命\n\n##### 数码相机的诞生\n\n1981年 世界第一台电子成像照相机：Sony Mavica\n\n百万像素CCD：1986年 美国柯达公司\n\n数码照相机：1991年美国柯达公司推出DC100照相机\n\n##### 数码照相机的感光器件与存储设备\n\n1. 感光器件——CCD & CMOS\n\n2. 存储——卡\n\n   CF卡：读写速度更快\n\n## 第三章 摄影的普及和主要摄影流派\n\n### 摄影的大众化\n\n法国人-迪斯德里 发明名片照片，使用湿版摄影术，1854年获得专利。\n\n英国人维茨顿发明立体照片，使用立体镜观看，可以获得三维纵深幻觉。\n\n> 柯达：“你按快门，其余让我来办。”\n\n### 主要摄影流派\n\n1. 画意摄影——“美的视觉愉悦”\n\n2. 纯粹摄影——“发觉摄影自身的媒介特性”（客观性/真实性）\n\n3. 现代摄影主义——“现代摄影的两面派”\n\n   确认摄影固有特性的同时，也不断尝试各种颠覆性的方式考验现代摄影的理念。\n\n4. 超现实注意摄影——“现代注意摄影的先锋”\n\n   > 将世界打碎，再加以重新组织\n\n5. 纪实摄影——“关注人与人类社会”\n\n   纪实摄影师应该去营救还是只是用照片去记录。\n\n# 190924第三节课\n\n6. 新彩色摄影——“平衡色彩效果与内容表达”\n\n7. 构成摄影——“从照相到造相”\n\n   花费大量时间搭建场景，或者被艺术家改变了，形成的一种主观的场景。\n\n## 第四章 照相机\n\n### 一、传统胶片照相机\n\n35mm单镜头反光照相机\n\n- 135胶片，24mm*36mm，全画幅\n- 单镜头\n- 反光（和胶片平面45°的反光平面）\n- 五棱镜结构-取景框\n\n优点：无视差\n\n缺点：反光镜弹起瞬间有机械振动和噪音\n\n胶片的曝光过程：\n\n1. 五棱镜-取景框\n2. 快门-拍照（光圈也有不同和进步）\n3. 胶片\n4. 显影\n\n双镜头相机——“Rolleiflex”——特别清晰\n\n120单镜头反光照相机（哈苏~）\n\n旁轴取景照相机：取景框和胶片的光独立（胶片前面没有反光镜）\n\n- 缺点：有视差\n- 视差矫正框\n\n**袖珍型照相机和APS相机**\n\n1. 袖珍型照相机\n\n   缺点：有视差、不能更换镜头、不能手动调节参数\n\n2. 一次性照相机\n\n3. APS照相机（Advance Photo System）\n\n4. 一步成像照相机（宝丽来相机）\n\n   Impossible 帮助恢复了生产\n\n5. 防水相机 or 水下照相机\n\n### 二、数码照相机\n\n1. 拍照\n\n   - 电子取景的方式，没有视差\n   - 可以翻转\n   - 耗电 + 过于明亮的环境已经显示不是很清晰\n   - （索尼α）设置快门声音（假的声音哈哈哈哈）\n\n   光学变焦与数字变焦\n\n2. 数码单镜头反光照相机\n\n3. 数码后背（可以秒变胶片相机）\n\n### 三、照相机的聚焦装置\n\n1. 自动对焦\n   1. 主动式（红外）自动对焦\n      - 有效距离比较小\n      - 玻璃窗、水面反光，易受干扰\n   2. 被动式自动对焦\n      - 取景器正中央有一个自动对焦点（主体在最中间），锁定焦点，调整构图\n      - 有可能丧失决定性瞬间\n   3. 智能自动对焦\n      - 多点自动对焦\n      - 眼控自动对焦\n\n2. 调焦验证装置\n   1. 磨砂玻璃式：放大镜（人眼看清了就认可了）\n   2. 裂项式：裂项光楔（对正）\n   3. 重影式：黄斑（重影、重叠）\n\n### 四、照相机的镜头\n\n1. 镜头的焦距与景别\n\n   - 超广角镜头/鱼眼镜头：18mm以下\n\n   - 广角镜头：18-35mm\n\n   - 标准镜头：50mm\n\n   - 长焦镜头：70-300mm\n\n   - 远摄镜头：400mm以上\n\n     焦距影响景深\n\n     焦距影响景别\n\n     焦距影响空间透视：长焦压缩空间透视\n\n     数码相机的镜头\n\n2. 镜头的种类\n\n   定焦镜头：\n\n   - 成像素质好\n\n   - 光圈大\n\n   变焦镜头：\n\n   - 方便，调焦\n\n3. 镜头的有小口径\n\n   最大光圈：最大孔径值与镜头焦距的比值 1:xx Fxx \n\n### 五、照相机的曝光装置\n\n1. 光圈的作用：\n   - 调节光线投射到胶片上面的照度\n   - 控制景深：光圈大景深小\n   - 影响成像质量：最佳光圈（中间挡位光圈）\n2. 快门\n   - 控制曝光时间长短\n   - B, T, 1, 2, 4, 8, 15, 30, 60, 125 ···\n   - B 长时间快门的一种装置：按住一直曝光（需要配合快门线）\n   - T 按一下开始曝光、再按一下结束\n   - 都是分母\n\n【带相机过来】\n\n# 191022第节课\n\n逆光\n\n顶光-\n\n> 天气很好，我们去拍照吧\n\n恶劣的环境光\n\n##### 黎明时分\n\n天亮起来了，但是色温xx，然后露珠透视的效果\n\n##### 余晖\n\n##### 暴风雨\n\n不好的天气会有很多别样的光线，意想不到的情景。\n\n\n\n---\n\n学到了很多知识，拍摄的视角和技术。\n\n最后得到了A的成绩。\n\nOver","tags":["课程"]},{"title":"我的课程信息","url":"/2019fall-courses/","content":"\n### **(JC308)传播学概论**-Introduction to Communication\n\n本课程是新闻与传播学专业基础必修课。本课程分三大部分：\n一为传播学基础概述。包括什么是传播、传播的类型、结构、模式、功能、信息、符号等，大众传媒的现状、新的媒介环境及媒介环境的变化引起的理论问题，传播研究方法。\n二为传播学经典理论。从传播者到受众的一系列理论，如把关人理论、宣传策略、议程设置、培养理论、知沟理论、沉默的螺旋理论、使用与满足理论等\n三为传播学的新变革和发展趋势。包括传播学经典理论的新发展，新科技与主动受众，媒介与社会整合。\n\n星期一第3-4节{1-16周} 上院207\n\n```\n平均: 89.67 最高: 95.00\n```\n\n\n\n### **(PO903)清洁能源技术：原理与应用**-Clean Energy Technologies: Principle and Applications\n\n星期一第9-10节{1-16周} 东下院212\n\n```\n平均: 88.19 最高: 96.00\n```\n\n\n\n### **(HI903)美国的文化与历史**-American History and Culture\n\n星期一第11-12节{1-16周} 东下院204\n\n```\n平均: 83.56 最高: 94.00\n```\n\n\n\n### (EE230)媒体智能高级专题-Advanced Lecture on Intelligence Media\n\n该课程主要内容为机器学习的基本理论与基本方法。主要介绍机器学习的经典分支包括（但不限于）：监督学习，无监督学习，迁移学习，强化学习等。主要讲授各算法的基本原理与推导过程，应用等。旨在让学生掌握各机器学习算法的算法思路及实现原理。课程亦包含机器学习各大算法的典型案例分析与动手实践模块。\n\n星期二第3-4节{1-16周} 东下院303\n\n\n\n### (AD013)摄影基础-Photography\n\n通过对摄影专业知识的系统学习，从理论上由浅入深地讲解摄影领域的技术和原理，使学生熟练使用相机的各种功能；理论与实践相结合,鼓励学生实践并且掌握利用光影、景深、曝光控制、影调、色彩、构图和数码后期的处理来获取照片的能力;课程加入了对国际时尚品牌广告类摄影图片的解读和分析总结,运用主动学习的策略,培养学生的理解能力和分析能力以及解决摄影过程中的实际问题的能力;培养对社会问题的关注度和用摄影表达的能力,增强学生的社会责任感和正义感.\n\n星期二第9-10节{1-16周} 下院310\n\n```\n平均: 85.42 最高: 95.00\n```\n\n\n\n### **(BU104)营销导论**-Introduction to Marketing\n\n市场营销学是一门建立在经济科学、行为科学、管理科学和现代科学技术基础之上\n的应用科学。市场营销学的研究对象是企业的市场营销活动过程及其规律性，即， 在特定的市场营销环境中，企业以市场调研分析为基础，为满足现实和潜在的市场 需求，所实施的以产品（Product）、定价（Price）、渠道（Place）、促销（Promotion） 为主要决策内容的市场营销管理过程及其客观规律性。市场营销学的研究内容具有 综合性、实践性、应用性。\n\n星期二第11-13节{1-11周} 下院413\n\n```\n平均: 86.43 最高: 98.00\n```\n\n\n\n### **(CS902)程序设计思想与方法**-Thinking and Approach of Programming\n\n本课程的目标是让学生初步掌握运用计算机科学中的基本思想去求解问题、设计系统和理解人类行为的技能，通过学习程序设计的思想与方法，培养学生编写程序以解决实际问题的能力，以期达到应用计算思维于解决不同学科中的问题。\n\n星期四第6-8节{1-16周} 东下院402\n\n```\n平均: 82.43 最高: 95.00 挂科率: 1.09%\n```\n\n\n\n### (AM016)网络环境下的文科信息检索-Retrieval of Information on Humanities and Social Sciences in the Network Environment\n\n第1周-第16周，周四 第9-10节；上课地点：图书馆主馆B120电子教室\n\n```\n平均: 94.48 最高: 100.00\n```\n\n\n\n### (BM016)大学生健康教育-Health Education\n\n星期四第9-10节{1-16周} 上院115\n\n```\n平均: 93.81 最高: 100\n```\n\n\n\n### **(TY001)“UTJS”体验式教育:大学生演讲与沟通训练**-Understanding Teamwork Job Skills\n\n星期四第11-13节{2-12周} 中院507\n\n```\n平均: 94.21 最高: 99.00\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","tags":["课程"]},{"title":"算法设计与分析","url":"/2019fall-cs222/","content":"\n### Recommended Books\n\n《AUTOMATE THIS》_HOW ALGORITHM CAME TO RULE THE WORLD_\n\n42 ! \n\n> 数学知识可能最近看起来没什么用，但是可能会在未来的几十年改变世界。\n\n---\n\n这门课是我非常喜欢的一门课，认识到了算法和代码的优美。\n\n最后得到了A的成绩。\n\nOver","tags":["课程"],"categories":["算法"]},{"title":"美国的文化和历史","url":"/2019fall-hi903/","content":"# 第一次课190909\n\n##### 课堂纪律：\n\n不能看手机、小声聊天，请假需要学校的假条。\n\n##### 考核方式：\n\n演讲10\n\n课堂表现10\n\n课堂小作业27——2/3次：开卷形式、发散性的题目（练习即兴写作和表达）\n\n大作业40——课下完成（读书笔记）美国历史至少读一本书：1500字以上 上限6000字，自己的文字。\n\n地图考试13 默写出来东海岸美国独立时期的13个州\n\n小组演讲（基本不扣分）\n\n![1568025390977](美国的文化和历史/1568025390977.png)\n\n大作业\n\n![1568025682559](美国的文化和历史/1568025682559.png)\n\n🈲抄袭\n\n---\n\n进入课堂内容啦！\n\n##### **宗教与美国的政治与社会**\n\n中国：万物有灵的，更加自由\n\n美国是一神信仰\n\n说服对方，你需要关注他的思考模式，去了解他的思想。要不然你在他们的思维里你就是暴徒（过激一点的行为），就会被过滤，不被加以考虑。\n\n> 会有一些披着宗教外衣的极端主义，在传教。\n\n选择宗教，就是把自己的心和身体全都交给宗教。\n\n要理性全面的了解宗教，容易被洗脑，接受他的任何的名义。有的不好的宗教就会用思维的方式控制你。\n\n理工科的同学信仰宗教可能会更虔诚。\n\n文化/宗教的融合：如果不敌视文化，那么文化的融合就会很自然。\n\n##### **推荐的电影**\n\n《大空头》\n\n《大而不倒》\n\n《监守自盗》\n\n《商海通牒》\n\n《国宝银行：小到可以进监狱》\n\n---\n\n# 第二次课190916\n\n美国人虔诚地相信上帝是存在的。\n\n## 第一章 宗教与美国\n\n### 第一节 创世故事与宗教信仰\n\n> 中国的神更像一个人，西方的神更像是一个绝对的权威。\n\n后羿射日-人和神的距离不是很远\n\n西方：生死结婚都是和宗教信仰相关。\n\n> 虔诚的天主教信徒：离婚，两年的时间去思考\n\n> 圣经：你希望别人怎么对你，你就怎么对别人。\n>\n> 论语：己所不欲，勿施于人。\n\n巴基斯塔信仰伊斯兰教。\n\n##### 宗教的六大要素\n\n- 仪式\n- 传统\n- 权威\n- 上帝主权与恩典观\n- 思辨\n- 神秘\n\n##### 耶路撒冷·圣墓教堂\n\n> 耶路撒冷旧城 一平方公里\n>\n> 清真寺：伊斯兰教真主阿拉升天的石头\n>\n> 犹太人：苦墙\n\n##### 耶路撒冷 圣殿山\n\n1. 公元前十世纪 所罗门王简历圣殿\n2. 公元前586年 巴比伦之丘（巴比伦现在的伊拉克）\n3. 公元前539年 被波斯释放（波斯现在的伊朗）\n4. 公元前537-515年 重建圣殿\n5. 公元前70年 第二圣殿被罗马帝国所毁（西墙）\n\n《耶稣受难记》\n\n##### 基督教：将平等带入基督徒群体\n\n1. 耶稣生活在公元1世纪初\n2. 30岁左右在加利利和犹太各地传教\n3. 曾收12个人为大弟子（门徒，使徒）\n\n##### 基督教的传播\n\n1. 米兰赦令（313）\n\n2. 传播 476年西罗马帝国灭亡\n\n   法兰克国王克洛维接受基督教\n\n   公元6世纪 英国\n\n> 去西墙 要戴帽子\n\n# 第三次课190923\n\n1. 大作业-论文（40分读书笔记）要求12周上交，1500-6000字数\n\n   12周交电子版，16周交纸质版\n\n2. 课堂小作业（27分）\n\n   20分钟左右的时间，开卷的开放的形式。\n\n3. 课堂表现\n\n   10分 平时不能缺席、环节发言、讨论、问答\n\n4. 演讲（课程相关的内容、逻辑清晰、文献来源清楚）\n\n16世纪的宗教改革\n\n\n\n# 第四次课190930\n\n请假了嘻嘻\n\n# 第五次课191014\n\n### 课前演讲：三权分立\n\n“立法权居首，行政权次之，司法权再次之。”\n\n- 国家的一般意志（国会参众两院）\n\n- 这种意志的执行\n\n- 对法律条文的准确解释\n\n**权衡-权力的制衡**\n\n案例-杨斯顿钢铁公司总统权限案（战时临时总统权 vs 最高法院）\n\n杜鲁门总统 Davis 是律师\n\n**总统行政权的扩张**\n\n特朗普 曲线的增长\n\n---\n\n课程最后进展的很好，和老师的互动也很良性。\n\n最后Pre展示，回答问题都很好。\n\n最后得到A的成绩。","tags":["课程"]},{"title":"清洁能源技术-原理与应用","url":"/2019fall-po903/","content":"\n# 第一次课190909\n\n![1568018754094](清洁能源技术-原理与应用/1568018754094.png)\n\n1. 清洁能源汽车 vs 新能源汽车\n2. N2 O2分子 哪一个大？\n\n​\t——N2（非金属元素）\n\n3. 从90年代到现在，中国经历了非常大的经济增长，汽车保有量直线上升。发展的负面效应，带来的环境污染。\n4. 工业界对于环保的需求也很大（钱不是问题）\n5. 氢气是很重要的清洁能源（最清洁的）\n   - 燃烧生成水\n   - 电化学的方法\n   - 日本准备打造 氢能源社会\n\n6. 目前的新能源发电有很大的波动性。太阳能、风能都是没法电网直接接受。工厂就配备了一个储能设备（蓄电池）。\n\n7. 太阳能飞机（阳光号）：证明可以利用太阳能可以实现环球飞行。\n\n8. 新科技依赖于材料技术的发展。\n\n9. FCV: Fuel Cell Vehicles\n\n   ![1568020506721](清洁能源技术-原理与应用/1568020506721.png)\n\n10. 汽车普及的三个方向：\n\n    1. 便宜：消费者的角度\n    2. 油耗要低（重量/发动机的效率）\n    3. 环境保护(汽油品质)\n\n11. 汽油——脂肪烃和芳香烃\n\n    芳香烃(苯：是强致癌物)\n\n12. 内燃机 + 电池 + 发电机（很重的车子）\n    - PHV ：Plugin 插入式的。电池可以来自于外部插电。燃油箱变小，需求转移到外部电网。（太贵了）\n    - EV ：纯粹的电动汽车\n    - FCV ： 不用充电的 氢气（氢叫水素，氧叫酸素）\n\n---\n\n# 第二次课 190916\n\n### 考核方式\n\n- 平时作业和上课参与  20\n- 期中-小组大作业及报告讨论ppt发表 40\n  - 图书馆-电子数据库\n- 期末考试（小论文）40\n\n能源的定义\n\n能量的定义\n\n# 第三次课190923\n\n小组作业\n\n![1569233313718](清洁能源技术-原理与应用/1569233313718.png)\n\n我们选择的是13核能利用的现状与发展趋势。\n\n![1569233340100](清洁能源技术-原理与应用/1569233340100.png)\n\n分组情况。\n\n期末考试\n\n![1569233726856](清洁能源技术-原理与应用/1569233726856.png)\n\n![1569233776279](清洁能源技术-原理与应用/1569233776279.png)\n\n标题、作者、学号、摘要、分标题\n\n![1569233804539](清洁能源技术-原理与应用/1569233804539.png)\n\n注意总结和参考文献\n\n![1569233816140](清洁能源技术-原理与应用/1569233816140.png)\n\n个人论文的题目参考：我准备写清洁能源技术与可持续发展（核能）\n\n![1569233842392](清洁能源技术-原理与应用/1569233842392.png)\n\n这个有点难了。。。\n\n---\n\n### 酸雨\n\n酸雨： PH<5.6\n\n较重酸雨： PH<5.0\n\n重酸雨： PH<4.5\n\n#### 酸雨的形成\n\n##### 海洋\n\n海洋会夹带一些硫酸到空中\n\n##### 生物\n\n动物尸体中的S化物\n\n##### 火山爆发、森林火灾、闪电 \n\n##### 人工排放源\n\n- 煤炭、石油等化石燃料的燃烧\n- 工业过程（金属冶炼）\n- 化工生产（硫酸生产、硝酸生产）\n- 交通运输（汽车尾气）\n\n### 核能\n\n核能污染\n\n福岛核电站，9级地震，海啸。\n\n### 光化学污染\n\n形成条件：1.充足的阳光2.干燥的气候3.汽车尾气的排放核污染\n\n[复印机里面放电，空气电离形成臭氧]\n\n### 清洁能源 PK 传统能源\n\n清洁能源的成本比较高\n\n## 思考题：\n\n[课程网站，这个就不算分啦]\n\n1. 能源可以分为那儿积累\n2. 化石能源与环境污染的关系\n3. 常见清洁能源及利用技术有哪些?\n4. 如何处理发展清洁能源与利用传统化石能源之间的关系\n\n---\n\n## 高分子材料\n\n### 高分子\n\n高分子是具有重复单元的大分子，通常分子量在10000以上的。\n\n1000-10000 —— 预聚物\n\n1000以下 —— 小分子物质\n\n有机高分子是以C-C共价键为基本结构的高分子\n\n### 聚乙烯\n\n![1569233934034](清洁能源技术-原理与应用/1569233934034.png)\n\n\n\n### 均聚物\n\n只有一种重复单元的聚合物。\n\n![1569233955029](清洁能源技术-原理与应用/1569233955029.png)\n\n一次性水杯——PE\n\n塑料水管、乐扣盒子——PP（熔点更高，可以使用微波炉加热的）\n\n矿泉水瓶——PET（无毒，光学透明性好，软化点比较低60-70度）\n\n![1569233987200](清洁能源技术-原理与应用/1569233987200.png)\n\n聚醚砜（PSE）\n\n---\n\n# 第一次课堂作业（190925）\n\n### 1.能源可以分为哪几类？\n\n（一）依据能源的来源分类：\n\n1. 来自地球外部天体的能源（主要是太阳能，由太阳能转化来的风能、水能、生物能和矿物能源）\n2. 地球本身蕴藏的能量（原子核能，地热能）\n3. 地球和其他天体相互作用而产生的能量（潮汐能等）\n\n（二）按能源的产生方式分类：\n\n1. 一次能源 即天然能源：\n\n   煤炭、石油、天然气、太阳能、核能、风能、地\n   热能、海洋能、生物能\n\n2. 二次能源 即人工能源：\n\n   电力、煤气、汽油、柴油、焦炭、洁净煤、激光、沼气、氢能等\n\n（三）按能源的（燃烧）性质分类：\n\n1. 燃料型能源：\n\n   煤炭、石油、天然气、木材等\n\n2. 非燃料型能源\n\n   水能、风能、地热能、海洋能\n\n（四）按能源消耗后是否造成环境污染分类：\n\n1. 污染型能源：\n   煤炭、石油等\n\n2. 清洁型能源\n   氢能、太阳能、风能、水能、生物质能、地热能、海洋能、 （核能） 等\n\n（五）按照是否可以再生分：\n\n1. 非再生能源\n   煤炭、石油、天然气等\n2. 可再生能源：\n   风能、太阳能、生物质能、水能、海洋能等\n\n------\n\n### 2.请说明化石能源与环境污染的关系。\n\n- 化石能源燃烧产生二氧化碳等气体及浮尘，影响环境。\n- 化石能源中有较多的硫，硫化物逐渐形成酸雨，污染环境。\n- 氮氧化物和碳氢化合物在大气中收到阳光中强烈的紫外线照射后产生的二次污染物质——光化学烟雾，污染环境\n\n------\n\n### 3.常见清洁能源及其利用技术有哪些？\n\n- 常见清洁能源：\n  - 可再生能源：太阳能、风能、生物能、水能，地热\n    能等\n  - 不可再生能源：氢能、核能、低污染的化石能源（如天然气等）和利用清洁能源技术处理过的化石能源，如洁净\n    煤、洁净油等\n\n- 利用技术：主要就是提取清洁能源，并且高效使用清洁能源，并把清洁能源产生的能量高效的转化成为我们所需要的能量形式过程中使用的技术。\n\n  比如说核电站可控核裂变技术，可燃冰开采技术等。\n\n------\n\n### 4.如何处理发展清洁能源与利用传统化石能源之间的关系？\n\n大量使用清洁能源必然是未来的一个趋势，但是由于清洁能源相对于传统的化石能源有着成本更高，技术没有那么成熟的缺点，所以普及速度没有预料的那么快。\n\n未来应该有很长一段时间是清洁能源和传统化石能源并行，清洁能源在政策和技术的支持下逐步占据传统化石能源的比率，最后随着可控核聚变和无线充电技术的成熟，逐步替代化石能源。\n\n# 第四次课190930\n\nC-C单键是可以旋转的\n\n### 分子间作用力\n\n- 色散力\n\n  分子的瞬时偶极间的作用力，分子量越高，色散力越强。\n\n- 诱导力\n\n  由于诱导偶极而产生的作用力，发生在极性分子之间及极性分子与非极性分子之间。\n\n- 取向力\n\n  由于诱导偶极而产生的作用力，发生在极性分子之间及极性分子与非极性分子之间。\n\n### 玻璃化转变温度\n\nPET 熔点267℃，玻璃化转变温度67℃\n\n玻璃态：在低温下，聚合物主链及链段都处于“冻结”状态，不能自由运动，只有那些较小的运动单元如侧基、支链和小链节能运动，聚合物此时的状态称为玻璃态。\n\n![1569831859651](清洁能源技术-原理与应用/1569831859651.png)\n\n高弹态：随着温度的升高，分子热运动能量逐渐增加，当达到一定温度时，分子热运动的能量足以克服单键内旋转的位垒，链段运动被激发，聚合物开始进入高弹态。\n\n玻璃化转变温度（ glass transition temperature ）：聚合物由玻璃态开始转变为高弹态时的温度（常用 Tg 表示）\n\n粘流态：随着温度的进一步升高，整个高分子链段的运动被激发，聚合物开始进入粘流态（熔融）。\n\n![1569831993369](清洁能源技术-原理与应用/1569831993369.png)\n\n### 塑料\n\n![1569832380606](清洁能源技术-原理与应用/1569832380606.png)\n\n### 橡胶\n\n硫化\n\n塑料和橡胶可以相互转化（液氮的温度）\n\n---\n\n# 第二次课堂作业\n\n---\n\n### 1. 名词解释：高分子材料、均聚物、共聚物、塑料、橡胶。\n\n##### 高分子材料\n\n高分子（Macromolecule），亦称聚合物（Polymer），是具有重复单元的大分子，通常指分子量在10000以上的大分子。\n\n高分子材料是以高分子化合物为基体，再配有其他添加剂（助剂）所构成的材料。\n\n##### 均聚物\n\n只有一种重复单元的聚合物称为均聚物。\n\n例子：聚乙烯、聚丙烯、聚苯乙烯\n\n##### 共聚物\n\n由两种或两种以上重复单元组成的聚合物称为共聚物。\n\n例子：聚（丙烯腈-co-苯乙烯）\n\n##### 塑料\n\n在一定条件（温度 、 压力等）下可塑成一定形状并且在 室温 下保持其形状不变的材料 。\n\n##### 橡胶\n\n有机高弹性化合物在很宽的温度，范围内具有优异的弹性 所以又称高弹体 。\n\n有以下性质:\n\n- 橡胶的玻璃化转变温度远低于室温 。\n\n- 橡胶在使用条件下不结晶或结晶度很小，主链高度柔顺 。\n- 橡胶经交联 硫化 后具有三维交联网状结构，在使用条件下无分子间相对滑移 。\n\n\n\n### 2. 举例说明高分子材料的种类、化学结构和应用（不少于 3种）\n\n1. 聚乙烯（塑料）：![1569832252059](清洁能源技术-原理与应用/1569832252059.png) \n\n   高压聚乙烯：一半以上用于薄膜制品，其次是管材、注射成型制品、电线包裹层等\n\n   中低、压聚乙烯：以注射成型制品及中空制品为主。\n\n   超高压聚乙烯：由于超高分子聚乙烯优异的综合性能，可作为工程塑料使用。\n\n2. 聚苯乙烯（塑料）:\n\n   ![1569832555095](清洁能源技术-原理与应用/1569832555095.png)\n\n   日常生活中常见的应用有各种一次性塑料餐具，透明CD盒等等。\n\n3. 聚氯乙烯 PVC（塑料）:\n\n   ![1569832615075](清洁能源技术-原理与应用/1569832615075.png)\n\n   **聚氯乙烯管材**，这个是最直白最广为人知的一个用处了吧。\n   \n   ---\n\n# 第五次课191014\n\n今天学习的是锂电池，记录一下生活中锂电池的使用注意事项（老师推荐的电池使用）：\n\n影响锂电池寿命的因素是电池的循环次数，不是完全充满完全放电的次数。所以没有必要每次都非要把电冲的满满的在使用，用到红了再充电。\n\n平时充电的时候不要睡前插上电，然后早上醒来拔下来看电冲没冲满，这样不好。我询问了老师关于电池内部管理芯片的事儿，老师说这种就是一个概率的事儿，争取不让它发生在自己身上。\n\n我觉得苹果最近推出的人工智能管理电池充电的就很好，我也在上课的时候萌生了同样的想法。涓流充电还是很好滴。\n\n电池也不要过热，手机太热的时候就停止使用吧~\n\n---\n\n这门课最后得到了A的成绩。\n\n很开心能学到很实用的知识。\n\n还有我的读书笔记——[《核能开发和利用》](https://starky99.com/development-and-utilization-of-nuclear-energy/)\n\nOver","tags":["课程"]},{"title":"5段流水线CPU设计","url":"/cpu-pipeline/","content":"\n\n\n## 实验目的\n\n1. 理解计算机指令流水线的协调工作原理，初步掌握流水线的设计和实现原理。\n2. 深刻理解流水线寄存器在流水线实现中所起的重要作用。\n3. 理解和掌握流水段的划分、设计原理及其实现方法原理。\n4. 掌握运算器、寄存器堆、存储器、控制器在流水工作方式下，有别于实验一的设计和实现方法。\n5. 掌握流水方式下，通过I/O端口与外部设备进行信息交互的方法。\n\n## 实验内容\n\n1. 采用Verilog HDL在quartusⅡ中实现基本的具有20条MIPS指令的单周期CPU设计。\n2. 利用实验提供的标准测试程序代码，完成仿真测试。\n3. 采用I/O统一编址方式，即将输入输出的I/O地址空间，作为数据存取空间的一部分，实现CPU与外部设备的输入输出端口设计。实验中可采用高端地址。\n4. 利用设计的I/O端口，通过lw指令，输入DE2实验板上的按键等输入设备信息。即将外部设备状态，读到CPU内部寄存器。\n5. 利用设计的I/O端口，通过sw指令，输出对DE2实验板上的LED灯等输出设备的控制信号（或数据信息）。即将对外部设备的控制数据，从CPU内部的寄存器，写入到外部设备的相应控制寄存器（或可直接连接至外部设备的控制输入信号）。\n6. 利用自己编写的程序代码，在自己设计的CPU上，实现对板载输入开关或按键的状态输入，并将判别或处理结果，利用板载LED灯或7段LED数码管显示出来。\n7. 例如，将一路4bit二进制输入与另一路4bit二进制输入相加，利用两组分别2个LED数码管以10进制形式显示“被加数”和“加数”，另外一组LED数码管以10进制形式显示“和”等。（具体任务形式不做严格规定，同学可自由创意）。\n8. 在实验报告中，汇报自己的设计思想和方法；并以汇编语言的形式，提供采用以上自行设计的指令集的作品应用功能的程序设计代码，并提供程序主要流程图。\n\n## 实验器材\n\nDE1-SOC实验板套件1套\n万用表 1台\n示波器 1台\n\n## 顶层设计\n\n实验设计采用了如下图所示的结构\n\n![流水线cpu](5段流水CPU设计/流水线cpu.PNG)\n\n```verilog\nmodule pipelined_computer(resetn,clock,mem_clock,in_port0,in_port1,pc,inst,ealu,malu,walu,hex0,hex1,hex2,hex3,hex4,hex5);\n    input resetn,clock,mem_clock;\n    output [31:0] pc,inst,ealu,malu,walu;\n\n    input [3:0] in_port0, in_port1;\n    output[6:0] hex0,hex1,hex2,hex3,hex4,hex5;\n    wire [31:0] out_port0, out_port1, out_port2;\n\n    //IF\n    wire [31:0] bpc,jpc,npc,pc4,ins,inst;\n    //ID\n    wire [31:0] dpc4,da,db,dimm;\n    //EX\n    wire [31:0] epc4,ea,eb,eimm;\n    //MEM\n    wire [31:0] mb,mmo;\n    //WB\n    wire [31:0] wmo,wdi;\n    //register number\n    wire [4:0] drn,ern0,ern,mrn,wrn;\n    //ALUC\n    wire [3:0] daluc,ealuc;\n    //PCsource\n    wire [1:0] pcsource;\n    //freeze PC and IF/ID\n    wire wpcir;\n    //IF/ID\n    wire dwreg,dm2reg,dwmem,daluimm,dshift,djal;\n    //ID/EX\n    wire ewreg,em2reg,ewmem,ealuimm,eshift,ejal;\n    //EX/MEM\n    wire mwreg,mm2reg,mwmem;\n    //MEM/WB\n    wire wwreg,wm2reg;\n\n    //IF/ID/MEM read at negedge of clock.\n    pipepc prog_cnt(npc,wpcir,clock,resetn,pc);\n    pipeif if_stage(pcsource,pc,bpc,da,jpc,npc,pc4,ins,mem_clock);\n    pipeir inst_reg(pc4,ins,wpcir,clock,resetn,dpc4,inst);\n    pipeid id_stage(mwreg,mrn,ern,ewreg,em2reg,mm2reg,dpc4,inst,\n        wrn,wdi,ealu,malu,mmo,wwreg,clock,resetn,bpc,\n        jpc,pcsource,wpcir,dwreg,dm2reg,dwmem,daluc,daluimm,\n        da,db,dimm,drn,dshift,djal);\n    pipedereg de_reg(dwreg,dm2reg,dwmem,daluc,daluimm,da,db,dimm,\n        drn,dshift,djal,dpc4,clock,resetn,ewreg,em2reg,ewmem,ealuc,ealuimm,\n        ea,eb,eimm,ern0,eshift,ejal,epc4);\n    pipeexe exe_stage(ealuc,ealuimm,ea,eb,eimm,eshift,ern0,epc4,ejal,ern,ealu);\n    pipeemreg em_reg(ewreg,em2reg,ewmem,ealu,eb,ern,clock,resetn,mwreg,\n        mm2reg,mwmem,malu,mb,mrn);\n    pipemem mem_stage(mwmem,malu,mb,wmo,wm2reg,in_port0,in_port1,\n        clock,mem_clock,resetn,mmo,out_port0,out_port1,out_port2);\n    pipemwreg mw_reg(mwreg,mm2reg,mmo,malu,mrn,clock,resetn,wwreg,\n        wm2reg,wmo,walu,wrn);\n    mux2x32 wb_stage(walu,wmo,wm2reg,wdi);\n\n    //I/0:\n    sevenseg trans0(out_port0[3:0],hex4);\n    sevenseg trans1(out_port0[7:4],hex5);\n    sevenseg trans2(out_port1[3:0],hex2);\n    sevenseg trans3(out_port1[7:4],hex3);\n    sevenseg trans4(out_port2[3:0],hex0);\n    sevenseg trans5(out_port2[7:4],hex1);\nendmodule\n```\n\n## 具体实现\n\n从顶层文件开始每个模块中变量的意义\n\n### pipepc\n\nnpc是当前应该赋给pc的值，这是一个D锁存器，当wpcir=1且resetn!=0的时候才赋值\n\n### pipeif\n\nIF，包含一个多选器和一个指令rom。多选器通过输入的pcsource判定输出的是pc4、bpc、da、jpc中的一种，irom通过输入的pc获取输出的ins\n\n### pipeir\n\nIF/ID 流水线寄存器模块，当wpcir=1且resetn!=0的时候，D锁存器将pc4赋值给dpc4，将ins赋值给inst\n\n### pipeid\n\nID，在这里获得了jpc、bpc，WB写入的寄存器编号rn，alu输入端的a&b，立即数的符号拓展、控制信号，regfile和单周期的一致，cu中除去解决数据冒险和控制冒险的forwardA&B，以及控制停顿的wpcir，其余均与单周期流水线一致\n\n### pipedereg\n\nID/EXE 流水线寄存器，当resetn!=0时，将ID段的输出赋给EXE段的输入，否则输入变成0。\n\n### pipeexe\n\nEXE，ALU与单周期的一致，增加一个多选器用于jal指令\n\n### pipeemreg\n\nEXE/MEM流水线寄存器，当resetn!=0时，将EXE段的输出赋给MEM段的输入，否则输入变成0。\n\n### pipemem\n\nMEM，dmem和单周期一致，使用控制信号wmem\n\n### pipemwreg\n\nMEM/WB 流水线寄存器，当resetn!=0时，将MEM段的输出赋给WB段的输入，否则输入变成0。\n\n### cu\n\n控制单元，同时在这里解决流水线冒险，代码如下\n\n```verilog\nmodule pipecu (op, func, z, wmem, wreg, regrt, m2reg, aluc, shift,\n              aluimm, pcsource, jal, sext);\n   input  [5:0] op,func;\n   input        z;\n   output       wreg,regrt,jal,m2reg,shift,aluimm,sext,wmem;\n   output [3:0] aluc;\n   output [1:0] pcsource;\n   wire r_type = ~|op;\n   wire i_add = r_type & func[5] & ~func[4] & ~func[3] &\n                ~func[2] & ~func[1] & ~func[0];          //100000\n   wire i_sub = r_type & func[5] & ~func[4] & ~func[3] &\n                ~func[2] &  func[1] & ~func[0];          //100010\n      \n   \n   wire i_and =  r_type & func[5] & ~func[4] & ~func[3] & func[2] & \n                ~func[1] & ~func[0]; //100100\n   wire i_or  =  r_type & func[5] & ~func[4] & ~func[3] & func[2] & \n                ~func[1] & func[0]; //100101\n\n   wire i_xor =  r_type & func[5] & ~func[4] & ~func[3] & func[2] & \n                func[1] & ~func[0]; //100110\n   wire i_sll =  r_type & ~func[5] & ~func[4] & ~func[3] & ~func[2] &\n                ~func[1] & ~func[0]; //000000\n   wire i_srl = r_type & ~func[5] & ~func[4] & ~func[3] & ~func[2] &\n                func[1] & ~func[0]; //000010\n   wire i_sra = r_type & ~func[5] & ~func[4] & ~func[3] & ~func[2] &\n                func[1] & func[0]; //000011\n   wire i_jr  = r_type & ~func[5] & ~func[4] & func[3] & ~func[2] &\n                ~func[1] & ~func[0]; //001000\n   wire i_sllv = r_type & ~func[5] & ~func[4] & ~func[3] & func[2] &\n                ~func[1] & ~func[0];//000100\n   wire i_srlv = r_type & ~func[5] & ~func[4] & ~func[3] & func[2] &\n                func[1] & ~func[0];//000110\n   wire i_srav = r_type & ~func[5] & ~func[4] & ~func[3] & func[2] &\n                func[1] & func[0];//000111\n  \n   //Note: here, op[i] instead of func[i].\n   wire i_addi = ~op[5] & ~op[4] &  op[3] & ~op[2] & ~op[1] & ~op[0]; //001000\n   wire i_andi = ~op[5] & ~op[4] &  op[3] &  op[2] & ~op[1] & ~op[0]; //001100\n   \n   wire i_ori  = ~op[5] & ~op[4] &  op[3] &  op[2] & ~op[1] & op[0]; //001101\n   wire i_xori = ~op[5] & ~op[4] &  op[3] &  op[2] & op[1] & ~op[0]; //001110\n   wire i_lw   = op[5] & ~op[4] &  ~op[3] &  ~op[2] & op[1] & op[0]; //100011\n   wire i_sw   = op[5] & ~op[4] &  op[3] &  ~op[2] & op[1] & op[0]; //101011\n   wire i_beq  = ~op[5] & ~op[4] &  ~op[3] & op[2] & ~op[1] & ~op[0]; //000100\n   wire i_bne  = ~op[5] & ~op[4] &  ~op[3] & op[2] & ~op[1] & op[0]; //000101\n   wire i_lui  = ~op[5] & ~op[4] &  op[3] & op[2] & op[1] & op[0]; //001111\n   wire i_j    = ~op[5] & ~op[4] &  ~op[3] & ~op[2] & op[1] & ~op[0]; //000010\n   wire i_jal  = ~op[5] & ~op[4] &  ~op[3] & ~op[2] & op[1] & op[0]; //000011\n   \n  \n   assign pcsource[1] = i_jr | i_j | i_jal;\n   assign pcsource[0] = ( i_beq & z ) | (i_bne & ~z) | i_j | i_jal ;\n   \n   assign wreg = i_add | i_sub | i_and | i_or   | i_xor  |\n                 i_sll | i_srl | i_sra | i_addi | i_andi |\n                 i_ori | i_xori | i_lw | i_lui  | i_jal;\n   \n   //aluc +:0000, -:x100 and:x001 or:x101 xor:x010 lui: x110 sll:0011 srl:0111 sra:1111\n   //Note: bne, beq == xor, sllv=sll, srlv=srl, srav=sra;\n   assign aluc[3] = i_sra | i_srav;\n   assign aluc[2] = i_or | i_ori | i_lui | i_srl | i_sra | i_srlv | i_srav | i_sub;\n   assign aluc[1] = i_beq | i_bne | i_xor | i_xori | i_lui | i_sll | i_srl | i_sra | i_sllv | i_srlv | i_srav;\n   assign aluc[0] = i_and | i_andi | i_or | i_ori | i_sll | i_srl | i_sra | i_sllv | i_srlv | i_srav;\n   assign shift   = i_sll | i_srl | i_sra | i_sllv | i_srlv | i_srav ;\n\n   assign aluimm  = i_addi | i_andi | i_ori | i_xori | i_lw | i_sw; // All I-type(except LUI?). J-type is processed individually.\n   assign sext    = i_addi | i_lw | i_sw | i_beq | i_bne;//arithmetic I-type(NOTE logical unnecessary)\n   assign wmem    = i_sw;\n   assign m2reg   = i_lw;\n   //rd = rt\n   assign regrt   = i_addi | i_andi | i_ori | i_xori | i_lw | i_lui;\n   assign jal     = i_jal;\n\nendmodule\n```\n\n### I/O\n\nI/O部分采用了实验四的方法，将I/O地址和内存地址统一编址的方法，对于课程实验中RISC风格的类MIPS指令系统，对I/O端口的访问（读：输入来自于外部信号；写：输出到外部的信号），采用同访问MEM一样的lw指令和sw指令，由硬件通过对地址的识别区分，实现对MEM访问和I/O访问的区分。\n\n![IO](5段流水CPU设计/IO.png)\n\n## 流水线冒险\n\n流水线cpu可能会有结构冒险，数据冒险和控制冒险。本实验中可能会发生数据冒险和控制冒险。\n\n1. 数据冒险及解决办法。\n   数据冒险是指令之间会有数据相关的问题，一条指令没有执行完，下一条指令就需要它的结果。老师课件上讲了两种方法应对，一是加入气泡停顿，二是使用内部前推的方法。由于停顿会大大降低流水线cpu的效率，所以本实验采用了内部前推的方法应对数据冒险。\n   内部前推有三种情况，alu的计算结果从EXE段推到ID段，alu的计算结果从MEM段推到ID段，lw指令从数据存储器读出的数据从MEM段前推到ID段。根据优先检查相邻指令的条件，要先判断EXE段的alu结果，在判断MEM段的alu结果，最后判断从数据存储器读出的数据。若是lw指令，且其后续指令与lw数据有关，需要将流水线暂停一个周期。暂停流水线的做法就是保持pc值不变。所以这里需要添加一个控制信号wpcir。但是pc值不变时，某条指令可能会被执行两次，所以我们需要舍弃其中一条。即将原始的寄存器堆写信号和存储器的写信号与wpcir做与运算。这些在ID段control unit完成。\n2. 控制冒险及解决办法。\n   Mips指令集中有jr，beq，bne，j，jal会引起pc的转移或跳转，但是跳转过程，可能已经将后续指令取进流水线中了。解决此问题的方法就是加入一个周期的延迟。这在ID段即可确定，不过需要对beq和bne指令检验rs和rt寄存器中的数据是否相等。、\n\n## 我的代码\n\n#### sc_datamen\n\n```verilog\nDEPTH = 32;            % Memory depth and width are required %\nWIDTH = 32;            % Enter a decimal number %\nADDRESS_RADIX = HEX;   % Address and value radixes are optional %\nDATA_RADIX = HEX;      % Enter BIN, DEC, HEX, or OCT; unless %\nCONTENT                % otherwise specified, radixes = HEX %\nBEGIN\n14 : 000000A3;         % (50) data[0] %\n15 : 00000027;         % (54) data[1] %\n16 : 00000079;         % (58) data[2] %\n17 : 00000115;         % (5C) data[3] %\nEND ;\n```\n\n#### sc_instmem\n\n```Verilog\nDEPTH = 32;            % Memory depth and width are required %\nWIDTH = 32;            % Enter a decimal number %\nADDRESS_RADIX = HEX;   % Address and value radixes are optional %\nDATA_RADIX = HEX;      % Enter BIN, DEC, HEX, or OCT; unless %\nCONTENT                % otherwise specified, radixes = HEX %\nBEGIN\n14 : 000000A3;         % (50) data[0] %\n15 : 00000027;         % (54) data[1] %\n16 : 00000079;         % (58) data[2] %\n17 : 00000115;         % (5C) data[3] %\nEND ;\n```\n\n\n\n## 实验总结\n\n通过本次实验，我对流水线CPU有了更深层次的认识。尤其让我更加清楚流水线内部的信息，同时也提高了自己Debug的能力。中间有一个小细节卡了我好几天的时间，最后解决了超级开心。\n\n本次实验的顶层结构老师也已经给出，从顶层模块入手，对流水线cpu的各个模块逐一击破，这样的学习过程很有收获。","tags":["课程"],"categories":["技术"]},{"title":"基本单周期CPU设计","url":"/single-cpu/","content":"\n\n\n## 实验目的\n\n1. 理解计算机5大组成部分的协调工作原理，理解存储程序自动执行的原理。\n\n2. 掌握运算器、存储器、控制器的设计和实现原理。重点掌握控制器设计原理和实现方法。\n\n3. 掌握I/O端口的设计方法，理解I/O地址空间的设计方法。\n\n4. 会通过设计I/O端口与外部设备进行信息交互。\n\n##  实验内容\n\n1. 采用Verilog HDL 在quartusⅡ 中实现基本的具有20 条MIPS 指令的单周期CPU 设计。\n\n2. 利用实验提供的标准测试程序代码，完成仿真测试。\n\n3. 采用 I/O 统一编址方式，即将输入输出的I/O 地址空间，作为数据存取空间的一部分，实现CPU 与外部设备的输入输出端口设计。实验中可采用高端地址。\n\n4. 利用设计的 I/O 端口，通过lw 指令，输入DE2 实验板上的按键等输入设备信息。即将外部设备状态，读到CPU 内部寄存器。\n\n5. 利用设计的 I/O 端口，通过sw 指令，输出对DE2 实验板上的LED 灯等输出设备的控制信号（或数据信息）。即将对外部设备的控制数据，从CPU 内部的寄存器，写入到外部设备的相应控制寄存器（或可直接连接至外部设备的控制输入信号）。\n\n6. 利用自己编写的程序代码，在自己设计的 CPU 上，实现对板载输入开关或按键的状态输入，并将判别或处理结果，利用板载LED 灯或7 段LED 数码管显示出来。\n\n   例如，将一路4bit 二进制输入与另一路4bit 二进制输入相加，利用两组分别2 个LED 数码管以10 进制形式显示“被加数”和“加数”，另外一组LED数码管以10 进制形式显示“和”等。（具体任务形式不做严格规定，同学可自由创意）。\n\n7. 在实验报告中，汇报自己的设计思想和方法；并以汇编语言的形式，提供采用以上自行设计的指令集的作品应用功能的程序设计代码，并提供程序主要流程图。1. 采用Verilog HDL 在quartusⅡ中实现基本的具有20 条MIPS 指令的单周期CPU 设计。\n\n## 实验器材\n\nDE1-SOC实验板套件1套\n万用表 1台\n示波器 1台\n\n## 顶层设计\n在sc_computer.v文件中，有如下设计。由I/O、cpu、data memory、instruction memory组成，符合冯诺依曼架构。\n\n![IAS](基本单周期CPU设计/IAS.png)\n\n```verilog\nmodule sc_computer (resetn,mem_clk,in_port0,in_port1,clrn,hex0,hex1,hex2,hex3,hex4,hex5);\n   \n   input resetn,clrn,mem_clk,clrn;\n\treg clock;\n   \n   input [4:0] in_port0,in_port1;\n   \n   wire [31:0] pc,inst,aluout,memout;\n   wire        imem_clk,dmem_clk;\n   wire [31:0] out_port0,out_port1,out_port2;\n   output [6:0] hex0,hex1,hex2,hex3,hex4,hex5;\n   wire   [31:0] data;\n   wire          wmem; // all these \"wire\"s are used to connect or interface the cpu,dmem,imem and so on.\n   \n \n\talways @(posedge mem_clk)\n\tbegin\n\t\tif(~clrn)\n\t\t\tclock <= 0;\n\t\tclock <= ~clock;\n\tend\n\t\n   sc_cpu cpu (clock,clrn,inst,memout,pc,wmem,aluout,data);          // CPU module.\n   sc_instmem  imem (pc,inst,clock,mem_clk,imem_clk);                  // instruction memory.\n   sc_datamem  dmem (aluout,data,memout,wmem,clock,mem_clk,dmem_clk,clrn, out_port0,out_port1,out_port2,in_port0,in_port1,mem_dataout,io_read_data ); // data memory.\n\t\n\tsevenseg sevenseg0(out_port2[7:4],hex0);\n\tsevenseg sevenseg1(out_port2[3:0],hex1);\n    sevenseg sevenseg2(out_port1[7:4],hex2);\n\tsevenseg sevenseg3(out_port1[3:0],hex3);\n\tsevenseg sevenseg4(out_port0[7:4],hex4);\n\tsevenseg sevenseg5(out_port0[3:0],hex5);\n\nendmodule\n```\n\n## 具体实现\n\n### CPU\n\nsc_cpu.v中，老师已经给了几乎所有的代码，可以看到单周期CPU设计基本按照下图所示\n![单周期CPU](基本单周期CPU设计/单周期CPU.png)\n\n```verilog\nmodule sc_cpu (clock,resetn,inst,mem,pc,wmem,alu,data);\n   input [31:0] inst,mem;\n   input clock,resetn;\n   output [31:0] pc,alu,data;\n   output wmem;\n   \n   wire [31:0]   p4,bpc,npc,adr,ra,alua,alub,res,alu_mem;\n   wire [3:0]    aluc;\n   wire [4:0]    reg_dest,wn;\n   wire [1:0]    pcsource;\n   wire          zero,wmem,wreg,regrt,m2reg,shift,aluimm,jal,sext;\n   wire [31:0]   sa = { 27'b0, inst[10:6] }; // extend to 32 bits from sa for shift instruction\n   wire          e = sext & inst[15];          // positive or negative sign at sext signal\n   wire [15:0]   imm = {16{e}};                // high 16 sign bit\n\twire [31:0]   offset = {imm[13:0],inst[15:0],1'b0,1'b0};   //offset(include sign extend)\n   wire [31:0]   immediate = {imm,inst[15:0]}; // sign extend to high 16\n   \n   dff32 ip (npc,clock,resetn,pc);  // define a D-register for PC\n   \n   \n   assign p4 = pc + 32'h4;       // modified\n   assign adr = p4 + offset;     // modified\n   \n   wire [31:0] jpc = {p4[31:28],inst[25:0],1'b0,1'b0}; // j address \n   \n   sc_cu cu (inst[31:26],inst[5:0],zero,wmem,wreg,regrt,m2reg,\n                        aluc,shift,aluimm,pcsource,jal,sext);\n                        \n                        \n   mux2x32 alu_b (data,immediate,aluimm,alub);\n   mux2x32 alu_a (ra,sa,shift,alua);\n   mux2x32 result(alu,mem,m2reg,alu_mem);\n   mux2x32 link (alu_mem,p4,jal,res);\n   mux2x5 reg_wn (inst[15:11],inst[20:16],regrt,reg_dest);\n   assign wn = reg_dest | {5{jal}}; // jal: r31 <-- p4;      // 31 or reg_dest\n   mux4x32 nextpc(p4,adr,ra,jpc,pcsource,npc);\n   regfile rf (inst[25:21],inst[20:16],res,wn,wreg,clock,resetn,ra,data);\n   alu al_unit (alua,alub,aluc,alu,zero);\nendmodule\n```\n\n### CU\n\n可以在下图中看到，MIPS指令集分成三种指令，判断三种指令的区别和执行的方式是通过sc_cu.v进行判断\n\n![instruction](基本单周期CPU设计/instruction.png)\n\n在cu中，通过利用下图的真值表，完成对控制指令的赋值。\n\n![truthtable](基本单周期CPU设计/truthtable.png)\n\ncu.v的代码如下\n\n```verilog\n\\instruction.png)![truthtable](D:\\瀚文生活\\文文学习\\Study\\大二下学期\\计算机组成\\实践课程\\瀚文实践\\实验\\truthtable.png)module sc_cu (op, func, z, wmem, wreg, regrt, m2reg, aluc, shift,\n              aluimm, pcsource, jal, sext);\n   input  [5:0] op,func;\n   input        z;\n   output       wreg,regrt,jal,m2reg,shift,aluimm,sext,wmem;\n   output [3:0] aluc;\n   output [1:0] pcsource;\n   wire r_type = ~|op;\n   wire i_add = r_type & func[5] & ~func[4] & ~func[3] &\n                ~func[2] & ~func[1] & ~func[0];          //100000\n   wire i_sub = r_type & func[5] & ~func[4] & ~func[3] &\n                ~func[2] &  func[1] & ~func[0];          //100010\n      \n   //  please complete the deleted code.\n   \n   wire i_and =   r_type &  func[5] & ~func[4] & ~func[3] &\n                 func[2] & ~func[1] & ~func[0];          //100100\n   wire i_or  =  r_type &  func[5] & ~func[4] & ~func[3] &\n                 func[2] & ~func[1] &  func[0];          //100101\n   wire i_xor =  r_type &  func[5] & ~func[4] & ~func[3] &\n                 func[2] &  func[1] & ~func[0];          //100110\n   wire i_sll =  r_type & ~func[5] & ~func[4] & ~func[3] &\n                ~func[2] & ~func[1] & ~func[0];          //000000\n   wire i_srl =  r_type & ~func[5] & ~func[4] & ~func[3] &\n                ~func[2] &  func[1] & ~func[0];          //000010\n   wire i_sra =  r_type & ~func[5] & ~func[4] & ~func[3] &\n                ~func[2] &  func[1] &  func[0];          //000011\n   wire i_jr  =  r_type & ~func[5] & ~func[4] &  func[3] &\n                ~func[2] & ~func[1] & ~func[0];          //001000\n                \n   wire i_addi = ~op[5] & ~op[4] &  op[3] & ~op[2] & ~op[1] & ~op[0]; //001000\n   wire i_andi = ~op[5] & ~op[4] &  op[3] &  op[2] & ~op[1] & ~op[0]; //001100\n   \n   wire i_ori  = ~op[5] & ~op[4] &  op[3] &  op[2] & ~op[1] &  op[0]; //001101\n   wire i_xori = ~op[5] & ~op[4] &  op[3] &  op[2] &  op[1] & ~op[0]; //001110  \n   wire i_lw   =  op[5] & ~op[4] & ~op[3] & ~op[2] &  op[1] &  op[0]; //100011\n   wire i_sw   =  op[5] & ~op[4] &  op[3] & ~op[2] &  op[1] &  op[0]; //101011\n   wire i_beq  = ~op[5] & ~op[4] & ~op[3] &  op[2] & ~op[1] & ~op[0]; //000100\n   wire i_bne  = ~op[5] & ~op[4] & ~op[3] &  op[2] & ~op[1] &  op[0]; //000101\n   wire i_lui  = ~op[5] & ~op[4] &  op[3] &  op[2] &  op[1] &  op[0]; //001111\n   wire i_j    = ~op[5] & ~op[4] & ~op[3] & ~op[2] &  op[1] & ~op[0]; //000010\n   wire i_jal  = ~op[5] & ~op[4] & ~op[3] & ~op[2] &  op[1] &  op[0]; //000011\n   \n  \n   assign pcsource[1] = i_jr | i_j | i_jal;\n   assign pcsource[0] = ( i_beq & z ) | (i_bne & ~z) | i_j | i_jal ;\n   \n   assign wreg = i_add | i_sub | i_and | i_or   | i_xor  |\n                 i_sll | i_srl | i_sra | i_addi | i_andi |\n                 i_ori | i_xori | i_lw | i_lui  | i_jal;\n   \n   assign aluc[3] = i_sra;\n   assign aluc[2] = i_sub | i_or | i_srl | i_sra;\n   assign aluc[1] = i_xor | i_sll | i_srl | i_sra | i_xori;\n   assign aluc[0] = i_and | i_or | i_srl | i_sll | i_sra | i_andi | i_ori;\n   assign shift   = i_sll | i_srl | i_sra ;\n\n   assign aluimm  = i_addi | i_andi | i_ori | i_xori | i_lw | i_sw | i_lui;\n   assign sext    = i_addi | i_lw | i_sw | i_beq | i_bne;\n   assign wmem    = i_sw;\n   assign m2reg   = i_lw;\n   assign regrt   = i_addi | i_andi | i_ori | i_xori | i_lw | i_sw;\n   assign jal     = i_jal;\n\nendmodule\n```\n\n### ALU\nsc_alu.v通过输入的aluc进行判断，完成算术逻辑单元的操作\n代码如下\n\n```verilog\nmodule alu (a,b,aluc,s,z);\n   input [31:0] a,b;\n   input [3:0] aluc;\n   output [31:0] s;\n   output        z;\n   reg [31:0] s;\n   reg        z;\n   always @ (a or b or aluc) \n      begin                                   // event\n         casex (aluc)\n             4'bx000: s = a + b;              //x000 ADD\n             4'bx100: s = a - b;              //x100 SUB\n             4'bx001: s = a & b;              //x001 AND\n             4'bx101: s = a | b;              //x101 OR\n             4'bx010: s = a ^ b;              //x010 XOR\n             4'bx110: s = b << 16;            //x110 LUI: imm << 16bit             \n             4'b0011: s = b << a;             //0011 SLL: rd <- (rt << sa)\n             4'b0111: s = b >> a;             //0111 SRL: rd <- (rt >> sa) (logical)\n             4'b1111: s = $signed(b) >>> a;   //1111 SRA: rd <- (rt >> sa) (arithmetic)\n             default: s = 0;\n         endcase\n         if (s == 0 )  z = 1;\n            else z = 0;         \n      end      \nendmodule \n```\n\n### I/O\n\nI/O部分采用了实验四的方法，将I/O地址和内存地址统一编址的方法，对于课程实验中RISC风格的类MIPS指令系统，对I/O端口的访问（读：输入来自于外部信号；写：输出到外部的信号），采用同访问MEM一样的lw指令和sw指令，由硬件通过对地址的识别区分，实现对MEM访问和I/O访问的区分。\n\n![IO](基本单周期CPU设计/IO.png)![IO](\n\n## 指令设计\n\n通过汇编器生成mif文件，然后用datamem和instmem分别读取，我实现了add、and、or\n\n```mips\n        addi\t\t$1, $0, 128\n        addi\t\t$2, $0, 132\n        addi\t\t$3, $0, 136\n        addi \t\t$4, $0, 192\n        addi \t\t$5, $0, 196\t\nloop:\taddi \t\t$7, $0, 0\t\n        addi \t\t$8, $0, 0\t\n        lw \t\t$7, 0($4)\t\t\n        lw\t\t$8, 0($5)\t\t\n        add\t\t$9, $7, $8\t\t\n        or\t\t$10, $7, $8\n        and\t\t$11, $7, $8\t\n        sw\t\t$9, 0($1)\t\t\n        sw\t\t$10, 0($2)\n        sw\t\t$11, 0($3)\t\n        j\t\tloop\t\t\t\n```\n\n## 实验流程和收获\n\n本次实验是从修改代码入手：修改了alu的代码，使之能够处理基础的运算；修改cu的代码，是指能够理解输入的指令，并输出对应的控制信号；修改sc_computer的代码，布局顶层设计，处理端口的输入输出信息。\n\n接下来使用testbench写测试文件，使用modelsim进行模拟测试。测试CPU的基本功能。\n\n继续修改sc_computer的代码，使之连接到外部的输入输出的设备。\n\n处理io文件，自己修改mif文件，使之实现我们需要的功能。\n\n## 实验总结\n\n本次实验我学习了单周期cpu基本的结构，对理论课程上学习到的知识点了解地更加形象，同时也能够较为熟练地应用Verilog语言和 quartusII 实现自己需要的指令。\n本次实验的难点部分在于从无到有的一个知识体系的构建，从一开始对I/O和汇编语言一头雾水，控制单元的不熟悉，到现在能够明白如何设计以及为什么这样设计cpu，受益匪浅。","tags":["课程"],"categories":["技术"]},{"title":"基于Verilog和FPGA的多功能秒表设计","url":"/verilog-fpga/","content":"\n## 实验目的\n\n1. 初步掌握利用Verilog硬件描述语言进行逻辑功能设计的原理和方法。\n2. 理解和掌握运用大规模可编程逻辑器件进行逻辑设计的原理和方法。\n3. 理解硬件实现方法中的并行性，联系软件实现方法中的并发性。\n4. 理解硬件和软件是相辅相成、并在设计和应用方法上的优势互补的特点。\n5. 本实验学习积累的Verilog硬件描述语言和对FPGA/CPLD的编程操作，是进行后续《计算机组成原理》部分课程实验，设计实现计算机逻辑的基础。\n\n## 实验内容\n\n1. 运用Verilog硬件描述语言，基于DE1-SOC实验板，设计实现一个具有较多功能的计时秒表。\n2. 要求将8个数码管设计为具有“时：分：秒：毫秒”显示，按键的基本控制动作有3个：“计时复位”、“计数/暂停”、“显示暂停/显示继续”。功能能够满足马拉松或长跑运动员的计时需要。\n3. 利用示波器观察按键的抖动，设计按键电路的消抖方法。\n4. 在实验报告中详细报告自己的设计过程、步骤及Verilog代码。\n\n## 实验仪器\n\nAltera – DE1-SOC实验板 1套\n示波器 1台\n数字万用表 1台\n\n## 实验任务\n\n#### 实验电路\n\n![1558584325650](基于Verilog和FPGA的多功能秒表设计/1558584325650.png)\n\n![1558584340614](基于Verilog和FPGA的多功能秒表设计/1558584340614.png)\n\n#### 基本功能\n\n以下是秒表的计时和暂停等功能：\n\n- 最开始的代码部分加入了防抖动的功能。\n- when循环过程中，0.5M表示10ms进行一次毫秒数值的计数。\n- 按键在按下的时候，进行按键反转（表现在led灯上面就是灯的明暗变化）\n- 循环此过程\n\n```verilog\nbegin\n    if(key_start_pause==0)\n        begin\n            counter_start <= counter_start+1;\n            if(counter_start>=1000000 && counter_start<1500000)\n                start_1_time <= 1;\n            else \n                start_1_time <= 0;\n        end\n    else \n        counter_start<=0;\n\n    if(key_reset==0)\n        begin\t\n            counter_reset<=counter_reset+1;\n            if(counter_reset>=1000000 && counter_reset< 1500000)\n                reset_1_time<=1;\n            else \n                reset_1_time<=0;\n        end\n    else \n        counter_reset<=0;\n\n    if(key_display_stop==0)\n        begin\n            counter_display <=counter_display+1;\n            if(counter_display>=1000000 && counter_display< 1500000)\n                display_1_time<=1;\n            else\t\n                display_1_time<=0;\n        end\n    else\n        counter_display<=0;\n\n    if (counter_50M == 500000)\n        begin\n\n            if(key_reset==0 && reset_1_time==1)\n                begin\n                    msecond_counter_low <=0;\n                    msecond_counter_high <=0;\n                    second_counter_low<=0;\n                    second_counter_high<=0;\n                    minute_counter_low<=0;\t\n                    minute_counter_high<=0;\n                    led3<=0;\n                end\n\n            if(key_start_pause==0 && start_1_time == 1)\n                begin\n                    led1 <= !led1;\n                end\n\n            if(key_display_stop==0 && display_1_time == 1)\n                begin\n                    led2 <= !led2;\n                end\n\n            if(key_reset==1)\n                begin\n                    led0<=1;\n                end\n\n            if (led1==1) \n                begin\n                    msecond_counter_low <= msecond_counter_low +1;\n                    if(msecond_counter_low==9)\n                        begin\n                            led3<=!led3;\n                            msecond_counter_low<=0;\n                            msecond_counter_high<=msecond_counter_high+1;\n                            if(msecond_counter_high==9)\n                                begin\n                                    msecond_counter_high<=0;\n                                    second_counter_low<=second_counter_low+1;\n                                    if(second_counter_low==9)\n                                        begin \n                                            second_counter_low<=0;\n                                            second_counter_high<=second_counter_high+1;\n                                            if(second_counter_high==5)\n                                                begin\n                                                    second_counter_high<=0;\n                                                    minute_counter_low<=minute_counter_low+1;\n                                                    if(minute_counter_low==9)\n                                                        begin\n                                                            minute_counter_low<=0;\n                                                            minute_counter_high<=minute_counter_high+1;\n                                                            if (minute_counter_high==5)\n                                                                begin\n                                                                    minute_counter_high<=0;\n                                                                end\n                                                        end\n                                                end\n                                        end\n                                end\n                        end\t\n                end\t\n\n            if (led2==0)\n                begin \n                    minute_display_high <= minute_counter_high;\n                    minute_display_low <= minute_counter_low;\n                    second_display_high <= second_counter_high;\n                    second_display_low <= second_counter_low;\n                    msecond_display_high <= msecond_counter_high;\n                    msecond_display_low <= msecond_counter_low;\n                end\n            counter_50M <= 0;\n        end\n    else counter_50M <= counter_50M + 1;\nend\n```\n\n#### 消抖\n\n当系统检测出按键闭合后，执行一个延时程序，产生5ms～10ms的延时；前沿抖动消失后，再一次检测键的状态；如果仍保持闭合状态电平，则确认为真正有键按下。当检测到按键释放后，也要给5ms～10ms的延时，待后沿抖动消失后才能转入该键的处理程序。设置经过20 ms后的高电平才是真正的按键功能。\n\n我的设计通过`start_1_time == 1`（以start/pause为例进行解释）来表明按键有效，通过`(key_start_pause==0 && start_1_time == 1)`来进行按键的判断。\n\n同时延时设计为 1M-1.5M ，可以通过这种方式进行消抖，且唯一激活按键的操作。\n\n```verilog\nif(key_start_pause==0)\n    begin\n        counter_start <= counter_start+1;\n        if(counter_start>=1000000 && counter_start<1500000)\n            start_1_time <= 1;\n        else \n            start_1_time <= 0;\n    end\nelse \n    counter_start<=0;\n```\n\n## 实验总结\n\n这次实验收获还是蛮大的，进行实验的操作是一个循序渐进的过程。我先完成对秒表功能的设计，然后加入防抖的功能。防抖也进行了几次尝试和探索，简述如下：\n\n1. 第一次使用 `counter>=1M`进行判断：这个是是考虑到了延时，并且对按键进行操作激活。但是发现在之后的循环中按键由于大于1M的时间都是激活状态，导致奇数次操作有效，偶数次无效。所以有1/2的几率操作不被激活。故放弃此操作。\n2. 第二次使用`counter==1M`进行判断：但是发现由于起始计时点不同，单个点的操作1M和0.5M比较难相遇，导致按键操作始终无法激活。故放弃此操作。\n3. 第三次使用`counter_start>=1M && counter_start<1.5M`进行判断：实现消抖的基础上，还使用0.5M的间隔使得按键操作能被激活且被激活一次。实现功能！\n\n本次实验让我基本掌握了 Verilog 的语法和 Quartus II 软件的用法，为以后进行更复杂的设计打下了基础。","tags":["课程"],"categories":["技术"]},{"title":"190905朵云书院-宝山宜家","url":"/190905-duoyun-yijia/","content":"\n## 前言\n\n这是我第一次用单反出门拍照~\n\n图片都是未修 jpg 直出\n\n大家如果有什么构图、拍照的建议也可以给我留言哦~\n\n接下来请欣赏 欢乐美好的一天~\n\n---\n\n![JQ3K6490](190905朵云书院-宝山宜家/JQ3K6490.JPG)交大的清晨微微亮，今天没有下雨美滋滋。\n\n![JQ3K6491](190905朵云书院-宝山宜家/JQ3K6491.JPG)酷炫的人儿\n\n![JQ3K6492](190905朵云书院-宝山宜家/JQ3K6492.JPG)What‘s your problem?\n\n![JQ3K6493](190905朵云书院-宝山宜家/JQ3K6493.JPG)\n\n玉兰苑的阳光多么迷人\n\n![JQ3K6494](190905朵云书院-宝山宜家/JQ3K6494.JPG)\n\n![JQ3K6498](190905朵云书院-宝山宜家/JQ3K6498.JPG)\n\n虚化啊呀呀✌\n\n### 上海中心-朵云书院\n\n![JQ3K6530](190905朵云书院-宝山宜家/JQ3K6530.JPG)\n\n![JQ3K6539](190905朵云书院-宝山宜家/JQ3K6539.JPG)笑靥如花\n\n![JQ3K6542](190905朵云书院-宝山宜家/JQ3K6542.JPG)长幅美景\n\n![JQ3K6547](190905朵云书院-宝山宜家/JQ3K6547.JPG)“让我看看是谁在偷拍我”\n\n![JQ3K6549](190905朵云书院-宝山宜家/JQ3K6549.JPG)模糊的江景\n\n![JQ3K6553](190905朵云书院-宝山宜家/JQ3K6553.JPG)\n\n![JQ3K6550](190905朵云书院-宝山宜家/JQ3K6550.JPG)\n\n![JQ3K6551](190905朵云书院-宝山宜家/JQ3K6551.JPG)善良的小高帮人拍照，实际上是指挥交通👇![JQ3K6552](190905朵云书院-宝山宜家/JQ3K6552.JPG)\n\n![JQ3K6556](190905朵云书院-宝山宜家/JQ3K6556.JPG)结构\n\n![JQ3K6564](190905朵云书院-宝山宜家/JQ3K6564-1567764825018.JPG)美丽的云\n\n![JQ3K6570](190905朵云书院-宝山宜家/JQ3K6570.JPG)\n\n![JQ3K6572](190905朵云书院-宝山宜家/JQ3K6572.JPG)有点街拍的感觉~\n\n### 哈灵牛蛙\n\n![JQ3K6580](190905朵云书院-宝山宜家/JQ3K6580.JPG)一起来玩游戏\n\n![JQ3K6581](190905朵云书院-宝山宜家/JQ3K6581.JPG)牛蛙面就是哈灵\n\n![JQ3K6583](190905朵云书院-宝山宜家/JQ3K6583.JPG)\n\n![JQ3K6584](190905朵云书院-宝山宜家/JQ3K6584.JPG)满满的一碗，大大的满足。介绍说做一碗是足足两只牛蛙。\n\n### 宝山宜家\n\n![JQ3K6610](190905朵云书院-宝山宜家/JQ3K6610.JPG)初遇\n\n![JQ3K6611](190905朵云书院-宝山宜家/JQ3K6611.JPG)她非得说她拍的比我好😀我的50mm定焦头可不是就能拍这么点视野么😛\n\n![JQ3K6612](190905朵云书院-宝山宜家/JQ3K6612.JPG)\n\n![JQ3K6613](190905朵云书院-宝山宜家/JQ3K6613.JPG)笑嘻嘻\n\n![JQ3K6614](190905朵云书院-宝山宜家/JQ3K6614.JPG)我是可爱的小云朵\n\n![JQ3K6615](190905朵云书院-宝山宜家/JQ3K6615.JPG)对拍\n\n![JQ3K6616](190905朵云书院-宝山宜家/JQ3K6616.JPG)\n\n我最爱的托马斯小火车🚆呜呜呜呜~\n\n![JQ3K6618](190905朵云书院-宝山宜家/JQ3K6618.JPG)\n\n必吃！ ￥1 圆筒冰激凌\n\n![JQ3K6623](190905朵云书院-宝山宜家/JQ3K6623.JPG)\n\n![JQ3K6626](190905朵云书院-宝山宜家/JQ3K6626.JPG)宜家充满了小确幸\n\n![JQ3K6632](190905朵云书院-宝山宜家/JQ3K6632.JPG)窗外整齐的小房子\n\n![JQ3K6635](190905朵云书院-宝山宜家/JQ3K6635.JPG)\n\n![JQ3K6636](190905朵云书院-宝山宜家/JQ3K6636.JPG)\n\n木制的桌子、房子很有设计感\n\n![JQ3K6638](190905朵云书院-宝山宜家/JQ3K6638.JPG)”我最爱的是毛毛虫“\n\n![JQ3K6645](190905朵云书院-宝山宜家/JQ3K6645.JPG)1m^2 门厅\n\n![JQ3K6647](190905朵云书院-宝山宜家/JQ3K6647.JPG)快来吃大闸蟹吧（这是真的假的呢？嘻嘻）\n\n![JQ3K6653](190905朵云书院-宝山宜家/JQ3K6653.JPG)小阳台\n\n![JQ3K6658](190905朵云书院-宝山宜家/JQ3K6658.JPG)小荷包蛋\n\n![JQ3K6664](190905朵云书院-宝山宜家/JQ3K6664.JPG)小朋友床\n\n![JQ3K6666](190905朵云书院-宝山宜家/JQ3K6666.JPG)在思考\n\n![JQ3K6670](190905朵云书院-宝山宜家/JQ3K6670.JPG)今天的鞋子是西红柿炒蛋哦~\n\n![JQ3K6671](190905朵云书院-宝山宜家/JQ3K6671.JPG)哈哈哈哈哈哈终于等到我的照片啦\n\n![JQ3K6675](190905朵云书院-宝山宜家/JQ3K6675.JPG)我觉得这张拍得好！！！可以当宜家宣传照啦！！！\n\n![JQ3K6676](190905朵云书院-宝山宜家/JQ3K6676.JPG)\n\n![JQ3K6677](190905朵云书院-宝山宜家/JQ3K6677.JPG)\n\n![JQ3K6678](190905朵云书院-宝山宜家/JQ3K6678.JPG)动物王国，森林乐园。最爱的还是小猪猪\n\n![JQ3K6684](190905朵云书院-宝山宜家/JQ3K6684.JPG)DVA 上线中...\n\n不听话我就biubiubiu你\n\n![JQ3K6690](190905朵云书院-宝山宜家/JQ3K6690.JPG)fafa\n\n![JQ3K6691](190905朵云书院-宝山宜家/JQ3K6691.JPG)\n\n![JQ3K6692](190905朵云书院-宝山宜家/JQ3K6692.JPG)糖果\n\n![JQ3K6693](190905朵云书院-宝山宜家/JQ3K6693.JPG)最后结尾是！\n\n帅气的我！\n\n✌\n","tags":["恋爱","旅行"],"categories":["文字"]},{"title":"饮食的迷思","url":"/the-real-science-behind-what-we-eat/","content":"这本书我还没有详细读完整，摘录一些重要的、让我受触动的观点吧。\n\n1. 健康危机：现在肥胖越来越影响人的生活和健康。肥胖人的比例大大上升，这种变化的速度和趋势，远远大于基因变化所能带来的改变。\n2. 基因：同卵双胞胎比异卵双胞胎在实验中表现出更大的相似性（体重增长、脂肪分布等）。\n3. 微生物：人出生时，很快就会携带上大量的微生物。随着碱性的母乳喂养（中和酸性环境、使微生物能够成功进入体内），会带入大量的微生物，并且能够快速繁殖。\n4. 微生物的传递：母乳中也含有微生物，可以传递给孩子。\n5. 无菌小鼠：有氧的环境，通过剖腹产的方式生产。避开空气、母体身上的细菌。\n6. 列文虎克：第一个描述微生物的人，观察牙斑。\n7. 肠道菌群很重要：大部分细菌生活在大肠部分。长约1.5m，吸收食物中的水分。大肠前面是小肠，大部分的食物和能量在大肠吸收进血液。大肠的菌群容易受抗生素影响而产生灾难的后果。\n8. 能量：并非所有的卡路里都一样。不同饮食结构但是相同的热量，会造成不同的结果。\n9. 节俭基因：假设使人面约四是节俭基因通过演化选择而被保留下来的主要原因。但实际上和当今发展中国家的情况一样，因为儿童期感染、腹泻而非饥荒导致的死亡才是促进演化的主要因素。成人身体脂肪囤积并没有减少感染的作用。\n10. 漂移基因：吃得太胖的人不容易活下来，跑得不快。太瘦也是劣势，食物需要储存来应付突发情况。因此基因设计了相应的机制，让我们处于胖瘦这两个极端的中间状态。\n11. 节食：这个没有什么用，并且大概率会引起体重的上升。由于会饿，所以下一次的时候更加会调动人体的自我防护机制，会吸收更多食物的能量（不自觉），进行能量的储藏（身体自主，人无法控制），以避免下一次出现这种情况时对自身机能的影响。\n12. 长世界节食：这个会对人体的体重产生倾向于减轻的效果。但是需要军营或者实验室的情况才可能。因为其他环境，人自己调节都不是定量，可以有数据依据可信的。\n\n---\n\n### 结语 盘点\n\n1. > 危害的观点⚠：所有人会对同样的食物做出同样的反应。\n   >\n   > 不同的原因：遗传基因、肠道的微生物。\n\n   这个对我自己可能是很有帮助的一种思想。不要总去想着复制其他人的操作或者行为，拥抱变化，接受好的坏的，每个人都是独特的。\n\n2. > 高糖和含有大量加工食品的饮食不利于肠道微生物的健康，也不利于人体健康。富含水果蔬菜的时候对两者都有益。\n   >\n   > “多吃植物性食物，总量别太多”——美国视频健康作家迈克尔·波伦\n   >\n   > 减少精制碳水化合物我（精制通心粉、白米饭）有助于健康，并且使用全谷麦类来代替也一点也不困难。\n\n   对我自己的启示：不要每顿饭都吃上海快餐，可以尝试晚饭吃一点面食、各种各样的主食种类。不用吃太多的米饭（2两），是不是早餐吃点面包。\n\n3. 扩大食物范围，丰富肠道菌群\n\n   多吃蔬菜和水果，一份肉菜，两份素菜，至少有一个是绿颜色的菜。\n\n4. 重塑肠道菌群\n\n   这个感觉有点超乎目前的接受水平，暂时就算了。\n\n   【原文中说】可以接受其他人（原始的人）的粪便接种来获得他们的菌群。。。\n\n5. 丰富食物种类，亲近动物\n\n   确实是这个很有必要，我们生活的太钢筋铁骨现代化了，需要多接触自然。用传统人的方式，感受和与世界交互。\n\n---\n\nOver","tags":["读书笔记"],"categories":["文字"]},{"title":"convertAsciiCodesToHex","url":"/convert-ascii-codes-to-hex/","content":"### 源代码\n\n代码很简洁，让我们来学习一下。\n\n```python\ndef convertAsciiCodesToHex(asciiSeq):\n    \"\"\"\n    Converts chars in given string from hex codes to ascii symbols\n    e.g. '4A415641' -> 'JAVA'\n    @param asciiSeq: hex string for conversion\n    @rtype: string\n    @note: Don't be frustrated by the name of function!\n    '4A415641' - is ascii codes; returned value 'JAVA' - is a hex string\n    \"\"\"\n    seq = list(asciiSeq)\n    return ''.join([chr(int(''.join(l), 16)) for l in zip(seq[0::2], seq[1::2])])\n```\n\n### 内部细节\n\n用测试模式展示就一目了然：\n\n代码\n\n```python\ndef convertAsciiCodesToHex(asciiSeq):\n    seq = list(asciiSeq)\n    print(\"1 :\", \"seq\", seq)\n    print(\"2 :\", \"seq[0::2]\", seq[0::2])\n    print(\"3 :\", \"seq[1::2]\", seq[1::2])\n    print(\"4 :\", \"zip(seq[0::2], seq[1::2])\", zip(seq[0::2], seq[1::2]))\n\n    for l in zip(seq[0::2], seq[1::2]):\n        print(l, end=\" \")\n        print(''.join(l), end=\" \")\n        print(int(''.join(l), 16), end=\" \")\n        print(chr(int(''.join(l), 16)))\n\n    result = ''.join([chr(int(''.join(l), 16)) for l in zip(seq[0::2], seq[1::2])])\n    print(\"5 :\", \"result\", result)\n    return result\n\n\nsource = '4A415641'\nresult = convertAsciiCodesToHex(source)\nprint(result)\n```\n\n结果\n\n```python\n1 : seq ['4', 'A', '4', '1', '5', '6', '4', '1']\n2 : seq[0::2] ['4', '4', '5', '4']\n3 : seq[1::2] ['A', '1', '6', '1']\n4 : zip(seq[0::2], seq[1::2]) <zip object at 0x030145F8>\n('4', 'A') 4A 74 J\n('4', '1') 41 65 A\n('5', '6') 56 86 V\n('4', '1') 41 65 A\n5 : result JAVA\nJAVA\n```\n\n### 步骤及原理\n\n1. `seq = list(asciiSeq)`\n\n   将原来的序列变成列表\n\n2. `seq[0::2], seq[1::2]`\n\n   获取分别从0、1开始的间隔为 2 的序列\n\n3. `zip(seq[0::2], seq[1::2])`\n\n   按位对齐这两个序列，生成一对一对的 tuple\n\n4. `''.join(l)`\n\n   连接\n\n5. `chr(int(''.join(l), 16))`\n\n   - 以 base=16 转化上一步连接得到的字符串，生成 int\n\n   - 转换成 char\n\n6. `''.join([chr(int(''.join(l), 16)) for l in zip(seq[0::2], seq[1::2])])`\n\n   把转换成的 char 连接起来就得到我们的字符串了\n\n---\n\n### 思考\n\n其实本质是每两个一组，然后把其转换成对应的字符。\n\n那是不是对我们的`source`有要求呢？\n\n如果有的对应的是无法显示的字码，那就没有办法了。\n\n上网查询了之后发现了 ASCII 码表：\n\n| ASCII Symbol Names |                             |\n| :----------------- | --------------------------- |\n| `NUL`              | null                        |\n| `SOH`              | start of heading            |\n| `STX`              | start of text               |\n| `ETX`              | end of text                 |\n| `EOT`              | end of transmission         |\n| `ENQ`              | enquiry                     |\n| `ACK`              | acknowledge                 |\n| `BEL`              | bell                        |\n| `BS`               | backspace                   |\n| `HT`               | horizontal tab              |\n| `NL`               | new line (or LF, line feed) |\n| `VT`               | vertical tab                |\n| `NP`               | new page (or FF, form feed) |\n| `CR`               | carriage return             |\n| `SO`               | shift out                   |\n| `SI`               | shift in                    |\n| `DLE`              | data link escape            |\n| `DC1`              | device control 1            |\n| `DC2`              | device control 2            |\n| `DC3`              | device control 3            |\n| `DC4`              | device control 4            |\n| `NAK`              | negative acknowledge        |\n| `SYN`              | synchronous idle            |\n| `ETB`              | end of transmission block   |\n| `CAN`              | cancel                      |\n| `EM`               | end of medium               |\n| `SUB`              | substitute                  |\n| `ESC`              | escape                      |\n| `FS`               | file separator              |\n| `GS`               | group separator             |\n| `RS`               | record separator            |\n| `US`               | unit separator              |\n| `SP`               | space                       |\n\n##### Hexadecimal ASCII CODE\n\n| `00NUL` | `01SOH` | `02STX` | `03ETX` | `04EOT` | `05ENQ` | `06ACK` | `07BEL` | `08BS ` | `09HT ` | `0ANL ` | `0BVT ` | `0CNP ` | `0DCR ` | `0ESO ` | `0FSI ` |\n| ------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- | ------- |\n| `10DLE` | `11DC1` | `12DC2` | `13DC3` | `14DC4` | `15NAK` | `16SYN` | `17ETB` | `18CAN` | `19EM`  | `1ASUB` | `1BESC` | `1CFS`  | `1DGS`  | `1ERS`  | `1FUS`  |\n| `20SP`  | `21!`   | `22\"`   | `23#`   | `24$`   | `25%`   | `26&`   | `27'`   | `28(`   | `29)`   | `2A*`   | `2B+`   | `2C,`   | `2D-`   | `2E.`   | `2F/`   |\n| `300`   | `311`   | `322`   | `333`   | `344`   | `355`   | `366`   | `377`   | `388`   | `399`   | `3A:`   | `3B;`   | `3C<`   | `3D=`   | `3E>`   | `3F?`   |\n| `40@`   | `41A`   | `42B`   | `43C`   | `44D`   | `45E`   | `46F`   | `47G`   | `48H`   | `49I`   | `4AJ`   | `4BK`   | `4CL`   | `4DM`   | `4EN`   | `4FO`   |\n| `50P`   | `51Q`   | `52R`   | `53S`   | `54T`   | `55U`   | `56V`   | `57W`   | `58X`   | `59Y`   | `5AZ`   | `5B[`   | `5C\\`   | `5D]`   | `5E^`   | `5F_`   |\n| `60`    | `61a`   | `62b`   | `63c`   | `64d`   | `65e`   | `66f`   | `67g`   | `68h`   | `69i`   | `6Aj`   | `6Bk`   | `6Cl`   | `6Dm`   | `6En`   | `6Fo`   |\n| `70p`   | `71q`   | `72r`   | `73s`   | `74t`   | `75u`   | `76v`   | `77w`   | `78x`   | `79y`   | `7Az`   | `7B{`   | `7C|`   | `7D}`   | `7E~`   | `7FDEL` |\n\n##### Octal ASCII CODE\n\n| `000NUL` | `001SOH` | `002STX` | `003ETX` | `004EOT` | `005ENQ` | `006ACK` | `007BEL` | `010BS`  | `011HT` | `012NL`  | `013VT`  | `014NP` | `015CR` | `016SO` | `017SI`  |\n| -------- | -------- | -------- | -------- | -------- | -------- | -------- | -------- | -------- | ------- | -------- | -------- | ------- | ------- | ------- | -------- |\n| `020DLE` | `021DC1` | `022DC2` | `023DC3` | `024DC4` | `025NAK` | `026SYN` | `027ETB` | `030CAN` | `031EM` | `032SUB` | `033ESC` | `034FS` | `035GS` | `036RS` | `037US`  |\n| `040SP`  | `041!`   | `042\"`   | `043#`   | `044$`   | `045%`   | `046&`   | `047'`   | `050(`   | `051)`  | `052*`   | `053+`   | `054,`  | `055-`  | `056.`  | `057/`   |\n| `0600`   | `0611`   | `0622`   | `0633`   | `0644`   | `0655`   | `0666`   | `0677`   | `0708`   | `0719`  | `072:`   | `073;`   | `074<`  | `075=`  | `076>`  | `077?`   |\n| `100@`   | `101A`   | `102B`   | `103C`   | `104D`   | `105E`   | `106F`   | `107G`   | `110H`   | `111I`  | `112J`   | `113K`   | `114L`  | `115M`  | `116N`  | `117O`   |\n| `120P`   | `121Q`   | `122R`   | `123S`   | `124T`   | `125U`   | `126V`   | `127W`   | `130X`   | `131Y`  | `132Z`   | `133[`   | `134\\`  | `135]`  | `136^`  | `137_`   |\n| `140`    | `141a`   | `142b`   | `143c`   | `144d`   | `145e`   | `146f`   | `147g`   | `150h`   | `151i`  | `152j`   | `153k`   | `154l`  | `155m`  | `156n`  | `157o`   |\n| `160p`   | `161q`   | `162r`   | `163s`   | `164t`   | `165u`   | `166v`   | `167w`   | `170x`   | `171y`  | `172z`   | `173{`   | `174|`  | `175}`  | `176~`  | `177DEL` |\n\n##### Decimal ASCII CODE\n\n| `000NUL` | `001SOH` | `002STX` | `003ETX` | `004EOT` | `005ENQ` | `006ACK` | `007BEL` | `008BS`  | `009HT` | `010NL`  | `011VT`  | `012NP` | `013CR` | `014SO` | `015SI`  |\n| -------- | -------- | -------- | -------- | -------- | -------- | -------- | -------- | -------- | ------- | -------- | -------- | ------- | ------- | ------- | -------- |\n| `016DLE` | `017DC1` | `018DC2` | `019DC3` | `020DC4` | `021NAK` | `022SYN` | `023ETB` | `024CAN` | `025EM` | `026SUB` | `027ESC` | `028FS` | `029GS` | `030RS` | `031US`  |\n| `032SP`  | `033!`   | `034\"`   | `035#`   | `036$`   | `037%`   | `038&`   | `039'`   | `040(`   | `041)`  | `042*`   | `043+`   | `044,`  | `045-`  | `046.`  | `047/`   |\n| `0480`   | `0491`   | `0502`   | `0513`   | `0524`   | `0535`   | `0546`   | `0557`   | `0568`   | `0579`  | `058:`   | `059;`   | `060<`  | `061=`  | `062>`  | `063?`   |\n| `064@`   | `065A`   | `066B`   | `067C`   | `068D`   | `069E`   | `070F`   | `071G`   | `072H`   | `073I`  | `074J`   | `075K`   | `076L`  | `077M`  | `078N`  | `079O`   |\n| `080P`   | `081Q`   | `082R`   | `083S`   | `084T`   | `085U`   | `086V`   | `087W`   | `088X`   | `089Y`  | `090Z`   | `091[`   | `092\\`  | `093]`  | `094^`  | `095_`   |\n| `096`    | `097a`   | `098b`   | `099c`   | `100d`   | `101e`   | `102f`   | `103g`   | `104h`   | `105i`  | `106j`   | `107k`   | `108l`  | `109m`  | `110n`  | `111o`   |\n| `112p`   | `113q`   | `114r`   | `115s`   | `116t`   | `117u`   | `118v`   | `119w`   | `120x`   | `121y`  | `122z`   | `123{`   | `124|`  | `125}`  | `126~`  | `127DEL` |\n\n其实就是 ASCII 使用 二进制、八进制、十进制、十六进制的表现方式，然后转换成我们基础的字符。","categories":["技术"]},{"title":"网络配置的四大基本要素","url":"/ip-netmask-gateway-dns/","content":"\n# IP\n\nIP地址（英语：Internet Protocol Address）是一种在Internet上的给主机编址的方式，也称为网际协议地址。常见的IP地址，分为[IPv4](http://baike.baidu.com/view/21992.htm)与[IPv6](http://baike.baidu.com/view/5228.htm)两大类。\n\nIP地址就像是我们的家庭住址一样，如果你要写信给一个人，你就要知道他（她）的地址，这样邮递员才能把信送到。计算机发送信息就好比是[邮递员](http://baike.baidu.com/view/296144.htm)，它必须知道唯一的“家庭地址”才能不至于把信送错人家。只不过我们的地址使用文字来表示的，计算机的地址用二进制数字表示。\n\n众所周知，在电话通讯中，电话用户是靠电话号码来识别的。同样，在[网络](http://baike.baidu.com/view/3487.htm)中为了区别不同的计算机，也需要给计算机指定一个连网专用号码，这个号码就是“[IP地址](http://baike.baidu.com/view/3930.htm)”。\n\n将IP地址分成了网络号和[主机](http://baike.baidu.com/view/23880.htm)号两部分，设计者就必须决定每部分包含多少位。网络号的位数直接决定了可以分配的网络数（计算方法2^网络号位数 -2）；[主机](http://baike.baidu.com/view/23880.htm)号的位数则决定了网络中最大的主机数（计算方法2^主机号位数 -2）。然而，由于整个[互联网](http://baike.baidu.com/view/6825.htm)所包含的网络规模可能比较大，也可能比较小，设计者最后聪明的选择了一种灵活的方案：将IP地址空间划分成不同的类别，每一类具有不同的网络号位数和[主机](http://baike.baidu.com/view/23880.htm)号位数。\n\n[Internet](http://baike.baidu.com/view/11165.htm)上的每台[主机](http://baike.baidu.com/view/23880.htm)([Host](http://baike.baidu.com/view/207706.htm))都有一个唯一的IP。就是使用这个地址在之间信息，这是Internet 能够运行的基础。IP地址的长度为32位(共有2^32个IP地址)，分为4段，每段8位，用十进制数字表示，每段数字范围为0～255，段与段之间用句点隔开。例如159.226.1.1。\n\nIP地址 =  网络标识号码 + 主机标识号码。\n\n因此IP地址可分两部分组成，一部分为[网络地址](http://baike.baidu.com/view/547479.htm)，另一部分为[主机地址](http://baike.baidu.com/view/547482.htm)。IP地址分为A、B、C、D、E 5类，它们适用的类型分别为：大型网络；中型网络；小型网络；多目地址；备用。常用的是B和C两类。\n\n#### 特殊的网址\n\n1. “lll0”开始的地址都叫多点[广播地址](http://baike.baidu.com/view/473043.htm)。因此，任何第一个字节大于223小于240的IP地址(范围224.0.0.1-239.255.255.254)是多点[广播地址](http://baike.baidu.com/view/473043.htm)；\n\n2. 每一个字节都为0的地址（“0.0.0.0”）对应于当前[主机](http://baike.baidu.com/view/23880.htm)；\n\n3. IP地址中的每一个字节都为1的IP地址（“255．255．255．255”）是当前子网的[广播地址](http://baike.baidu.com/view/473043.htm)；\n\n4. IP地址中凡是以“llll0”开头的[E类IP地址](http://baike.baidu.com/view/2483847.htm)都保留用于将来和实验使用。\n\n5. IP地址中不能以十进制“127”作为开头，该类地址中数字127．0．0．1到127．255．255．255用于回路测试。\n\n   如：[127.0.0.1](http://baike.baidu.com/view/971216.htm)可以代表本机IP地址，用“http://127.0.0.1”就可以测试本机中配置的Web服务器。\n\n6. 网络ID的第一个6位组也不能全置为“0”，全“0”表示本地网络。\n\n### 公有地址\n\n公有地址（Public address）由Inter NIC（Internet Network Information Center[因特网](http://baike.baidu.com/view/1706.htm)信息中心）负责。\n\n这些IP地址分配给注册并向Inter NIC提出申请的组织机构。通过它直接访问[因特网](http://baike.baidu.com/view/1706.htm)。\n\n### 私有地址\n\n私有地址（Private address）属于非注册地址，专门为组织机构内部使用。\n\n以下列出留用的内部私有地址\n\nA类 10.0.0.0--10.255.255.255\n\nB类 172.16.0.0--172.31.255.255\n\nC类 192.168.0.0--192.168.255.255\n\n### 局域网中的IP\n\n在一个[局域网](http://baike.baidu.com/view/788.htm)中，有两个IP地址比较特殊，一个是网络号，一个是[广播地址](http://baike.baidu.com/view/473043.htm)。\n\n网络号是用于三层寻址的地址，它代表了整个网络本身；另一个是[广播地址](http://baike.baidu.com/view/473043.htm)，它代表了网络全部的[主机](http://baike.baidu.com/view/23880.htm)。\n\n网络号是[网段](http://baike.baidu.com/view/685503.htm)中的第一个地址，[广播地址](http://baike.baidu.com/view/473043.htm)是网段中的最后一个地址，这两个地址是不能配置在计算机[主机](http://baike.baidu.com/view/23880.htm)上的。\n\n例如在192.168.0.0，255.255.255.0这样的[网段](http://baike.baidu.com/view/685503.htm)中，网络号是192.168.0.0，[广播地址](http://baike.baidu.com/view/473043.htm)是192.168.0.255。因此，在一个[局域网](http://baike.baidu.com/view/788.htm)中，能配置在计算机中的地址比[网段](http://baike.baidu.com/view/685503.htm)内的地址要少两个（网络号、[广播地址](http://baike.baidu.com/view/473043.htm)），这些地址称之为[主机地址](http://baike.baidu.com/view/547482.htm)。在上面的例子中，[主机地址](http://baike.baidu.com/view/547482.htm)就只有192.168.0.1至192.168.0.254可以配置在计算机上了。\n\n# Netmask\n\n用来指明一个[IP地址](http://baike.baidu.com/view/3930.htm)的哪些位标识的是[主机](http://baike.baidu.com/view/23880.htm)所在的子网以及哪些位标识的是主机的位掩码。子网掩码不能单独存在，它必须结合IP地址一起使用。子网掩码只有一个作用，就是将某个IP地址划分成[网络地址](http://baike.baidu.com/view/547479.htm)和[主机地址](http://baike.baidu.com/view/547482.htm)两部分。\n\n子网掩码的设定必须遵循一定的规则。\n\n与[二进制](http://baike.baidu.com/view/18536.htm)IP地址相同，子网掩码由1和0组成，且1和0分别连续。\n\n子网掩码的长度也是32位，左边是网络位，用[二进制](http://baike.baidu.com/view/18536.htm)数字“1”表示，1的数目等于网络位的长度；右边是主机位，用二进制数字“0”表示，0的数目等于主机位的长度。\n\n这样做的目的是为了让掩码与[ip地址](http://baike.baidu.com/view/3930.htm)做AND运算时用0遮住原主机数，而不改变原网络段数字，而且很容易通过0的位数确定子网的主机数（2的主机位数次方 -2，因为主机号全为1时表示该网络[广播地址](http://baike.baidu.com/view/473043.htm)，全为0时表示该网络的[网络号](http://baike.baidu.com/view/2271538.htm)，这是两个特殊地址）。\n\n只有通过子网掩码，才能表明一台主机所在的子网与其他子网的关系，使网络正常工作。\n\n对于A类地址来说，默认的子网掩码是255.0.0.0；\n\n对于B类地址来说默认的子网掩码是255. 255.0.0；\n\n对于C类地址来说默认的子网掩码是255.255.255.0。\n\n利用子网掩码可以把大的网络划分成子网即VLSM（可变长子网掩码），也可以把小的网络归并成大的网络即超网。\n\n# Gateway\n\n[网关](http://baike.baidu.com/view/807.htm)（Gateway）就是一个网络连接到另一个网络的“关口”。\n\n一个用于 TCP/IP 协议的[配置项](http://baike.baidu.com/view/729243.htm)，是一个可直接到达的 IP[路由器](http://baike.baidu.com/view/1360.htm)的 IP[地址](http://baike.baidu.com/view/494802.htm)。\n\n\n\n赋予[路由器](http://baike.baidu.com/view/1360.htm)[IP地址](http://baike.baidu.com/view/3930.htm)的名称,与本地网络连接的机器必须把向外的流量传递到此地址中以超出本地网络,从而使那个地址成为本地[子网](http://baike.baidu.com/view/65511.htm)以外的IP地址的\"网关\"。\n\n也就是最近常用的网关,当[主机](http://baike.baidu.com/view/23880.htm)[路由表](http://baike.baidu.com/view/149989.htm)目或网络输入不存在于[本地主机](http://baike.baidu.com/view/544310.htm)的路由表时[数据包](http://baike.baidu.com/view/25880.htm)发送到那里。\n\n\n\n配置默认[网关](http://baike.baidu.com/view/807.htm)可以在 IP[路由表](http://baike.baidu.com/view/149989.htm)中创建一个默认[路径](http://baike.baidu.com/view/59642.htm)。 一台[主机](http://baike.baidu.com/view/23880.htm)可以有多个[网关](http://baike.baidu.com/view/807.htm)。\n\n默认[网关](http://baike.baidu.com/view/807.htm)的意思是一台[主机](http://baike.baidu.com/view/23880.htm)如果找不到可用的网关，就把[数据包](http://baike.baidu.com/view/25880.htm)发给默认指定的[网关](http://baike.baidu.com/view/807.htm)，由这个网关来处理数据包。\n\n现在[主机](http://baike.baidu.com/view/23880.htm)使用的网关，一般指的是默认网关。\n\n一台电脑的默认[网关](http://baike.baidu.com/view/807.htm)是不可以随随便便指定的，必须正确地指定，否则一台电脑就会将[数据包](http://baike.baidu.com/view/25880.htm)发给不是网关的电脑，从而无法与其他网络的电脑通信。\n\n默认[网关](http://baike.baidu.com/view/807.htm)的设定有手动设置和自动设置两种方式。\n\n\n\n那么[网关](http://baike.baidu.com/view/807.htm)到底是什么呢？\n\n网关实质上是一个网络通向其他网络的IP[地址](http://baike.baidu.com/view/494802.htm)。\n\n比如有网络A和网络B：\n\n- 网络A的IP[地址](http://baike.baidu.com/view/494802.htm)范围为“192.168.1.1~192. 168.1.254”，[子网掩码](http://baike.baidu.com/view/878.htm)为255.255.255.0；\n- 网络B的IP地址范围为“192.168.2.1~192.168.2.254”，子网掩码为255.255.255.0。\n\n在没有[路由器](http://baike.baidu.com/view/1360.htm)的情况下，两个网络之间是不能进行TCP/IP通信的，即使是两个网络连接在同一台[交换机](http://baike.baidu.com/view/1077.htm)（或[集线器](http://baike.baidu.com/view/7770.htm)）上，TCP/IP协议也会根据[子网掩码](http://baike.baidu.com/view/878.htm)（255.255.255.0）判定两个网络中的[主机](http://baike.baidu.com/view/23880.htm)处在不同的网络里。\n\n而要实现这两个网络之间的通信，则必须通过[网关](http://baike.baidu.com/view/807.htm)。如果网络A中的[主机](http://baike.baidu.com/view/23880.htm)发现[数据包](http://baike.baidu.com/view/25880.htm)的目的主机不在本地网络中，就把数据包转发给它自己的[网关](http://baike.baidu.com/view/807.htm)，再由[网关](http://baike.baidu.com/view/807.htm)转发给网络B的[网关](http://baike.baidu.com/view/807.htm)，网络B的网关再转发给网络B的某个主机。网络B向网络A转发[数据包](http://baike.baidu.com/view/25880.htm)的过程也是如此。\n\n所以说，只有设置好网关的IP[地址](http://baike.baidu.com/view/494802.htm)，TCP/IP协议才能实现不同网络之间的相互通信。那么这个IP[地址](http://baike.baidu.com/view/494802.htm)是哪台机器的IP[地址](http://baike.baidu.com/view/494802.htm)呢？网关的IP地址是具有[路由](http://baike.baidu.com/view/18655.htm)功能的设备的IP地址，具有路由功能的设备有[路由器](http://baike.baidu.com/view/1360.htm)、启用了[路由协议](http://baike.baidu.com/view/7031.htm)的服务器（实质上相当于一台路由器）、[代理服务器](http://baike.baidu.com/view/751.htm)（也相当于一台路由器）。\n\n\n\n# DNS \n\nDNS 是[计算机](http://baike.baidu.com/view/3314.htm)域名[系统](http://baike.baidu.com/view/25302.htm)(Domain Name System 或Domain Name Service) 的缩写，它是由[解析](http://baike.baidu.com/view/544770.htm)器以及域名[服务器](http://baike.baidu.com/view/899.htm)组成的。\n\n[域名服务器](http://baike.baidu.com/view/543329.htm)是指[保存](http://baike.baidu.com/view/338885.htm)有该[网络](http://baike.baidu.com/view/3487.htm)中所有[主机](http://baike.baidu.com/view/23880.htm)的域名和对应IP地址，并具有将[域名](http://baike.baidu.com/view/43.htm)转换为IP地址功能的服务器。\n\nDNS使用TCP与UDP端口号都是53，主要使用[UDP](http://baike.baidu.com/view/30509.htm)，服务器之间备份使用[TCP](http://baike.baidu.com/view/32754.htm)。  \n\n\n\n你在上网时输入的网址，是通过[域名解析](http://baike.baidu.com/view/30676.htm)系统解析找到了相对应的IP地址，这样[才能](http://baike.baidu.com/view/288724.htm)上网。\n\n\n\nInternet上的计算机是通过IP地址来定位的，给出一个IP地址，就可以找到Internet上的某台主机。\n\n而因为IP地址难于记忆，又发明了域名来代替[IP地址](http://baike.baidu.com/view/3930.htm)。\n\n但通过域名并不能直接找到要访问的主机，中间要加一个从  域名(可以理解为网址，如 www.baidu.com  )查找IP地址的过程，这个过程就是域名解析。\n\n域名注册后，注册商为域名提供免费的静态解析服务。\n\n一般的[域名注册商](http://baike.baidu.com/view/3065895.htm)不提供动态解析服务，如果需要用动态解析服务，需要向动态域名服务商支付域名动态解析服务费。\n\n","categories":["技术"]},{"title":"网址链接大小写","url":"/url-cap-or-lower/","content":"\n通常在浏览器地址栏输入的网址我们叫做URL(统一资源定位符:Universal Resource Locators)。\n\n先来看一个简单的URL：\n\n`http://www.example.com/here/is/path/file.html`\n\n这个URL可以简单的描述为：使用HTTP协议去[www.example.com](http://www.example.com)所在的机器上读取文件file.html这个文件。当然这是简单的去理解，更详细的解析可以看[这里](https://www.w3.org/TR/WD-html40-970708/htmlweb.html)。从这个描述中可以看到，一个URL会被分成三部分，形如：\n\n**[协议]://[域名]/[路径]**\n\n- 协议：最常见的就是HTTP跟HTTPS，除了这个还有FTP文件传输协议等，这里是不区分大小写的\n- 域名：域名(Domain Name)是需要通过域名系统(DNS)成功解析才能够正常访问到对应的IP地址，域名的命名规则之一就是：在域名中不区分大小写\n- 路径：路径部分是否区分大小写，则要看该网址对应的后台是如何实现的\n\n只有路径部分才是会区分大小写。每个网站都有后台的服务器，如果服务器只是单纯的采用路径映射到机器的文件系统中，那不同的操作系统平台是会有不同的区别的：\n\n- Linux：常见的是采用第三/四代扩展文件系统(ext3/4)，在该文件系统下是需要区分大小写的\n- Mac OS X: 使用的HFS / HFS + / APFS(2016年发布的macOS Sierra开始)文件系统是不区分大小写\n- Windows：微软公司开发的NTFS也是不区分大小写的\n\n对于我们最经常接触到应用服务器来说，访问一个路径并不是指向文件系统中的某一个文件，而是作为一个字符串传输给应用服务器进行解析处理。\n\n我这里用了Koa来做一个简单的测试，在URL的路径中输入大小写会出现什么情况。\n\n```c++\nconst Koa = require('koa')\nconst app = new Koa()\nconst router = require('koa-router')()\nrouter  \n  .get('/', (ctx, next) => { ctx.body = `root path: ${ctx.req.url}`  })\n  .get('/lowercase', (ctx, next) => {   ctx.body = `lowercase path: ${ctx.req.url}`  })\n  .get('/UPPERCASE', (ctx, next) => { ctx.body = `uppercase path: ${ctx.req.url}` })\napp.use(router.routes())\napp.listen(3000)\n```\n\n-  [http://localhost:3000/](http://localhost:3000/) -> root path: /\n-  [http://localhost:3000/lowercase](http://localhost:3000/lowercase) -> lowercase path: /lowercase\n-  [http://localhost:3000/LOWERCASE](http://localhost:3000/LOWERCASE) -> lowercase path: /LOWERCASE\n-  [http://localhost:3000/UPPERCASE](http://localhost:3000/UPPERCASE) -> uppercase path: /UPPERCASE\n-  [http://localhost:3000/uppercase](http://localhost:3000/uppercase) -> uppercase path: /uppercase\n-  [http://localhost:3000/UpPerCase](http://localhost:3000/UpPerCase) -> uppercase path: /UpPerCase\n\n👆上面的六种情况可以我们可以看到，path并没有区分大小写。\n\n当我在地址栏输入：[https://www.zhihu.com/EXPLORE](https://www.zhihu.com/EXPLORE) 并没有成功跳转，而是出现了一个404页面，这里又是什么原因呢？\n\n我们还是以刚刚Koa的那个为例子来看。在例子中，使用了[koa-router](https://github.com/alexmingoia/koa-router)这个中间件来解析路由，koa-router里面有个match方法对path解析，而这个match方法主要是调用了[path-to-regexp](https://github.com/pillarjs/path-to-regexp)来生成进行解析，最终正则成功匹配对应的路由进行访问相对应的资源。\n\n下面看看没有使用类似koa-router这样的中间件，会是怎样的效果。\n\n```c++\napp.use((ctx, next) => {\n  const path = ctx.req.url\n  if (path === '/lowercase') {\n    ctx.body = 'success to request lowercase resource'\n  } else if (path === '/UPPERCASE') {\n    ctx.body = 'SUCCESS TO REQUEST UPPERCASE RESOURCE'\n  } else {\n    ctx.body = `success to visit: ${path}`\n  }\n})\n```\n\n-  [http://localhost:3000/](http://localhost:3000/) -> success to visit: /\n-  [http://localhost:3000/lowercase](http://localhost:3000/lowercase) -> success to request lowercase resource\n-  [http://localhost:3000/LOWERCASE](http://localhost:3000/LOWERCASE) -> success to visit: /LOWERCASE\n-  [http://localhost:3000/UPPERCASE](http://localhost:3000/UPPERCASE) -> SUCCESS TO REQUEST UPPERCASE RESOURCE\n-  [http://localhost:3000/uppercase](http://localhost:3000/uppercase) -> success to visit: /uppercase\n-  [http://localhost:3000/UpPerCase](http://localhost:3000/UpPerCase) -> success to visit: /UpPerCase\n\n可以看到如果自己对path进行处理的话，是可以自己控制是否大小写敏感的。实际的运用中，为了易用性考虑，尽量满足不区分大小写，这应该也是router-koa这类中间件设计成case insensitive的考虑之一呱(猜的...hah)。知乎传说用的是Python的Tornado，而Tornado的路由采用正则直接匹配解析的，所以，访问[https://www.zhihu.com/EXPLORE](https://www.zhihu.com/EXPLORE)不成功应该是正则解析没有做到大小写不敏感吧(又是猜的...)\n\n那在微博或者其他平台里面经常看得到这样的URL：[http://t.cn/Ri98Hke](http://t.cn/Ri98Hke) 这是又是怎么一个情况呢？\n\n这种一般叫做短链接，既然都叫短链接了，自然是希望越短越好啦，然而实际的操作中我们会发现，太短满足不了日益增长的业务需求(然而并没增长)吖，那太长了也不符合实际吖，我微博只给你发140个字符，你一个链接都40个字符了。所以，大小写敏感的话会使得尽可能短又尽可能多这么变态的需求。以微博七位短链路径为例，一起来看看(数字：10个，大写字母：26个，小写字母：26个)\n\n- case insensitive: (10 + 26)^7 = 78,364,164,096\n- case sensitive: (10 + 26 + 26)^7 = 3,521,614,606,208\n\n所以短链还是大小写敏感方便一些。\n\n其实在早两天遇到这个小问题之前我还是一直以为URL是严格区分大小写的。我个人觉得如果api或者网页提供给我们使用的时候，还是应该遵从api的命名规则去使用，尽管是大小写不敏感。\n\n---\n\n### 总结\n\n那在这种情况下，我还是沿用我的\n\n全小写连接，中间使用`-`链接\n\n的方式来进行 `url` 的设置吧。"},{"title":"Windows Server2012R2安装Weblogic12.1.3","url":"/windows-server-weblogic12/","content":"\n# 写在前面\n\nWeblogic 安装配置\n\n安装版本：Weblogic 12.1.3\n\n安装环境：Windows Windows Server2012R2\n\n安装目录：C:\\Oracle\\Middleware\\Oracle_Home\n\nhttp://ip:7001/console\n\n账户/密码：weblogic/weblogic123\n\n---\n\n### 关于Weblogic\n\nOracle WebLogic应用服务器产品系列是业界最全面的开发、部署和集成企业管理软件的平台。该产品系列的核心是Oracle WebLogic服务器，它是一个功能强大和可扩展的Java EE服务器。它与Oracle应用服务器以及诸如Oracle JRockit和Oracle Coherence这样的其他性能增强产品结合在一起构成了Oracle WebLogic套件。此外，Oracle WebLogic应用网格为极限事务处理 (XTP) 提供了必要的Java基础架构。\n\nOracle WebLogic套件和Oracle WebLogic应用网格是Oracle融合中间件的战略性应用服务器产品。 在Oracle中间件战略中可了解有关这些产品及其作用的更多信息。Oracle应用服务器的客户可从持续的开发和Oracle所做的随着时间的推移将其最佳功能与Oracle WebLogic服务器相集成的承诺中受益。\n\nWeblogic的版本不同，会导致Oracle数据库的驱动不同，驱动不同可能会引起一些问题。\n\n### 关于卸载Weblogic\n\n开始 --> Oracle --> Oracle Home --> Uninstall Oracle Middleware，便开始下载了。\n\n建议，不要删除原来的Weblogic的安装目录，因为重新安装之后，仍需要部署项目，这时，原来是domain里面setDomainEnv.cmd等文件中的配置可以直接拷贝出来。\n\n### 关于安装Weblogic\n\n下载地址：http://www.oracle.com/technetwork/middleware/weblogic/downloads/wls-for-dev-1703574.html\n\n下载Generic版本：fmw_12.1.3.0.0_wls.jar\n\n以前的安装介质中有包含jdk的，比如exe，bin方式的介质，新版如12c版本的所有介质是.jar的形式，不再包括jdk。所以在安装Weblogic之前一定要先安装好jdk，设置好JAVA_HOME，PATH等相关环境变量。\n\n关于JDK的安装，最好不要使用默认的安装目录，一般会安装在Program Files目录下，该目录会导致JDK的路径中出现空格，在使用Weblogic配置一下Scheduler的时候需要给出JDK路径，但要求JDK路径不能有空格，有一些方式可以解决，但最好还是重新指定一个目录吧！\n\n安装方式：`java -jar fmw_12.1.3.0.0_wls.jar`，就可以执行安装。\n\n注意：需要使用Oracle官方文档指定支持的JDK。若安装不成功需要检查环境变量。\n\n### 安装过程\n\n以管理员身份运行 cmd。\n\n使用上述方式来激动安装。\n\n我最开始使用的是 jdk1.8 的版本，但是他提示：\n\n![1566373829557](Windows Server2012R2安装Weblogic12-1-3/1566373829557.png)\n\n查询相关资料，使用 jdk1.7 的版本。但是我个人的环境出现了一点问题，选择 exe 文件进行安装。\n\n安装过程和 [Ubuntu16.04命令行安装Weblogic](starky99.com/ubuntu16-install-weblogic10.3.6) 大同小异\n\n---\n\n#### Installing Oracle WebLogic 12.1.3\n\n使用 Oracle 自带的 Installer\n\n欢迎界面\n\n![1566374817975](Windows Server2012R2安装Weblogic12-1-3/1566374817975.png)\n\n安装目录\n\n![1566374839862](Windows Server2012R2安装Weblogic12-1-3/1566374839862.png)\n\n安装摘要\n\n![1566374863091](Windows Server2012R2安装Weblogic12-1-3/1566374863091.png)\n\n安装过程\n\n![1566374884791](Windows Server2012R2安装Weblogic12-1-3/1566374884791.png)\n\n完成后点击 Finish\n\n#### Using Fusion Middleware Configuration Wizard to Configure Oracle WebLogic 12.1.3\n\n创建一个新的域 Next >\n\n![1566375336646](Windows Server2012R2安装Weblogic12-1-3/1566375336646.png)\n\n选择模板(使用默认的选项) Next >\n\n![1566375555999](Windows Server2012R2安装Weblogic12-1-3/1566375555999.png)\n\n配置管理员的用户名和密码 Next >\n\n![1566375632066](Windows Server2012R2安装Weblogic12-1-3/1566375632066.png)\n\n域模式配置(1.开发者模式 2.生产者模式)选择2 Next >\n\n![1566375654491](Windows Server2012R2安装Weblogic12-1-3/1566375654491.png)\n\n选择可选配置（1：管理服务器；2：节点管理器；3：受管服务器，集群和计算机；）我们暂无需配置 Next >\n\n![1566375684568](Windows Server2012R2安装Weblogic12-1-3/1566375684568.png)\n\n配置总结\n\n![1566375698967](Windows Server2012R2安装Weblogic12-1-3/1566375698967.png)\n\n配置ing\n\n![1566375717421](Windows Server2012R2安装Weblogic12-1-3/1566375717421.png)\n\n配置完成！\n\n![1566375733520](Windows Server2012R2安装Weblogic12-1-3/1566375733520.png)\n\n选择 `Start Server`\n\n接着会自动处理\n\n### Start Server\n\n需要手动输入账户和密码：\n\n![1566376071493](Windows Server2012R2安装Weblogic12-1-3/1566376071493.png)\n\n确认后，系统会启动 server，并提示：\n\n![1566376122119](Windows Server2012R2安装Weblogic12-1-3/1566376122119.png)\n\n---\n\n后来我搭建了一个Docker的自动部署系统。\n\n可以一键部署Weblogic啦。\n\n没想到科技就是进步得这么的快！","tags":["环境"],"categories":["技术"]},{"title":"Python-Range","url":"/python-range/","content":"\n### range 对象\n\n[`range`](https://docs.python.org/zh-cn/3/library/stdtypes.html#range) 类型表示不可变的数字序列，通常用于在 [`for`](https://docs.python.org/zh-cn/3/reference/compound_stmts.html#for) 循环中循环指定的次数。\n\n- *class* `range`(*stop*)\n\n- *class* `range`(*start*, *stop*[, *step*])\n\n  range 构造器的参数必须为整数（可以是内置的 [`int`](https://docs.python.org/zh-cn/3/library/functions.html#int) 或任何实现了 `__index__` 特殊方法的对象）。 \n\n  - 如果省略 *step* 参数，其默认值为 `1`。 \n\n  - 如果省略 *start* 参数，其默认值为 `0`，如果 *step* 为零则会引发 [`ValueError`](https://docs.python.org/zh-cn/3/library/exceptions.html#ValueError)。\n\n  - step\n    - 如果 *step* 为正值，确定 range `r` 内容的公式为 `r[i] = start + step*i` 其中 `i >= 0` 且 `r[i] < stop`。\n    - 如果 *step* 为负值，确定 range 内容的公式仍然为 `r[i] = start + step*i`，但限制条件改为 `i >= 0` 且 `r[i] >stop`。如果 `r[0]` 不符合值的限制条件，则该 range 对象为空。\n    -  range 对象确实支持负索引，但是会将其解读为从正索引所确定的序列的末尾开始索引。元素绝对值大于 [`sys.maxsize`](https://docs.python.org/zh-cn/3/library/sys.html#sys.maxsize) 的 range 对象是被允许的，但某些特性 (例如 [`len()`](https://docs.python.org/zh-cn/3/library/functions.html#len)) 可能引发 [`OverflowError`](https://docs.python.org/zh-cn/3/library/exceptions.html#OverflowError)。\n\n- 一些 range 对象的例子:>>>`>>> list(range(10)) [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] >>> list(range(1, 11)) [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] >>> list(range(0, 30, 5)) [0, 5, 10, 15, 20, 25] >>> list(range(0, 10, 3)) [0, 3, 6, 9] >>> list(range(0, -10, -1)) [0, -1, -2, -3, -4, -5, -6, -7, -8, -9] >>> list(range(0)) [] >>> list(range(1, 0)) [] `\n\n- range 对象实现了 [一般](https://docs.python.org/zh-cn/3/library/stdtypes.html#typesseq-common) 序列的所有操作，但拼接和重复除外（这是由于 range 对象只能表示符合严格模式的序列，而重复和拼接通常都会违反这样的模式）。`start`*start* 形参的值 (如果该形参未提供则为 `0`)`stop`形参的值`step`形参的值 (如果该形参未提供则为 `1`)\n\n！！！[`range`](https://docs.python.org/zh-cn/3/library/stdtypes.html#range) 类型相比常规 [`list`](https://docs.python.org/zh-cn/3/library/stdtypes.html#list) 或 [`tuple`](https://docs.python.org/zh-cn/3/library/stdtypes.html#tuple) 的优势在于一个 [`range`](https://docs.python.org/zh-cn/3/library/stdtypes.html#range) 对象总是占用固定数量的（较小）内存，不论其所表示的范围有多大（因为它只保存了 `start`, `stop` 和 `step` 值，并会根据需要计算具体单项或子范围的值）。！！！\n\nrange 对象实现了 [`collections.abc.Sequence`](https://docs.python.org/zh-cn/3/library/collections.abc.html#collections.abc.Sequence) ABC，提供如包含检测、元素索引查找、切片等特性，并支持负索引 (参见 [序列类型 --- list, tuple, range](https://docs.python.org/zh-cn/3/library/stdtypes.html#typesseq)):\n\n```\n>>> r = range(0, 20, 2)\n>>> r\nrange(0, 20, 2)\n>>> 11 in r\nFalse\n>>> 10 in r\nTrue\n>>> r.index(10)\n5\n>>> r[5]\n10\n>>> r[:5]\nrange(0, 10, 2)\n>>> r[-1]\n18\n```\n\n使用 `==` 和 `!=` 检测 range 对象是否相等是将其作为序列来比较。 也就是说，如果两个 range 对象表示相同的值序列就认为它们是相等的。 （请注意比较结果相等的两个 range 对象可能会具有不同的 [`start`](https://docs.python.org/zh-cn/3/library/stdtypes.html#range.start), [`stop`](https://docs.python.org/zh-cn/3/library/stdtypes.html#range.stop) 和 [`step`](https://docs.python.org/zh-cn/3/library/stdtypes.html#range.step) 属性，例如 `range(0) == range(2, 1, 3)` 而 `range(0, 3, 2) == range(0, 4, 2)`。）\n\n*在 3.2 版更改:* 实现 Sequence ABC。 支持切片和负数索引。 使用 [`int`](https://docs.python.org/zh-cn/3/library/functions.html#int) 对象在固定时间内进行成员检测，而不是逐一迭代所有项。\n\n*在 3.3 版更改:* 定义 '==' 和 '!=' 以根据 range 对象所定义的值序列来进行比较（而不是根据对象的标识）。\n\n*3.3 新版功能:* [`start`](https://docs.python.org/zh-cn/3/library/stdtypes.html#range.start), [`stop`](https://docs.python.org/zh-cn/3/library/stdtypes.html#range.stop) 和 [`step`](https://docs.python.org/zh-cn/3/library/stdtypes.html#range.step) 属性。\n\n### **学习判断 range 相等。** \n\n\n```python\nrange1 = range(0)\nrange2 = range(2, 1, 3)\nprint(range1)\nprint(range2)\nprint(\"range1 == range2: \", range1 == range2)\n\n\nrange4 = range(1)\nrange3 = range(0, 3, 2)\nprint(\"range3==range4: \", range3 == range4)\n```\n\n```python\nrange(0, 0)\nrange(2, 1, 3)\nrange1 == range2:  True\nrange3==range4:  False\n```\n\n##### 使用 isRangesEqual(range1, range2) 函数：\n\n```python\ndef isRangesEqual(range1, range2):\n    \"\"\" judge if two IpRange equal\n    @type: range1, range2 -> bool\n    \"\"\"\n    if not range1 or not range2:\n        return False\n    return range1.isSubRangeOf(range2) and range2.isSubRangeOf(range1)\n```\n\n如果是双方存在空的情况，那么就不相等\n\n```python\nprint(\"#--------#\")\nrange5 = range(0)\nif range5:\n    print(\"Y\")\nelse:\n    print(\"N\") #N\n\nrange6 = range(1)\nif range6:\n    print(\"Y\") #Y\nelse:\n    print(\"N\")\n```\n\n如果双方互为对方的子集，那么就相等\n\n**但是这个还并不是 range 的函数，所以还有待考察**\n\n```python\nprint(\"#--------#\")\nrange7 = range(1, 4, 2)\nprint(\"range7: \",end=\" \")\nfor i in range7:\n    print(i, end=' ')\n\nrange8 = range(1, 6, 2)\nprint(\"\\nrange8: \",end=\" \")\nfor i in range8:\n    print(i, end=' ')\n\n# print(range7.isSubRangeOf(range8))\n```\n\n","tags":["程序员"],"categories":["Python"]},{"title":"python类中的__init__函数","url":"/python-class-init/","content":"\n### **1）class类包含：**\n\n类的属性：类中所涉及的变量 \n类的方法：类中函数\n\n### **2）_init_函数（方法）**\n\n1.首先说一下，带有两个下划线开头的函数是声明该属性为私有,不能在类地外部被使用或直接访问。 \n\n2.init函数（方法）支持带参数的类的初始化 ，也可为声明该类的属性 \n\n3.init函数（方法）的第一个参数必须是 self（self为习惯用法，也可以用别的名字），后续参数则可以自由指定，和定义函数没有任何区别。\n\n### **3）函数定义 **\n\nPython编程中对于某些需要重复调用的程序，可以使用函数进行定义，基本形式为： \n\ndef 函数名(参数1, 参数2, ……, 参数N): 其代码形式如下面所示：\n\n```python\ndef function_name (parameters): \n    block\n    return value\n```\n\n注意：在类的内部，使用def关键字可以为类定义一个函数（方法），与一般函数定义不同，类方法必须包含参数self，且为第一个参数！ \n\n此外，可以定义可变参数和关键字参数，详见下文。\n\npython函数只能先定义再调用！\n\n### **4）self参数含义** \n\n在类的代码（函数）中，需要访问当前的实例中的变量和函数的，即，访问Instance中的： \n\n对应的变量（property)：Instance.ProperyName，去读取之前的值和写入新的值 \n\n调用对应函数（function）：Instance.function()，即执行对应的动作 \n\n此处的Instance本身就是self\n\nPython 中的 self 等价于 C++ 中的 this \n\n### **5）一个简单实例**\n\n- 代码如下\n\n  ```python\n  # python 3.7\n  class person():\n      def __init__(self, name, gender, birth, **kw):\n          self.name = name\n          self.gender = gender\n          self.birth = birth\n          # print(type(kw)) # dict\n          # print(kw)#{'job': 'student', 'tel': 15221258900, 'stdid': 1}\n          for attr in kw:\n              setattr(self, attr, kw[attr])\n  \n      def sayhi(self):\n          print('my name is', self.name)\n  \n  \n  xiaoming = person('Xiao Ming', 'Male', 19990927, job='student', tel=15221258900, stdid=1)\n  xiaomin = person('Xiao Min', 'FeMale', 19990916)\n  \n  print(xiaoming.name)\n  print(xiaomin.birth)\n  print(xiaoming.job)\n  print(xiaoming.tel)\n  print(xiaoming.stdid)\n  print(xiaoming.sayhi())\n  \n  ```\n\n- 运行结果\n\n  ```python\n  Xiao Ming\n  19990916\n  student\n  15221258900\n  1\n  my name is Xiao Ming\n  ```\n\n- 实例解释 \n\n  在本例中创建了 person 类，并且创造了两个实例。\n\n  self 对应传入类的实例\n\n  - 类的属性：name\\gender\\birth\\其他kw参数\n  - 类的方法：`sayhi()`\n\n- 使用的关键字参数**kw，在 python3.7 中获取时是 dict 的形式。**\n\n- Python的可变参数和关键字参数（*args/**kw）\n\n- 使用了 `setattr()` ,可以对应添加 `**kw`中获取的参数对。\n\n#### 可变参数\n\n在Python函数中，还可以定义可变参数。顾名思义，可变参数就是**传入的参数个数是可变的**，可以是1个、2个到任意个，还可以是0个。\n\n我们以数学题为例子，给定一组数字a，b，c……，请计算a^2 + b^2 + c^2 + ……\n\n要定义出这个函数，我们必须确定输入的参数。由于参数个数不确定，我们首先想到可以把a，b，c……作为一个list或tuple传进来，这样，函数可以定义如下：\n\n```python\ndef calc(numbers):\n    sum = 0\n    for n in numbers:\n        sum = sum + n * n\n    return sum\n```\n\n但是调用的时候，需要先组装出一个list或tuple：\n\n```python\n>>> calc([1, 2, 3])\n14\n>>> calc((1, 3, 5, 7))\n84\n```\n\n如果利用可变参数，调用函数的方式可以简化成这样：\n\n```python\n>>> calc(1, 2, 3)\n14\n>>> calc(1, 3, 5, 7)\n84\n```\n\n所以，我们把函数的参数改为可变参数：\n\n```python\ndef calc(*numbers):\n    sum = 0\n    for n in numbers:\n        sum = sum + n * n\n    return sum\n```\n\n定义可变参数和定义一个list或tuple参数相比，仅仅在参数前面加了一个*号。在函数内部，参数`numbers`接收到的是一个`tuple`，因此，函数代码完全不变。但是，调用该函数时，可以传入任意个参数，包括0个参数：\n\n```python\n>>> calc(1, 2)\n5\n>>> calc()\n0\n```\n\n如果已经有一个list或者tuple，要调用一个可变参数怎么办？可以这样做：\n\n```python\n>>> nums = [1, 2, 3]\n>>> calc(nums[0], nums[1], nums[2])\n14\n```\n\n这种写法当然是可行的，问题是太繁琐，所以Python允许你在list或tuple前面加一个`*`号，把list或tuple的元素变成可变参数传进去：\n\n```python\n>>> nums = [1, 2, 3]\n>>> calc(*nums)\n14\n```\n\n`*nums`表示把`nums`这个list的所有元素作为可变参数传进去。这种写法相当有用，而且很常见。\n\n#### 关键字参数\n\n**可变参数允许你传入0个或任意个参数，这些可变参数在函数调用时自动组装为一个tuple,而关键字参数允许你传入0个或任意个含参数名的参数，这些关键字参数在函数内部自动组装为一个dict**。请看示例：\n\n```python\ndef person(name, age, **kw):\n    print('name:', name, 'age:', age, 'other:', kw)\n```\n\n函数`person`除了必选参数`name`和`age`外，还接受关键字参数`kw`。在调用该函数时，可以只传入必选参数：\n\n```python\n>>> person('Michael', 30)\nname: Michael age: 30 other: {}\n```\n\n也可以传入任意个数的关键字参数：\n\n```python\n>>> person('Bob', 35, city='Beijing')\nname: Bob age: 35 other: {'city': 'Beijing'}\n>>> person('Adam', 45, gender='M', job='Engineer')\nname: Adam age: 45 other: {'gender': 'M', 'job': 'Engineer'}\n```\n\n关键字参数有什么用？它可以扩展函数的功能。比如，在`person`函数里，我们保证能接收到name和age这两个参数，但是，如果调用者愿意提供更多的参数，我们也能收到。试想你正在做一个用户注册的功能，除了用户名和年龄是必填项外，其他都是可选项，利用关键字参数来定义这个函数就能满足注册的需求。\n\n和可变参数类似，也可以先组装出一个`dict`，然后，把该dict转换为关键字参数传进去：\n\n```python\n>>> extra = {'city': 'Beijing', 'job': 'Engineer'}\n>>> person('Jack', 24, city=extra['city'], job=extra['job'])\nname: Jack age: 24 other: {'city': 'Beijing', 'job': 'Engineer'}\n```\n\n当然，上面复杂的调用可以用简化的写法：\n\n```python\n>>> extra = {'city': 'Beijing', 'job': 'Engineer'}\n>>> person('Jack', 24, **extra)\nname: Jack age: 24 other: {'city': 'Beijing', 'job': 'Engineer'}\n```\n\n`**extra`表示把`extra`这个`dic`t的所有`key-value`用关键字参数传入到函数的`**kw参数`，kw将获得一个dict，**注意kw获得的dict是extra的一份拷贝，对kw的改动不会影响到函数外的extra**。\n\n#### 命名关键字参数\n\n对于关键字参数，函数的调用者可以传入任意不受限制的关键字参数。至于到底传入了哪些，就需要在函数内部通过kw检查。\n\n仍以person()函数为例，我们希望检查是否有city和job参数：\n\n```python\ndef person(name, age, **kw):\n    if 'city' in kw:\n        # 有city参数\n        pass\n    if 'job' in kw:\n        # 有job参数\n        pass\n    print('name:', name, 'age:', age, 'other:', kw)\n```\n\n但是调用者仍可以传入不受限制的关键字参数：\n\n```python\n>>> person('Jack', 24, city='Beijing', addr='Chaoyang', zipcode=123456)\n```\n\n如果要限制关键字参数的名字，就可以用命名关键字参数，例如，只接收`city`和`job`作为关键字参数。这种方式定义的函数如下：\n\n```python\ndef person(name, age, *, city, job):\n    print(name, age, city, job)\n```\n\n和关键字参数`**kw`不同，命名关键字参数需要一个特殊分隔符*，*后面的参数被视为命名关键字参数。\n\n这个不能缺少参数。比如只添加了`city`，就会报错。\n\n```python\n>>> person(\"Hanwen\", 19, city=\"Shanghai\")\nTypeError: person() missing 1 required keyword-only argument: 'job'\n```\n\n调用方式如下：\n\n```python\n>>> person('Jack', 24, city='Beijing', job='Engineer')\nJack 24 Beijing Engineer\n```\n\n命名关键字参数必须传入参数名，这和位置参数不同。如果没有传入参数名，调用将报错：\n\n```python\n>>> person('Jack', 24, 'Beijing', 'Engineer')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: person() takes 2 positional arguments but 4 were given\n```\n\n由于调用时缺少参数名`city`和`job`，Python解释器把这4个参数均视为位置参数，但`person()`函数仅接受2个位置参数。\n\n命名关键字参数可以有缺省值，从而简化调用：\n\ndef person(name, age, *, city='Beijing', job):\n print(name, age, city, job)\n\n由于命名关键字参数city具有默认值，调用时，可不传入city参数：\n\n```python\n>>> person('Jack', 24, job='Engineer')\nJack 24 Beijing Engineer\n```\n\n使用命名关键字参数时，要特别注意，*不是参数，而是特殊分隔符。如果缺少*，Python解释器将无法识别位置参数和命名关键字参数：\n\n```python\ndef person(name, age, city, job):\n    # 缺少 *，city和job被视为位置参数\n    pass\n```\n\n#### 参数组合\n\n在Python中定义函数，可以用必选参数、默认参数、可变参数、关键字参数和命名关键字参数，这5种参数都可以组合使用，除了可变参数无法和命名关键字参数混合。**但是请注意，参数定义的顺序必须是：必选参数、默认参数、可变参数/命名关键字参数和关键字参数。**\n\n比如定义一个函数，包含上述若干种参数：\n\n```python\ndef f1(a, b, c=0, *args, **kw):\n    print('a =', a, 'b =', b, 'c =', c, 'args =', args, 'kw =', kw)\n\ndef f2(a, b, c=0, *, d, **kw):\n    print('a =', a, 'b =', b, 'c =', c, 'd =', d, 'kw =', kw)\n```\n\n在函数调用的时候，Python解释器自动按照参数位置和参数名把对应的参数传进去。\n\n```python\n>>> f1(1, 2)\na = 1 b = 2 c = 0 args = () kw = {}\n>>> f1(1, 2, c=3)\na = 1 b = 2 c = 3 args = () kw = {}\n>>> f1(1, 2, 3, 'a', 'b')\na = 1 b = 2 c = 3 args = ('a', 'b') kw = {}\n>>> f1(1, 2, 3, 'a', 'b', x=99)\na = 1 b = 2 c = 3 args = ('a', 'b') kw = {'x': 99}\n>>> f2(1, 2, d=99, ext=None)\na = 1 b = 2 c = 0 d = 99 kw = {'ext': None}\n```\n\n最神奇的是通过一个`tuple`和`dict`，你也可以调用上述函数：\n\n```python\n>>> args = (1, 2, 3, 4)\n>>> kw = {'d': 99, 'x': '#'}\n>>> f1(*args, **kw)\na = 1 b = 2 c = 3 args = () kw = {'d': 99, 'x': '#'}\n>>> args = (1, 2, 3)\n>>> kw = {'d': 88, 'x': '#'}\n>>> f2(*args, **kw)\na = 1 b = 2 c = 3 d = 88 kw = {'x': '#'}\n```\n\n所以，对于任意函数，都可以通过类似`func(*args, **kw)`的形式调用它，无论它的参数是如何定义的。\n\n`备注`参数的传入是一个识别的过程，需要保留`*`和`**`，但是不用限制参数的名字。\n\n## 小结\n\nPython的函数具有非常灵活的参数形态，既可以实现简单的调用，又可以传入非常复杂的参数。\n\n默认参数一定要用不可变对象，如果是可变对象，程序运行时会有逻辑错误！\n\n要注意定义可变参数和关键字参数的语法：\n\n`*args`是可变参数，`args`接收的是一个`tuple`；\n\n`**kw`是关键字参数，`kw`接收的是一个`dict`。\n\n以及调用函数时如何传入可变参数和关键字参数的语法：\n\n可变参数既可以直接传入：`func(1, 2, 3)`，又可以先组装list或tuple，再通过`*args`传入：`func(*(1, 2, 3))`；\n\n关键字参数既可以直接传入：`func(a=1, b=2)`，又可以先组装dict，再通过`**kw`传入：`func(**{'a': 1, 'b': 2})`。\n\n使用`*args`和`**kw`是Python的习惯写法，当然也可以用其他参数名，但最好使用习惯用法。\n\n命名的关键字参数是为了限制调用者可以传入的参数名，同时可以提供默认值。\n\n定义命名的关键字参数不要忘了写分隔符*，否则定义的将是位置参数。","categories":["Python"]},{"title":"htm和html的区别","url":"/htm-html/","content":"\n先说结论，htm 和 html 是不同的，但是不同也没有那么明显。\n\n包含HTML内容的文件最常用的扩展名是.html，但是像DOS这样的旧操作系统限制扩展名为最多3个字符，所以.htm扩展名也被使用。虽然现在使用的比较少一些了，但是.htm扩展名仍旧普遍被支持。\n\n两种都是静态网页文件的扩展名，扩展名可以互相更换而不会引起错误(这是指打开而言，但是对于一个链接来说，如果它指向的是一个htm文件，而那个htm文件被更改为html文件，那么是找不到这个连接的)\n\n1、html 比 htm 的载入速度快\n\n2、htm 为DOS三字符文件扩展名时代而来\n\n3、html 为Windows时代支持多字符扩展名\n\n---\n\n还有一种网页的后缀是 shtml 后缀。\n\n这三种只是扩展名不同，但是都是静态的网页。\n\n### Shtml与shtm\n\nshtml命名的网页文件里，使用了ssi的一些指令，就像asp中的指令，你可以在SHTML文件中写入SSI指令，当客户端访问这些shtml文件时，服务器端会把这些SHTML文件进行读取和解释，把SHTML文件中包含的SSI指令解释出来。\n\n而shtml与shtm后缀的网页文件没有区别，后缀名可以互换，区别在于和html与htm一样多与少“L”。\n\n\n\n\n\n","tags":["程序员"]},{"title":"关于不用智能手机的可行性","url":"/no-iPhone/","content":"\n### App\n\n#### 最常使用：\n\n- 微信\n\n- 共享单车\n\n- 支付宝\n\n- 地图\n\n- 记账\n\n#### 次常使用\n\n- 地铁\n- 筋斗云\n- QQ\n\n#### 可以替代\n\n- 知乎\n\n---\n\n可以发现我的应用组成，在去掉流水线信息的 APP 之后还是很健康的。\n\n### 一个一个解决问题\n\n##### 微信 √\n\n可以在电脑端登陆，并且保持登陆不退出。\n\n##### 共享单车 √\n\n在校园内可以骑自己的车子，校外出行就需要更换智能设备了。\n\n##### 支付宝\n\n无解\n\n##### 地图 √\n\n校内不用，远距离需要购买地图\n\n##### 记账 √\n\n食堂吃饭记账，可以从充值入手\n\n##### 地铁 √\n\n用卡，需解决随时有钱的问题\n\n##### 筋斗云 √\n\n我自己也不用\n\n##### QQ √\n\n已经很少用了\n\n##### 知乎 √\n\nweb 端收账\n\n---\n\n在校内而言，这些都不是问题。\n\n学习：上课🆗自习🆗\n\n生活：散步🆗吃饭(饭卡🆗)\n\n钱：\n\n- 校内可以用校园卡完全替代支付宝，不能用支付宝的我就不买了。\n- 校园卡的袋子里面带着储蓄卡和学生卡(不带信用卡是为了防止盗刷、挂失风险)\n\n交通：随时随地都骑自己的车\n\n---\n\n出校门的时候需要切换手机了\n\n一般没有需要临时出门的情况，所以就是手机平板放在寝室充电吧。\n\n电脑图书馆一直开着电、上课记笔记啥的，在寝室插电接收消息。\n\n手机套上透明壳，放上拆手机卡的针。\n\n\n\n"},{"title":"Ubuntu16.04命令行安装Weblogic","url":"/ubuntu16-install-weblogic10.3.6/","content":"## 安装之前\n\n- 需要安装 java\n\n- 在 Oracle 官网下载 [Generic  安装包](https://www.oracle.com/technetwork/middleware/weblogic/downloads/wls-main-097127.html)，下载完成上传到需要安装的服务器上\n\n  ![1565088679434](Ubuntu16安装Weblogic/1565088679434.png)\n\n- 创建weblogic用户\n\n  ```terminal\n  useradd weblogic\n  passwd weblogic\n  ```\n\n  赋予安装文件可执行的权限\n\n  ```terminal\n  chmod a+x wls1036_generic.jar\n  ```\n\n## 开始安装\n\n- 切换到 weblogic 账户\n\n  ```terminal\n  su weblogic\n  ```\n\n- 安装\n\n  ```\n  java -jar wls1026_generic.jar\n  ```\n\n  默认是 console 安装，因为我们也是命令行模式，所以正好。\n  \n  过程细节可以参见这个文章：[linux安装weblogic10.3.6](https://blog.csdn.net/cz596738622/article/details/80483812)\n  \n  \n  \n  我安装过程一切顺利，继续\n\n\n\n## 启动 \n\n进入domain的安装目录\n\n```\ncd /home/weblogic/Oracle/Middleware/user_projects/domains/base_domain\n```\n\n执行 startWebLogic.sh 文件\n\n```\n./startWebLogic.sh\n```\n\n![img](Ubuntu16安装Weblogic/195402854.jpg)\n\n按照提示输入账户和密码\n\n![img](Ubuntu16安装Weblogic/195501368.jpg)\n\n密码输入的时候是没有显示的。输入完成后回车确认。\n\n如果用户名密码正确我们在最后会看到如下信息。\n\n![img](Ubuntu16安装Weblogic/195519370.jpg)\n\n这个时候就说明我们的WebLogic以经启动了。\n\n## Weblogic\n\n控制台输入：http://x.x.x.x:7001/console（若创建domain修改端口，输入你配置的端口）\n\n![img](Ubuntu16安装Weblogic/20180528234810512)\n\n输入输入创建域的用户名：weblogic，口令： weblogic123\n![img](Ubuntu16安装Weblogic/20180528234926138)\n\n打开这个页面的时候需要一定的时间。\n\n---\n\n上面就是装环境结束了，后面可能还需要一些高阶配置：\n\n[项目的配置](https://blog.51cto.com/tlinle/839935)","tags":["环境"],"categories":["技术"]},{"title":"博客-CSS颜色","url":"/blog-css/","content":"\n<div id=\"maincontent\">\n\n<h1>CSS 颜色</h1>\n\n<div id=\"intro\">\n<p>颜色是通过对红、绿和蓝光的组合来显示的。</p>\n</div>\n<div>\n<h2>颜色值</h2>\n\n<p>CSS 颜色使用组合了红绿蓝颜色值 (RGB) 的十六进制 (hex) 表示法进行定义。对光源进行设置的最低值可以是 0（十六进制 00）。最高值是 255（十六进制 FF）。</p>\n<p>十六进制值使用三个双位数来编写，并以 # 符号开头。</p>\n<table class=\"dataintable\">\n  <tbody><tr>\n<th style=\"width:50%; text-align:left;\">颜色</th>\n<th style=\"width:25%; text-align:left;\">颜色 HEX</th>\n<th style=\"width:25%; text-align:left;\">颜色 RGB</th>\n  </tr>\n  <tr>\n    <td style=\"background-color:#000000\">&nbsp;</td>\n    <td>#000000</td>\n    <td>rgb(0,0,0)</td>\n  </tr>\n  <tr>\n    <td style=\"background-color:#FF0000\">&nbsp;</td>\n    <td>#FF0000</td>\n    <td>rgb(255,0,0)</td>\n  </tr>\n  <tr>\n    <td style=\"background-color:#00FF00\">&nbsp;</td>\n    <td>#00FF00</td>\n    <td>rgb(0,255,0)</td>\n  </tr>\n  <tr>\n    <td style=\"background-color:#0000FF\">&nbsp;</td>\n    <td>#0000FF</td>\n    <td>rgb(0,0,255)</td>\n  </tr>\n  <tr>\n    <td style=\"background-color: rgb(193, 230, 198); transition: background-color 0.3s ease 0s;\" class=\"eye-protector-processed\">&nbsp;</td>\n    <td>#FFFF00</td>\n    <td>rgb(255,255,0)</td>\n  </tr>\n  <tr>\n    <td style=\"background-color:#00FFFF\">&nbsp;</td>\n    <td>#00FFFF</td>\n    <td>rgb(0,255,255)</td>\n  </tr>\n  <tr>\n    <td style=\"background-color:#FF00FF\">&nbsp;</td>\n    <td>#FF00FF</td>\n    <td>rgb(255,0,255)</td>\n  </tr>\n  <tr>\n    <td style=\"background-color:#C0C0C0\">&nbsp;</td>\n    <td>#C0C0C0</td>\n    <td>rgb(192,192,192)</td>\n  </tr>\n  <tr>\n    <td style=\"background-color: rgb(193, 230, 198); transition: background-color 0.3s ease 0s;\" class=\"eye-protector-processed\">&nbsp;</td>\n    <td>#FFFFFF</td>\n    <td>rgb(255,255,255)</td>\n  </tr>\n</tbody></table>\n\n\n\n\n<div>\n<h2>1600 万种不同的颜色</h2>\n\n<p>从 0 到 255 种红绿蓝值能够组合出总共超过一千六百万种不同的颜色（根据 256 x 256 x 256 计算）。</p>\n<p>大多数现代的显示器都能显示出至少 16384 种不同的颜色。</p>\n<p>如果您查看下面的表格，您将看到红光从 0 到 255 变化后的结果，此时绿光和蓝光为零。</p>\n<p>如需查看红光由 0 向 255 变化的完整颜色混合器列表，请点击下面的十六进制值或 rgb 值。</p>\n<table class=\"dataintable\">\n<tbody><tr>\n<th style=\"width:50%\">Red Light</th>\n<th style=\"width:25%\">HEX</th>\n<th style=\"width:25%\">RGB</th>\n</tr>\n\n<tr>\n<td style=\"background-color:#000000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=0\">#000000</a></td>\n<td><a href=\"css_colorsmore.asp?color=0\">rgb(0,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#080000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=8\">#080000</a></td>\n<td><a href=\"css_colorsmore.asp?color=8\">rgb(8,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#100000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=16\">#100000</a></td>\n<td><a href=\"css_colorsmore.asp?color=16\">rgb(16,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#180000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=24\">#180000</a></td>\n<td><a href=\"css_colorsmore.asp?color=24\">rgb(24,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#200000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=32\">#200000</a></td>\n<td><a href=\"css_colorsmore.asp?color=32\">rgb(32,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#280000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=40\">#280000</a></td>\n<td><a href=\"css_colorsmore.asp?color=40\">rgb(40,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#300000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=48\">#300000</a></td>\n<td><a href=\"css_colorsmore.asp?color=48\">rgb(48,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#380000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=56\">#380000</a></td>\n<td><a href=\"css_colorsmore.asp?color=56\">rgb(56,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#400000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=64\">#400000</a></td>\n<td><a href=\"css_colorsmore.asp?color=64\">rgb(64,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#480000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=72\">#480000</a></td>\n<td><a href=\"css_colorsmore.asp?color=72\">rgb(72,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#500000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=80\">#500000</a></td>\n<td><a href=\"css_colorsmore.asp?color=80\">rgb(80,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#580000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=88\">#580000</a></td>\n<td><a href=\"css_colorsmore.asp?color=88\">rgb(88,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#600000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=96\">#600000</a></td>\n<td><a href=\"css_colorsmore.asp?color=96\">rgb(96,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#680000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=104\">#680000</a></td>\n<td><a href=\"css_colorsmore.asp?color=104\">rgb(104,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#700000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=112\">#700000</a></td>\n<td><a href=\"css_colorsmore.asp?color=112\">rgb(112,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#780000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=120\">#780000</a></td>\n<td><a href=\"css_colorsmore.asp?color=120\">rgb(120,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#800000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=128\">#800000</a></td>\n<td><a href=\"css_colorsmore.asp?color=128\">rgb(128,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#880000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=136\">#880000</a></td>\n<td><a href=\"css_colorsmore.asp?color=136\">rgb(136,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#900000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=144\">#900000</a></td>\n<td><a href=\"css_colorsmore.asp?color=144\">rgb(144,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#980000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=152\">#980000</a></td>\n<td><a href=\"css_colorsmore.asp?color=152\">rgb(152,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#A00000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=160\">#A00000</a></td>\n<td><a href=\"css_colorsmore.asp?color=160\">rgb(160,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#A80000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=168\">#A80000</a></td>\n<td><a href=\"css_colorsmore.asp?color=168\">rgb(168,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#B00000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=176\">#B00000</a></td>\n<td><a href=\"css_colorsmore.asp?color=176\">rgb(176,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#B80000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=184\">#B80000</a></td>\n<td><a href=\"css_colorsmore.asp?color=184\">rgb(184,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#C00000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=192\">#C00000</a></td>\n<td><a href=\"css_colorsmore.asp?color=192\">rgb(192,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#C80000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=200\">#C80000</a></td>\n<td><a href=\"css_colorsmore.asp?color=200\">rgb(200,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#D00000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=208\">#D00000</a></td>\n<td><a href=\"css_colorsmore.asp?color=208\">rgb(208,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#D80000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=216\">#D80000</a></td>\n<td><a href=\"css_colorsmore.asp?color=216\">rgb(216,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#E00000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=224\">#E00000</a></td>\n<td><a href=\"css_colorsmore.asp?color=224\">rgb(224,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#E80000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=232\">#E80000</a></td>\n<td><a href=\"css_colorsmore.asp?color=232\">rgb(232,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#F00000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=240\">#F00000</a></td>\n<td><a href=\"css_colorsmore.asp?color=240\">rgb(240,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#F80000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=248\">#F80000</a></td>\n<td><a href=\"css_colorsmore.asp?color=248\">rgb(248,0,0)</a></td>\n</tr>\n\n<tr>\n<td style=\"background-color:#FF0000\">&nbsp;</td>\n<td><a href=\"css_colorsmore.asp?color=255\">#FF0000</a></td>\n<td><a href=\"css_colorsmore.asp?color=255\">rgb(255,0,0)</a></td>\n</tr>\n\n</tbody></table>\n</div>\n\n\n<div>\n<h2>灰阶</h2>\n\n<p>灰色使用所有光源的等量的光线来显示。为了让您更方便地选择正确的灰色，我们已经为您编辑了一个灰色列表：</p>\n<table class=\"dataintable\">\n<tbody><tr>\n<th style=\"width:50%;\">灰阶</th>\n<th style=\"width:25%;\">HEX</th>\n<th style=\"width:25%;\">RGB</th>\n</tr>\n\n<tr>\n<td style=\"background-color:#000000;\"></td>\n<td>#000000</td>\n<td>rgb(0,0,0)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#080808;\"></td>\n<td>#080808</td>\n<td>rgb(8,8,8)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#101010;\"></td>\n<td>#101010</td>\n<td>rgb(16,16,16)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#181818;\"></td>\n<td>#181818</td>\n<td>rgb(24,24,24)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#202020;\"></td>\n<td>#202020</td>\n<td>rgb(32,32,32)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#282828;\"></td>\n<td>#282828</td>\n<td>rgb(40,40,40)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#303030;\"></td>\n<td>#303030</td>\n<td>rgb(48,48,48)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#383838;\"></td>\n<td>#383838</td>\n<td>rgb(56,56,56)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#404040;\"></td>\n<td>#404040</td>\n<td>rgb(64,64,64)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#484848;\"></td>\n<td>#484848</td>\n<td>rgb(72,72,72)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#505050;\"></td>\n<td>#505050</td>\n<td>rgb(80,80,80)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#585858;\"></td>\n<td>#585858</td>\n<td>rgb(88,88,88)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#606060;\"></td>\n<td>#606060</td>\n<td>rgb(96,96,96)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#686868;\"></td>\n<td>#686868</td>\n<td>rgb(104,104,104)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#707070;\"></td>\n<td>#707070</td>\n<td>rgb(112,112,112)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#787878;\"></td>\n<td>#787878</td>\n<td>rgb(120,120,120)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#808080;\"></td>\n<td>#808080</td>\n<td>rgb(128,128,128)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#888888;\"></td>\n<td>#888888</td>\n<td>rgb(136,136,136)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#909090;\"></td>\n<td>#909090</td>\n<td>rgb(144,144,144)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#989898;\"></td>\n<td>#989898</td>\n<td>rgb(152,152,152)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#A0A0A0;\"></td>\n<td>#A0A0A0</td>\n<td>rgb(160,160,160)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#A8A8A8;\"></td>\n<td>#A8A8A8</td>\n<td>rgb(168,168,168)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#B0B0B0;\"></td>\n<td>#B0B0B0</td>\n<td>rgb(176,176,176)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#B8B8B8;\"></td>\n<td>#B8B8B8</td>\n<td>rgb(184,184,184)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#C0C0C0;\"></td>\n<td>#C0C0C0</td>\n<td>rgb(192,192,192)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#C8C8C8;\"></td>\n<td>#C8C8C8</td>\n<td>rgb(200,200,200)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#D0D0D0;\"></td>\n<td>#D0D0D0</td>\n<td>rgb(208,208,208)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#D8D8D8;\"></td>\n<td>#D8D8D8</td>\n<td>rgb(216,216,216)</td>\n</tr>\n\n<tr>\n<td style=\"background-color:#E0E0E0;\"></td>\n<td>#E0E0E0</td>\n<td>rgb(224,224,224)</td>\n</tr>\n\n<tr>\n<td style=\"background-color: rgb(193, 230, 198); transition: background-color 0.3s ease 0s;\" class=\"eye-protector-processed\"></td>\n<td>#E8E8E8</td>\n<td>rgb(232,232,232)</td>\n</tr>\n\n<tr>\n<td style=\"background-color: rgb(193, 230, 198); transition: background-color 0.3s ease 0s;\" class=\"eye-protector-processed\"></td>\n<td>#F0F0F0</td>\n<td>rgb(240,240,240)</td>\n</tr>\n\n<tr>\n<td style=\"background-color: rgb(193, 230, 198); transition: background-color 0.3s ease 0s;\" class=\"eye-protector-processed\"></td>\n<td>#F8F8F8</td>\n<td>rgb(248,248,248)</td>\n</tr>\n\n<tr>\n<td style=\"background-color: rgb(193, 230, 198); transition: background-color 0.3s ease 0s;\" class=\"eye-protector-processed\"></td>\n<td>#FFFFFF</td>\n<td>rgb(255,255,255)</td>\n</tr>\n</tbody></table>\n</div>\n\n\n<div>\n<h2>网络安全色？</h2>\n\n<p>多年前，当电脑只支持最多 256 种颜色时，216 种“网络安全色”列表被定义为 Web 标准，并保留了 40 种固定的系统颜色。</p>\n<p>现在，这些都不重要了，因为大多数电脑都能显示数百万种颜色，但是选择权依然在您手里。</p>\n<p>这个 216 跨浏览器调色板被创建的目的是确保当计算机运行 256 色调色板时能够正确地显示颜色：</p>\n<table class=\"dataintable\" style=\"text-align:center;\">\n<tbody><tr>\n<td style=\"color:#ffffff; background-color:#000000;\">000000</td>\n<td style=\"color:#ffffff; background-color:#000033;\">000033</td>\n<td style=\"color:#ffffff; background-color:#000066;\">000066</td>\n<td style=\"color:#ffffff; background-color:#000099;\">000099</td>\n<td style=\"color:#ffffff; background-color:#0000CC;\">0000CC</td>\n<td style=\"color:#ffffff; background-color:#0000FF;\">0000FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#ffffff; background-color:#003300;\">003300</td>\n<td style=\"color:#ffffff; background-color:#003333;\">003333</td>\n<td style=\"color:#ffffff; background-color:#003366;\">003366</td>\n<td style=\"color:#ffffff; background-color:#003399;\">003399</td>\n<td style=\"color:#ffffff; background-color:#0033CC;\">0033CC</td>\n<td style=\"color:#ffffff; background-color:#0033FF;\">0033FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#ffffff; background-color:#006600;\">006600</td>\n<td style=\"color:#ffffff; background-color:#006633;\">006633</td>\n<td style=\"color:#ffffff; background-color:#006666;\">006666</td>\n<td style=\"color:#ffffff; background-color:#006699;\">006699</td>\n<td style=\"color:#ffffff; background-color:#0066CC;\">0066CC</td>\n<td style=\"color:#ffffff; background-color:#0066FF;\">0066FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#000000; background-color:#009900;\">009900</td>\n<td style=\"color:#000000; background-color:#009933;\">009933</td>\n<td style=\"color:#000000; background-color:#009966;\">009966</td>\n<td style=\"color:#000000; background-color:#009999;\">009999</td>\n<td style=\"color:#000000; background-color:#0099CC;\">0099CC</td>\n<td style=\"color:#000000; background-color:#0099FF;\">0099FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#000000; background-color:#00CC00;\">00CC00</td>\n<td style=\"color:#000000; background-color:#00CC33;\">00CC33</td>\n<td style=\"color:#000000; background-color:#00CC66;\">00CC66</td>\n<td style=\"color:#000000; background-color:#00CC99;\">00CC99</td>\n<td style=\"color:#000000; background-color:#00CCCC;\">00CCCC</td>\n<td style=\"color:#000000; background-color:#00CCFF;\">00CCFF</td>\n</tr>\n\n<tr>\n<td style=\"color:#000000; background-color:#00FF00;\">00FF00</td>\n<td style=\"color:#000000; background-color:#00FF33;\">00FF33</td>\n<td style=\"color:#000000; background-color:#00FF66;\">00FF66</td>\n<td style=\"color:#000000; background-color:#00FF99;\">00FF99</td>\n<td style=\"color:#000000; background-color:#00FFCC;\">00FFCC</td>\n<td style=\"color:#000000; background-color:#00FFFF;\">00FFFF</td>\n</tr>\n\n<tr>\n<td style=\"color:#ffffff; background-color:#330000;\">330000</td>\n<td style=\"color:#ffffff; background-color:#330033;\">330033</td>\n<td style=\"color:#ffffff; background-color:#330066;\">330066</td>\n<td style=\"color:#ffffff; background-color:#330099;\">330099</td>\n<td style=\"color:#ffffff; background-color:#3300CC;\">3300CC</td>\n<td style=\"color:#ffffff; background-color:#3300FF;\">3300FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#ffffff; background-color:#333300;\">333300</td>\n<td style=\"color:#ffffff; background-color:#333333;\">333333</td>\n<td style=\"color:#ffffff; background-color:#333366;\">333366</td>\n<td style=\"color:#ffffff; background-color:#333399;\">333399</td>\n<td style=\"color:#ffffff; background-color:#3333CC;\">3333CC</td>\n<td style=\"color:#ffffff; background-color:#3333FF;\">3333FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#ffffff; background-color:#336600;\">336600</td>\n<td style=\"color:#ffffff; background-color:#336633;\">336633</td>\n<td style=\"color:#ffffff; background-color:#336666;\">336666</td>\n<td style=\"color:#ffffff; background-color:#336699;\">336699</td>\n<td style=\"color:#ffffff; background-color:#3366CC;\">3366CC</td>\n<td style=\"color:#ffffff; background-color:#3366FF;\">3366FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#000000; background-color:#339900;\">339900</td>\n<td style=\"color:#000000; background-color:#339933;\">339933</td>\n<td style=\"color:#000000; background-color:#339966;\">339966</td>\n<td style=\"color:#000000; background-color:#339999;\">339999</td>\n<td style=\"color:#000000; background-color:#3399CC;\">3399CC</td>\n<td style=\"color:#000000; background-color:#3399FF;\">3399FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#000000; background-color:#33CC00;\">33CC00</td>\n<td style=\"color:#000000; background-color:#33CC33;\">33CC33</td>\n<td style=\"color:#000000; background-color:#33CC66;\">33CC66</td>\n<td style=\"color:#000000; background-color:#33CC99;\">33CC99</td>\n<td style=\"color:#000000; background-color:#33CCCC;\">33CCCC</td>\n<td style=\"color:#000000; background-color:#33CCFF;\">33CCFF</td>\n</tr>\n\n<tr>\n<td style=\"color:#000000; background-color:#33FF00;\">33FF00</td>\n<td style=\"color:#000000; background-color:#33FF33;\">33FF33</td>\n<td style=\"color:#000000; background-color:#33FF66;\">33FF66</td>\n<td style=\"color:#000000; background-color:#33FF99;\">33FF99</td>\n<td style=\"color:#000000; background-color:#33FFCC;\">33FFCC</td>\n<td style=\"color:#000000; background-color:#33FFFF;\">33FFFF</td>\n</tr>\n\n<tr>\n<td style=\"color:#ffffff; background-color:#660000;\">660000</td>\n<td style=\"color:#ffffff; background-color:#660033;\">660033</td>\n<td style=\"color:#ffffff; background-color:#660066;\">660066</td>\n<td style=\"color:#ffffff; background-color:#660099;\">660099</td>\n<td style=\"color:#ffffff; background-color:#6600CC;\">6600CC</td>\n<td style=\"color:#ffffff; background-color:#6600FF;\">6600FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#ffffff; background-color:#663300;\">663300</td>\n<td style=\"color:#ffffff; background-color:#663333;\">663333</td>\n<td style=\"color:#ffffff; background-color:#663366;\">663366</td>\n<td style=\"color:#ffffff; background-color:#663399;\">663399</td>\n<td style=\"color:#ffffff; background-color:#6633CC;\">6633CC</td>\n<td style=\"color:#ffffff; background-color:#6633FF;\">6633FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#ffffff; background-color:#666600;\">666600</td>\n<td style=\"color:#ffffff; background-color:#666633;\">666633</td>\n<td style=\"color:#ffffff; background-color:#666666;\">666666</td>\n<td style=\"color:#ffffff; background-color:#666699;\">666699</td>\n<td style=\"color:#ffffff; background-color:#6666CC;\">6666CC</td>\n<td style=\"color:#ffffff; background-color:#6666FF;\">6666FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#000000; background-color:#669900;\">669900</td>\n<td style=\"color:#000000; background-color:#669933;\">669933</td>\n<td style=\"color:#000000; background-color:#669966;\">669966</td>\n<td style=\"color:#000000; background-color:#669999;\">669999</td>\n<td style=\"color:#000000; background-color:#6699CC;\">6699CC</td>\n<td style=\"color:#000000; background-color:#6699FF;\">6699FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#000000; background-color:#66CC00;\">66CC00</td>\n<td style=\"color:#000000; background-color:#66CC33;\">66CC33</td>\n<td style=\"color:#000000; background-color:#66CC66;\">66CC66</td>\n<td style=\"color:#000000; background-color:#66CC99;\">66CC99</td>\n<td style=\"color:#000000; background-color:#66CCCC;\">66CCCC</td>\n<td style=\"color:#000000; background-color:#66CCFF;\">66CCFF</td>\n</tr>\n\n<tr>\n<td style=\"color:#000000; background-color:#66FF00;\">66FF00</td>\n<td style=\"color:#000000; background-color:#66FF33;\">66FF33</td>\n<td style=\"color:#000000; background-color:#66FF66;\">66FF66</td>\n<td style=\"color:#000000; background-color:#66FF99;\">66FF99</td>\n<td style=\"color:#000000; background-color:#66FFCC;\">66FFCC</td>\n<td style=\"color:#000000; background-color:#66FFFF;\">66FFFF</td>\n</tr>\n\n<tr>\n<td style=\"color:#ffffff; background-color:#990000;\">990000</td>\n<td style=\"color:#ffffff; background-color:#990033;\">990033</td>\n<td style=\"color:#ffffff; background-color:#990066;\">990066</td>\n<td style=\"color:#ffffff; background-color:#990099;\">990099</td>\n<td style=\"color:#ffffff; background-color:#9900CC;\">9900CC</td>\n<td style=\"color:#ffffff; background-color:#9900FF;\">9900FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#ffffff; background-color:#993300;\">993300</td>\n<td style=\"color:#ffffff; background-color:#993333;\">993333</td>\n<td style=\"color:#ffffff; background-color:#993366;\">993366</td>\n<td style=\"color:#ffffff; background-color:#993399;\">993399</td>\n<td style=\"color:#ffffff; background-color:#9933CC;\">9933CC</td>\n<td style=\"color:#ffffff; background-color:#9933FF;\">9933FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#ffffff; background-color:#996600;\">996600</td>\n<td style=\"color:#ffffff; background-color:#996633;\">996633</td>\n<td style=\"color:#ffffff; background-color:#996666;\">996666</td>\n<td style=\"color:#ffffff; background-color:#996699;\">996699</td>\n<td style=\"color:#ffffff; background-color:#9966CC;\">9966CC</td>\n<td style=\"color:#ffffff; background-color:#9966FF;\">9966FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#000000; background-color:#999900;\">999900</td>\n<td style=\"color:#000000; background-color:#999933;\">999933</td>\n<td style=\"color:#000000; background-color:#999966;\">999966</td>\n<td style=\"color:#000000; background-color:#999999;\">999999</td>\n<td style=\"color:#000000; background-color:#9999CC;\">9999CC</td>\n<td style=\"color:#000000; background-color:#9999FF;\">9999FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#000000; background-color:#99CC00;\">99CC00</td>\n<td style=\"color:#000000; background-color:#99CC33;\">99CC33</td>\n<td style=\"color:#000000; background-color:#99CC66;\">99CC66</td>\n<td style=\"color:#000000; background-color:#99CC99;\">99CC99</td>\n<td style=\"color:#000000; background-color:#99CCCC;\">99CCCC</td>\n<td style=\"color:#000000; background-color:#99CCFF;\">99CCFF</td>\n</tr>\n\n<tr>\n<td style=\"color:#000000; background-color:#99FF00;\">99FF00</td>\n<td style=\"color:#000000; background-color:#99FF33;\">99FF33</td>\n<td style=\"color:#000000; background-color:#99FF66;\">99FF66</td>\n<td style=\"color:#000000; background-color:#99FF99;\">99FF99</td>\n<td style=\"color: rgb(0, 0, 0); background-color: rgb(193, 230, 198); transition: background-color 0.3s ease 0s;\" class=\"eye-protector-processed\">99FFCC</td>\n<td style=\"color: rgb(0, 0, 0); background-color: rgb(193, 230, 198); transition: background-color 0.3s ease 0s;\" class=\"eye-protector-processed\">99FFFF</td>\n</tr>\n\n<tr>\n<td style=\"color:#ffffff; background-color:#CC0000;\">CC0000</td>\n<td style=\"color:#ffffff; background-color:#CC0033;\">CC0033</td>\n<td style=\"color:#ffffff; background-color:#CC0066;\">CC0066</td>\n<td style=\"color:#ffffff; background-color:#CC0099;\">CC0099</td>\n<td style=\"color:#ffffff; background-color:#CC00CC;\">CC00CC</td>\n<td style=\"color:#ffffff; background-color:#CC00FF;\">CC00FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#ffffff; background-color:#CC3300;\">CC3300</td>\n<td style=\"color:#ffffff; background-color:#CC3333;\">CC3333</td>\n<td style=\"color:#ffffff; background-color:#CC3366;\">CC3366</td>\n<td style=\"color:#ffffff; background-color:#CC3399;\">CC3399</td>\n<td style=\"color:#ffffff; background-color:#CC33CC;\">CC33CC</td>\n<td style=\"color:#ffffff; background-color:#CC33FF;\">CC33FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#ffffff; background-color:#CC6600;\">CC6600</td>\n<td style=\"color:#ffffff; background-color:#CC6633;\">CC6633</td>\n<td style=\"color:#ffffff; background-color:#CC6666;\">CC6666</td>\n<td style=\"color:#ffffff; background-color:#CC6699;\">CC6699</td>\n<td style=\"color:#ffffff; background-color:#CC66CC;\">CC66CC</td>\n<td style=\"color:#ffffff; background-color:#CC66FF;\">CC66FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#000000; background-color:#CC9900;\">CC9900</td>\n<td style=\"color:#000000; background-color:#CC9933;\">CC9933</td>\n<td style=\"color:#000000; background-color:#CC9966;\">CC9966</td>\n<td style=\"color:#000000; background-color:#CC9999;\">CC9999</td>\n<td style=\"color:#000000; background-color:#CC99CC;\">CC99CC</td>\n<td style=\"color:#000000; background-color:#CC99FF;\">CC99FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#000000; background-color:#CCCC00;\">CCCC00</td>\n<td style=\"color:#000000; background-color:#CCCC33;\">CCCC33</td>\n<td style=\"color:#000000; background-color:#CCCC66;\">CCCC66</td>\n<td style=\"color:#000000; background-color:#CCCC99;\">CCCC99</td>\n<td style=\"color:#000000; background-color:#CCCCCC;\">CCCCCC</td>\n<td style=\"color:#000000; background-color:#CCCCFF;\">CCCCFF</td>\n</tr>\n\n<tr>\n<td style=\"color:#000000; background-color:#CCFF00;\">CCFF00</td>\n<td style=\"color:#000000; background-color:#CCFF33;\">CCFF33</td>\n<td style=\"color: rgb(0, 0, 0); background-color: rgb(193, 230, 198); transition: background-color 0.3s ease 0s;\" class=\"eye-protector-processed\">CCFF66</td>\n<td style=\"color: rgb(0, 0, 0); background-color: rgb(193, 230, 198); transition: background-color 0.3s ease 0s;\" class=\"eye-protector-processed\">CCFF99</td>\n<td style=\"color: rgb(0, 0, 0); background-color: rgb(193, 230, 198); transition: background-color 0.3s ease 0s;\" class=\"eye-protector-processed\">CCFFCC</td>\n<td style=\"color: rgb(0, 0, 0); background-color: rgb(193, 230, 198); transition: background-color 0.3s ease 0s;\" class=\"eye-protector-processed\">CCFFFF</td>\n</tr>\n\n<tr>\n<td style=\"color:#ffffff; background-color:#FF0000;\">FF0000</td>\n<td style=\"color:#ffffff; background-color:#FF0033;\">FF0033</td>\n<td style=\"color:#ffffff; background-color:#FF0066;\">FF0066</td>\n<td style=\"color:#ffffff; background-color:#FF0099;\">FF0099</td>\n<td style=\"color:#ffffff; background-color:#FF00CC;\">FF00CC</td>\n<td style=\"color:#ffffff; background-color:#FF00FF;\">FF00FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#ffffff; background-color:#FF3300;\">FF3300</td>\n<td style=\"color:#ffffff; background-color:#FF3333;\">FF3333</td>\n<td style=\"color:#ffffff; background-color:#FF3366;\">FF3366</td>\n<td style=\"color:#ffffff; background-color:#FF3399;\">FF3399</td>\n<td style=\"color:#ffffff; background-color:#FF33CC;\">FF33CC</td>\n<td style=\"color:#ffffff; background-color:#FF33FF;\">FF33FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#ffffff; background-color:#FF6600;\">FF6600</td>\n<td style=\"color:#ffffff; background-color:#FF6633;\">FF6633</td>\n<td style=\"color:#ffffff; background-color:#FF6666;\">FF6666</td>\n<td style=\"color:#ffffff; background-color:#FF6699;\">FF6699</td>\n<td style=\"color:#ffffff; background-color:#FF66CC;\">FF66CC</td>\n<td style=\"color:#ffffff; background-color:#FF66FF;\">FF66FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#000000; background-color:#FF9900;\">FF9900</td>\n<td style=\"color:#000000; background-color:#FF9933;\">FF9933</td>\n<td style=\"color:#000000; background-color:#FF9966;\">FF9966</td>\n<td style=\"color:#000000; background-color:#FF9999;\">FF9999</td>\n<td style=\"color:#000000; background-color:#FF99CC;\">FF99CC</td>\n<td style=\"color:#000000; background-color:#FF99FF;\">FF99FF</td>\n</tr>\n\n<tr>\n<td style=\"color:#000000; background-color:#FFCC00;\">FFCC00</td>\n<td style=\"color:#000000; background-color:#FFCC33;\">FFCC33</td>\n<td style=\"color:#000000; background-color:#FFCC66;\">FFCC66</td>\n<td style=\"color:#000000; background-color:#FFCC99;\">FFCC99</td>\n<td style=\"color:#000000; background-color:#FFCCCC;\">FFCCCC</td>\n<td style=\"color:#000000; background-color:#FFCCFF;\">FFCCFF</td>\n</tr>\n\n<tr>\n<td style=\"color: rgb(0, 0, 0); background-color: rgb(193, 230, 198); transition: background-color 0.3s ease 0s;\" class=\"eye-protector-processed\">FFFF00</td>\n<td style=\"color: rgb(0, 0, 0); background-color: rgb(193, 230, 198); transition: background-color 0.3s ease 0s;\" class=\"eye-protector-processed\">FFFF33</td>\n<td style=\"color: rgb(0, 0, 0); background-color: rgb(193, 230, 198); transition: background-color 0.3s ease 0s;\" class=\"eye-protector-processed\">FFFF66</td>\n<td style=\"color: rgb(0, 0, 0); background-color: rgb(193, 230, 198); transition: background-color 0.3s ease 0s;\" class=\"eye-protector-processed\">FFFF99</td>\n<td style=\"color: rgb(0, 0, 0); background-color: rgb(193, 230, 198); transition: background-color 0.3s ease 0s;\" class=\"eye-protector-processed\">FFFFCC</td>\n<td style=\"color: rgb(0, 0, 0); background-color: rgb(193, 230, 198); transition: background-color 0.3s ease 0s;\" class=\"eye-protector-processed\">FFFFFF</td>\n</tr>\n</tbody></table>\n</div>","tags":["blog"],"categories":["技术"]},{"title":"Testpic","url":"/blog-testPic/","content":"## 比较图片大小（惊了！）\n\n**图片来源 www.pexel.com**\n\n- 最初的页面\n\n  ![Photo of Boat Under Cloudy Sky](Testpic/pexels-photo-2123573.jpeg)\n\n- 点进去\n\n  ![Photo of Boat Under Cloudy Sky](Testpic/pexels-photo-2123573-1563455410965.jpeg)\n\n- 点放大\n\n  ![Photo of Boat Under Cloudy Sky](Testpic/pexels-photo-2123573-1563455438309.jpeg)\n\n**我的妈呀好大不同呀！！！**\n\n- 最初的页面\n\n  ![Photo Of Body Of Water ](Testpic/pexels-photo-2649403.jpeg)\n\n- 点进去\n\n  ![Photo Of Body Of Water ](Testpic/pexels-photo-2649403-1563455554369.jpeg)\n\n- 点放大\n\n  ![Photo Of Body Of Water ](Testpic/pexels-photo-2649403-1563455567307.jpeg)","tags":["blog"],"categories":["技术"]},{"title":"我的博客特性思考","url":"/blog-characters/","content":"\n### 图片展示：\n\n图片展示在[之前的测试](https://starky99.com/blog-testPic/)中发现有三种可以的选择：\n\n现在确定如下:\n\n- cover_image：为了保证最快的加载速度，使用第一中的链接。\n\n- feature_image：为了提升质量，使用点开并用放大镜扩充的链接。\n\n- 为什么不直接去掉 ***auto-compress*** 后面的部分？如果去掉，就不会图片自动处理，就会出现原图过大，加载时间过长的情况，影响博客的观感效果。\n\n  \n\n### TDK：\n\n- 标题相当于 关键词，简洁易懂。(原标题复杂的话，删减一下)\n\n\n- 描述可以进行适当的拓展，或者是原标题。\n\n\n- 关键词不添加了。\n\n避免无意义的重复\n\n如果描述想变成空的形式，可以![1564300943722](我的博客特性思考/1564300943722.png)来进行空白的添加\n\n\n\n### 我的博客同步方法：\n\n##### 190722更新\n\n最新原理：\n\n使用 mklink 命令来链接 Onedrive 云盘和我的本地任意一个文件夹。\n\n```cmd\nC:\\WINDOWS\\system32>MKLINK /J \"D:\\瀚文存储\\OneDrive\\source\" \"C:\\David Stark\\Hexo\\source\"\n为 D:\\瀚文存储\\OneDrive\\source <<===>> C:\\David Stark\\Hexo\\source 创建的联接\n```\n\n成功连接我的两个文件夹。\n\n经过验证，可以在云盘里面删除或者从本地文件夹删除，都能实现同步的更新文件。\n\n------\n\n##### 更新我的文件夹原理：\n\n- 我的个人PC拥有两个hexo的文件夹\n  - Onedrive的用于云端调整处理我的文件，多平台共享。同时已经装好了hexo，可以在PC上面直接进行hexo new xx 的操作，添加新的模版文档\n  - 本地文件夹里面的是用于生成博客的source文件夹。可以减少我每天总想deploy的操作。同时可以减轻云端的负载\n- 我的工作电脑\n  - 工作电脑可以直接访问我的md文件，直接编辑修改就可以了。\n  - 添加新的文件的时候就是用手工添加一下就可以了\n- 我的ios客户端\n  - 使用bear APP来进行操作\n  - 本地只使用一份文件。为了更好的同步文件。\n  - 文件修改完成之后就上传到OneDrive的顶层文件夹里面\n  - 调整首行的格式，然后粘贴覆盖我的博客\n\n**其他位置修改、同步完成之后，复制文件夹下面的source文件夹，替换原本的文件夹🆗**\n\n### 博客文章的收藏\n\n##### 百度经验\n\n直接 Fireshot 截图就好了\n\n##### CSDN\n\n直接复制格式会变化得乱七八杂，直接复制源代码粘贴就好了。\n\n**※ 复制源代码需要注意：提前取消自己浏览器的护眼模式**\n\n![1564298202011](我的博客特性思考/1564298202011.png)\n\nid 是 content_views, 可以直接用 CTRL + F 来搜索~\n\n##### 简书\n\n直接复制粘贴就好，我什么也不知道（😄嘻嘻\n\n### 我的博客部署：\n\n##### 190726\n\n今天检查的时候已经可以从百度上面查到自己的网页啦！\n\n![1564108730950](%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/1564108730950.png)\n\n这个龙抬头也太好看了吧：\n\n![1564109443284](%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/1564109443284.png)\n\n##### 190725\n\ncoding.net 网站上面更改了我的方式，使用 coding.net 个人版的 coding Pages 来进行我的博客的建立。\n\n大致过程如下：\n\n1. 建立 repo ： starky99.coding.me\n\n2. git 的配置（公钥） +  config.yml 里面添加上传的地址\n\n3. npm run d\n\n4. 绑定我的域名，其中云解析的设置如下\n\n   ![1564109171252](%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/1564109171252.png)\n\n------\n\n今天在 Google 里面查看的时候，发现：有的网页状态是 ↓![1564109252916](%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/1564109252916.png)\n\n这个是指 Google 已经访问到我的网页，但是没有把他们加入索引。所以需要等待 Google 下次抓取的时候，才会有改变。\n\n##### 190724\n\n终于终于我的博客被 Google 收录啦！\n\n![1563937484921](%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/1563937484921.png)\n\n太令人激动了！\n\n接下来需要处理我的博客在 coding.net 上部署格式变化的问题，这个解决了很快就提交百度检索。\n\n------\n\n##### 我的双仓库部署方案\n\n国外使用的是 github.io\n\n国内使用的是 coding.me\n\n\n\n使用 coding.me 的好处就是能被百度爬虫抓取，难点是配备多路解析。（配置如上图）","tags":["blog"],"categories":["技术"]},{"title":"博客的TDK","url":"/blog-tdk/","content":"\n### 1. SEO优化: 请正确设置title,keywords,description\n\n![ABC.png](博客的TDK/ABC.png.png)\n\n---\n\n### 2. Description 网页中的作用\n\nD就是description，也就是该网站或是页面的描述。用来简单阐述该网站或是页面的主要内容，做一个概括性的说明。在很多新闻站中，也叫做内容摘要。\n\n![Descriptionæ¯ä»ä¹ææï¼å¨SEOä¸­çéè¦ä½ç¨ï¼ ](博客的TDK/54e255ba88ebce15eb592f8e7747bfe8.jpg)\n\ndescription是网页头部几个meta标签中的一个，在我们做网站、做优化时会经常用到它。\n\ndescription的作用\n\n1、description主要起到对网站或页面做一个说明的作用。\n\n2、一个写得好的description（描述），能起到吸引点击的作用。所以在关键词排上去后流量的多与少，跟描述写得好不好还是有点关系。\n\n**现在网页 SEO 中都用不到了，所以就不必费劲为了 SEO 优化了**\n\n---\n\n","tags":["blog"],"categories":["技术"]},{"title":"Windows自动关机命令","url":"/windows-auto-shut-up/","content":"\nWindows中自带了自动关机功能，在开始→运行中使用SHUTDOWN命令\n\n### 1. 延迟关机关机\n\n```cmd\nshutdown /s /t 120\n```\n\n/s为关机；/t为时间，以秒为单位，120表示2分钟 表示两分钟后关机\n\n\n\n### 2. 取消自动关机\n\n```cmd\nshutdown /a\n```\n\n\n\n**shutdown 的 用法**\n\n```cmd\nC:\\Users\\David Stark>shutdown\n用法: shutdown [/i | /l | /s | /sg | /r | /g | /a | /p | /h | /e | /o] [/hybrid] [/soft] [/fw] [/f]\n    [/m \\\\computer][/t xxx][/d [p|u:]xx:yy [/c \"comment\"]]\n\n    没有参数   显示帮助。这与键入 /? 是一样的。\n    /?         显示帮助。这与不键入任何选项是一样的。\n    /i         显示图形用户界面(GUI)。\n               这必须是第一个选项。\n    /l         注销。这不能与 /m 或 /d 选项一起使用。\n    /s         关闭计算机。\n    /sg        关闭计算机。在下一次启动时，\n               重启任何注册的应用程序。\n    /r         完全关闭并重启计算机。\n    /g         完全关闭并重新启动计算机。在重新启动系统后，\n               重启任何注册的应用程序。\n    /a         中止系统关闭。\n               这只能在超时期间使用。\n               与 /fw 结合使用，以清除任何未完成的至固件的引导。\n    /p         关闭本地计算机，没有超时或警告。\n               可以与 /d 和 /f 选项一起使用。\n    /h         休眠本地计算机。\n               可以与 /f 选项一起使用。\n    /hybrid    执行计算机关闭并进行准备以快速启动。\n               必须与 /s 选项一起使用。\n    /fw        与关闭选项结合使用，使下次启动转到\n               固件用户界面。\n    /e         记录计算机意外关闭的原因。\n    /o         转到高级启动选项菜单并重新启动计算机。\n               必须与 /r 选项一起使用。\n    /m \\\\computer 指定目标计算机。\n    /t xxx     将关闭前的超时时间设置为 xxx 秒。\n               有效范围是 0-315360000 (10 年)，默认值为 30。\n               如果超时时间大于 0，则默示为\n               /f 参数。\n    /c \"comment\" 有关重新启动或关闭的原因的注释。\n               最多允许 512 个字符。\n    /f         强制关闭正在运行的应用程序而不事先警告用户。\n               如果为 /t 参数指定大于 0 的值，\n               则默示为 /f 参数。\n    /d [p|u:]xx:yy  提供重新启动或关闭的原因。\n               p 指示重启或关闭是计划内的。\n               u 指示原因是用户定义的。\n               如果未指定 p 也未指定 u，则重新启动或关闭\n               是计划外的。\n               xx 是主要原因编号(小于 256 的正整数)。\n               yy 是次要原因编号(小于 65536 的正整数)。\n\n此计算机上的原因:\n(E = 预期 U = 意外 P = 计划内，C = 自定义)\n类别    主要    次要    标题\n\n U      0       0       其他(计划外)\nE       0       0       其他(计划外)\nE P     0       0       其他(计划内)\n U      0       5       其他故障: 系统没有反应\nE       1       1       硬件: 维护(计划外)\nE P     1       1       硬件: 维护(计划内)\nE       1       2       硬件: 安装(计划外)\nE P     1       2       硬件: 安装(计划内)\nE       2       2       操作系统: 恢复(计划外)\nE P     2       2       操作系统: 恢复(计划内)\n  P     2       3       操作系统: 升级(计划内)\nE       2       4       操作系统: 重新配置(计划外)\nE P     2       4       操作系统: 重新配置(计划内)\n  P     2       16      操作系统: Service Pack (计划内)\n        2       17      操作系统: 热修补(计划外)\n  P     2       17      操作系统: 热修补(计划内)\n        2       18      操作系统: 安全修补(计划外)\n  P     2       18      操作系统: 安全修补(计划内)\nE       4       1       应用程序: 维护(计划外)\nE P     4       1       应用程序: 维护(计划内)\nE P     4       2       应用程序: 安装(计划内)\nE       4       5       应用程序: 没有反应\nE       4       6       应用程序: 不稳定\n U      5       15      系统故障: 停止错误\n U      5       19      安全问题(计划外)\nE       5       19      安全问题(计划外)\nE P     5       19      安全问题(计划内)\nE       5       20      网络连接丢失(计划外)\n U      6       11      电源故障: 电线被拔掉\n U      6       12      电源故障: 环境\n  P     7       0       旧版 API 关机\n```\n\n","categories":["技术"]},{"title":"训练 Slides 演讲","url":"/training-slides-nvs/","content":"展示的时候要注意：\n\n- 演讲者的顺序以听者方便为准\n\n- 划重点/红色的词汇要重点表达\n\n- 及时\n\n- 不是新添加的支持要记得删掉\n\n  ---\n\n- 演讲中的展示应该更加正式（比如要划线，应该更加直）\n\n- Hide （不要用 pen 涂掉，用 erase 去掉）\n\n- avoid question \n\n- More Details （ confusion ）\n\n- 表格重点的颜色\n\n- 在复杂有一堆文字的时候 (log)， 不用 pen， 使用细的 box，以免引起上下行的误解。\n\n- 拼写 / 读音不要搞错啦\n\n- 只要是在自己的电脑能看清就可以（因为其他人的终端是和电脑一致的，外面的屏幕只是一个monitor）\n\n  ---\n\n- Literally: \"Give you few seconds to look that.\"\n\n  ---\n\n- 注意可能会有 icon 挡住\n\n- color - hard to read \n\n\n\n这个会是做啥的：\n\n- 给客户演示的时候，之前做的彩排。\n- 看演讲和slides是否会引起困惑，因为有人看不见slides，就是听声音。\n\n\n\nFuze & Team\n\n- 就中国用Team\n- 欧洲 / 美国用 Fuze\n- 所以就会很繁忙\n\n\n","tags":["程序员","职场"]},{"title":"初创公司见闻","url":"/ryg/","content":"\n这是一段收获很多的经历！\n\n最开始加入公司，是很有缘分的一个过程。\n\n第一天面试的时候，我特意穿上了我深色的小飞机衣服，穿着长裤子，鞋子穿的是泡泡，想给面试官一个正式的沉稳的印象。记得面试前一天还在自己看题目，来时候的地铁也在刷着别人写的Python面试技巧，怀着紧张的心情我来到的日月光。\n\n那时候的我对于写程序并不是很有自信，虽然在短短的几个礼拜钟并没有发生什么本质的改变，但是和他们的一次次交流和自己潜在的学习和聆听中，感受到了很多东西。\n\n面试的时候，先让我自我介绍，然后考了我几道题目。第一道是关系型数据库，我并不是很会，但是我根据软件工程中的UML图的思想从容地表达了我心中的想法。第二道题目是程序题，如何设计一个复杂的麻将点数的胜率。面试官以为我没有带电脑，也觉得临时开一台电脑太费劲，就让我在纸上写了起来。我根据模块化的思想，表述了我的程序的结构，对复杂的获胜条件也进行了伪代码的表述，还是思路很清晰的！第三道题目是一个数学题，演算如何MN如何才会相遇的问题。我首先根据二元等式和不等式给出了我自己的解答表述，通过一个测试用例之后，在第二个测试条件下并不对。最后在提示下意识到是一个追及的问题，一次给出用 **mod**表示的正确答案。\n\n面试就这样结束了，面试官带我到6楼的座位聊。他说，你聪明肯定是聪明，但是现阶段做不了什么，我也不能给你报酬。如果你很努力地学，说不定一个月左右我就可以开始给你钱。之后又聊了产品、教育和未来的前景。最后他说，我就当为国家培养人才了，欢迎你来。\n\nLotus Temple\n\n过了一段时间，我还没去，BOSS（下简称老板）又说给我¥100每天的交通、饭补贴。其实第一次实习也不是为了钱，当然有钱更好啦！老板跟我说要学习：关系型数据库、graphQL、DJango和Docker相关的知识。我在学校找了书，但是一直有其他的事情。最后一天，即将正式上班前的晚上，我开始看😄我把学到的东西整理好，放在我的博客里，准备在地铁上面看。\n\n早上8点起床，急急忙忙穿衣服，急急忙忙买早餐，急急忙忙找车子奔赴地铁站，感受了一次早高峰。\n\n我的博客真的是很神奇的一种东西，本来期待着它是像Github一样我的知识仓库，但是没想到还受到了网络的制约：在地铁上我的小手机搜不到网。。。就这样站着、拥挤着，我看完了我整理的基础知识。\n\n来到日月光，第一次上班，老板问我自己学的怎么样？在我如实汇报之前，我主动提出“可能做不了什么，我就不要钱了吧“（后来发现是自己给自己挖了一个坑）\n\n第一天的生活总是从配环境开始，先是更新到最新的Ubuntu，然后（其实就更新了一上午），Ubuntu18的版本，可以直接覆盖更新。在工作中，我也逐渐摸索出一种方法：就是用一个md文档，把自己操作的过程、遇到的问题、解决方法取精华记录下来。这样我就可以积累住这部分的知识，可能多用了一成的时间，但是下次或者从知识的角度能收获到更多。\n\n中午可能是因为我不要补贴的原因，老板带我吃的饭。从日月光6楼直下负三楼的美食广场，吃热乎乎的份饭：青椒炒肉+西红柿炒蛋+汤+饭。现在还记得辣辣的🌶️呢。\n\n由于是第一天上班，还不是很敢多活动。规规矩矩的，记得特别清楚，我的位置旁边是一个咖啡的浓缩汁，我一直想尝试，但是最后也还是没打开hhh。也没有结识太多的同事伙伴。哦，我好像还没说我们创业团队的环境。这是一个初创公司，在日月光的一栋公寓楼里面。客厅是我们的办公室，很多电脑显示器挤在一起，大家多用的是mac。两个洗手间，一个厨房，一间卧房，另一间是录课程的地方。我们做的是在线教育平台（具体细分领域就不说啦～）。\n\n晚上回去的时候还是地铁。之前感觉每天8小时、弹性工作制相比996来说很幸福；也以为自己从早学到晚，十几个小时的学习都能坚持，这8个小时岂不是小菜一碟。但是没想到，晚上的时候还是坐不住，有点辛苦。早上10点上班，中午1点钟吃饭，午休一小时，从下午2点一直到晚上7点。晚上还有一分钟到7点时候，我去上了个洗手间。没想到一转身出来，大家都撤退了，只留着老板和几个全职的员工。\n\n全职和兼职也是我想记录的一点。两种雇员从公司的角度有明显的区别。我写这篇文章一个目的是为了回忆、记忆；另一个目的也是希望能给自己未来的创业留下宝贵的经验。兼职的员工，在中午和老板聊的时候，也并没有列入公司发展战略的一部分。往往是实现全职员工的想法，做边角料的工作。兼职／实习的员工也自觉自己和公司的联系没有那么得大，也是就当成一份经历，挣点零花钱。他们可能不会那么的全情投入，也可能会在工作的时候见缝插针做点自己的小事情。但是这也不能怪他们啦。\n\n回家的路还是地铁，找清了路线，开始逛次逛次。我的屁股可能就是这天开始出的问题。地铁的座椅太硬，再加上工作的时候，虽然是人体工学椅，但是我第一天不敢活动，8个小时的长时间坐姿，让我的尾椎骨好痛好痛。第一天从剑川路地铁站出来的时候，看着已经暗下来的天色，在剑川路明亮黄色的灯光下，我也感觉很幸福、感受到了自己的价值。\n\n回到学校，很累。能学习，但是学习的时间不是很长，也坚持专注不了多久。晚上很早就上床睡觉了。\n\n第一天的经历详细记录了，之后的日子就挑重点来说。\n\n初创公司在做两个产品：一个是承包珠宝商的外包项目、一个是老板自己的创业项目。珠宝市是老板的发小，从小在美国一起长大，家里是珠宝世家。在珠宝的供养下，我们另一个英语在线教育平台的创业点子也有了经济支撑。\n\n老板其实也有显赫的家世，这个是最后一天我上上班中午吃好吃的暗恋桃花源的时候才知道的。太具体的我也不清楚，知道了日月光其实是台湾的一家企业，主页时科技，副业才是做房地产。\n\n---\n\n之后的日子就是早上8点起床，然后二餐，然后剑川路地铁站，然后莘庄、徐家汇、打浦桥。和同事们搞好了关系，中午去吃食堂。超级好吃的滑蛋牛肉盖浇面，田滋坊~\n\n任务方面在学 docker 和 compose， django 也略有涉及，有问题就主动去问~\n\n这段时间也有好多人过来面试，有的是小学校毕业的，从周边的小城市过来的，有各种各样的理由调动工作。有的人自信满满，说出自己做过什么；有人唯唯诺诺，工作一年的时间们也说不出来自己做过什么。其实听这些人面试的经历，我也能更清楚自己实习的意义：不只是一段时间投入的经历，更是一段可以言说，写在简历里面的闪光点。\n\n面试也要考题目，他们的题目和我面试的时候一致。感觉我也可以越来越自信。他们有相关的工作经验，有更长时间的知识积累。可是他们面试的时候的表述和作答感觉也并没有比我好多少。我们应该有“奔跑向世界一流大学”的大学生的自信！\n\n加进了同事的群，发现每个人也都是很有趣。有各自的想法和方向。\n\n---\n\n最后一天的时候，感觉老板也没有太搞清楚我们的具体方向。 UI 交互设计师们感觉在这种情况下，也没法产出太多的结果。\n\n中午和同事们吃了日月光的暗恋桃花源。很好的环境，很好吃的食物，很幸福的时光。满桌的饭菜，6个人摊钱只是要40块钱，开心😊\n\n就是工作的这段时间，楼下的 Apple🍎 店一直都去装修了，有点小心酸吧~\n\n下午的时候，参与了对老师的访谈，然后也被彻底地“榨干了剩余价值”。老师访谈的时候也有适当美化自己，也明显显露出了机构老师的独立工作能力的不足。内容、课程都是机构准备好的，然后喂过去的。感觉可能并不会得到太多的锻炼。\n\n之后是对我的采访，我把我经历的一对一、一对多、在知乎上面上课的经历和经验都全盘拖出，知无不言言无不尽。希望能对这个初创公司尽到自己的一份力吧。再然后，我们又聊了许多关于现实、房子的问题，他们说我很成熟，这么小大二就开始想这些内容了。不想也没办法呀，需要好好努力哦！\n\n下午就提前下班了，准备学校的2019国际暑期学校，也结束了这一段时间的初创公司体验。","tags":["程序员","职场"]},{"title":"MARITAL-STATUS","url":"/marital-status/","content":"\n## **marital status 意思是：婚姻状况**\n\nMarried 已婚、Single 单身（未婚）、Widowed 丧偶、Divorced 离异、Separated 分居。\n\n#### 词汇解析\n\n##### 1、Married \n\n英 ['mærɪd] ；美 ['mærɪd] \n\n- adj. 已婚的，有配偶的；婚姻的，夫妇的；密切结合的\n- n. 已婚者\n- v. 结婚，与…结婚（marry的过去式）\n\n\n\n- 例：We have been married for 14 years.\n\n  我们已经结婚14年了。\n\n- 例：She is married to an Englishman.\n\n  她嫁给了一个英国人。\n\n##### 2、single\n\n英 ['sɪŋg(ə)l]；美 ['sɪŋɡl] \n\n- adj. 单一的；单身的；单程的\n- n. 一个；单打；单程票\n- vt. 选出\n- vi. 击出一垒安打\n\n\n\n- 例：Is it difficult being a single mother?\n\n  当单身母亲难吗？\n\n- 例：Every single house in town had been damaged.\n\n  镇上的每一座房子都被毁坏了。","tags":["职场","英文"]},{"title":"刷LeetCode","url":"/leeeeeeetCode/","content":"\n# 作者：力扣（LeetCode）\n\n力扣君认真看了大家关于这个问题的回答, 不仅感叹小伙伴刷题热情之高以及脑洞之大。\n\n力扣尤其对高票答案中胖君的**兔系**与**龟系**刷题流派影响深刻, 龟系法注重把题目做干净, 每道题不断改进, 追求最完美的解法. 而兔系注重刷题的速度, 看似囫囵吞枣, 实则奥妙无比. 这两种方法都不失为刷题的好方法。\n\n许多小伙伴也曾经在我们后台分享了他们独特且有效的刷题方法, 下面我们总结了一些刷力扣不错的方法。\n\n### **刷题队列法和刷题栈大法**\n\n建立一个题目队列, 先把力扣一些比较好的题目push进队列里, 然后平常有空的话, 就将队列头的题目pop出来, 然后就做这一道题, 如果这一道题做不出来或者做得出来但感觉不太熟练就重新push回去队列. 如果成功做出这道题, 就寻找一些相关类似题目push进队列里。\n\n不断重复这个过程, 假以时日, 一个力扣大佬就会诞生了. 这个方法好在哪里呢? 好在题目只要曾经进入过队列, 就一定会被刷到, 不熟悉的题目会被刷到熟悉为止, 而且刷题的范围就像树木的枝叶一样, 不断延伸开来. 说不定, 刷题队列法也能加深你对队列的理解程度呢。\n\n同理, 刷题栈法也是类似, 不过与队列法有些许区别. 这么说吧, 队列法注重刷题的范围, 而刷题栈基本上则会一个类型(tag)刷到底, 小伙伴有没有联想到什么?\n\n### **将力扣融入生活大法**\n\n每天起床第一眼, 先看一道力扣题。\n\n刷力扣的最高境界, 就是将力扣融入生活, 遇到一道很难很难的力扣题, 不急着看题解, 而是把题目记下来, 有空的时候就想一下. 比如等车时候想一下, 做地铁的时候想一下, 虽然有时候会想好几天, 但灵光一闪, 顿悟出答案来那种畅快感, 我相信体验过的小伙伴都懂。\n\n### **以赛代练大法**\n\n力扣(LeetCode)每周日都会举行[力扣周赛](https://link.zhihu.com/?target=https%3A//leetcode-cn.com/contest/), 题目水准高且难度具有阶梯型, 全球玩家同步进行, 其中不乏一些全球知名的程序员参加, 非常有挑战性。\n\n而且力扣还有虚拟竞赛功能, 可以模拟一场历史比赛来进行训练, 用比赛促进刷题, 也不失为一种好方法。\n\n如果你想体验紧张刺激的做题过程, 或者想模拟一下真实面试时的环境, 不妨这个周日就来体验一下我们的竞赛哦, 偷偷说一句, 周赛名列前茅的同学能获得大量LeetCoin, LeetCoin可以换取精美的LeetCode周边哦。\n\n### **最后**\n\n[力扣](https://link.zhihu.com/?target=https%3A//leetcode-cn.com/)在[探索](https://link.zhihu.com/?target=https%3A//leetcode-cn.com/explore)板块中新上线了一个很有用的的卡片\n\n[探索算法面试题汇总 - 力扣 (LeetCode)leetcode-cn.com](https://link.zhihu.com/?target=https%3A//leetcode-cn.com/explore/featured/card/top-interview-quesitons-in-2018/)\n\n这个“面试高频题”卡片汇总了大部分面试中常见的算法题, 如果小伙伴想在最近的春招拿到心仪的Offer, 不妨来尝试一下, 说不定可能会刷到下次面试的题目哦！\n\n除此之外，力扣君在之前的文章中也分享过不少如何有效刷力扣的方法，感兴趣的同学也可以戳以下链接直达。\n\n[LeetCode按照怎样的顺序来刷题比较好？](https://www.zhihu.com/question/36738189/answer/609027029)\n\n[刷 LeetCode 吃力正常吗？](https://www.zhihu.com/question/31092580/answer/597061711)\n\n------\n\n# Kim采源的小粉丝\n\n大家都是如何刷 LeetCode 的？ - Kim采源的小粉丝的回答 - 知乎\nhttps://www.zhihu.com/question/280279208/answer/510354868","tags":["LeetCode","程序员","题"]},{"title":"190716每天都在进步","url":"/undefined/","content":"睡梦中思考实现了我的冒泡排序\n\n\n```c++\n#include<iostream>\nusing namespace std;\n\nvoid swap(int& a, int& b) {\n\tint tmp;\n\ttmp = a;\n\ta = b;\n\tb = tmp;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << \"瀚文的冒泡排序\" << endl;\n\n\tint* array = new int[n];\n\tfor (int i = n; i > 0; i--) { array[n - i] = i; }\n\n\tint count = 0;\n\tfor (int i = 0; i < n; i++) { cout << array[i] << ' '; }\n\n\n\tfor (int j = 0; j < n; j++) {\n\t\tint i = n - 1;\n\t\tbool flag = true;\n\t\twhile (i - 1 >= j) {\n\t\t\tif (array[i] < array[i - 1]) {\n\t\t\t\tswap(array[i], array[i - 1]);\n\t\t\t\tflag = false;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\ti--;\n\t\t\tif (flag) { break; }\n\t\t}\n\t}\n\n\tcout << endl << count << endl;\n\tfor (int i = 0; i < n; i++) { cout << array[i] << ' '; }\n\n\treturn 0;\n}\n```\n\n冒泡函数的实质就是\n\n- 从后往前比大小\n- 依次把每次序列比较得到的极小值放到序列的首位\n- flag 检查如果在单次序列比较中没有调整，那就排好序了，不用后续的比较和调整了\n\n现在VS2019可以不用system(\"pause\")在主函数的最后了！\n\n**OJ1000**\n\n```cpp\n#include<iostream>\nusing namespace std;\n\n\nint main() {\n\tint a, b;\n\n\tcin >> a >> b;\n\tcout << a + b;\n\n\treturn 0;\n}\n```\n\n------\n\n","tags":["每天都在进步"]},{"title":"瀚文小高国庆广州行程规划","url":"/guangzhou-plan/","content":"\n# 最终版本\n\n### 9.30学校出发\n\n5:30 学校打车-地铁站-上海南站\n\n### 10.1 广州\n\n下午5点到火车站，六点争取能从住的地方出发。\n\n小蛮腰-上下九-夜游珠江\n\n![f7a53506d835d948799e9145a6d4c5f](广州行程规划/f7a53506d835d948799e9145a6d4c5f.jpg)\n\n### 10.2 广州\n\n长隆野生动物园 + 大马戏\n\n### 10.3 广州-深圳\n\n时间充裕，高铁（广州南站30分钟到一个小时），城际铁路（一个半小时）票价一样。\n\n早茶-圣心大教堂-沙面（需要规划一下路线，可体验老式旅游，买地图）\n\n深圳住宿，再出发\n\n**东门老街 + 深圳大学 + 深圳市中心 + 深圳夜景**（要去看中国红）\n\n### 10.4 深圳全天\n\n爱去哪儿去哪儿（高科技园区？）\n\n### 10.5 深圳大半天\n\n爱去哪儿去哪儿（偷溜hk？我就是皮一下，还是生命重要）\n\n晚上✈归\n\n---\n\n## (Odd Version)路线概览\n\n### 9月30号学校出发： \n\n![1563208463985](广州行程规划/1563208463985.png)\n\n1号中午到达广州站\n\n如果没有的话，抢D935 二等座525，动卧760都是很舒服的。\n\n好像抢票时间晚一天\n\n夜晚住宿 火车\n\n### 10月1号广州：\n\n中午直接入住 \n\n畅玩：\n\n​\t\t**上下九 + 石室圣心大教堂 + 沙面 + 祠堂 （晚上可以去有夜景的地方）**\n\n夜晚住宿广州上下九\n\n![1563209901216](广州行程规划/1563209901216.png)\n\n### 10月2号广州：\n\n**长隆全天**\n\n​\t\t[广州长隆野生动物园世界、有那些动物？广州最强攻略](https://www.mafengwo.cn/gonglve/ziyouxing/260707.html)\n\n早上930开园\n\n晚上6点或者6点半 晚上可以继续出发小蛮腰 + 珠江夜游\n\n夜晚住宿 广州上下九(2)\n\n### 10月3号广州出发深圳：\n\n吃完早茶再出发 或者 逛逛街吃过午饭再出发\n\n\n\n深圳逛一天\n\n​\t\t**东门老街 + 深圳大学 + 深圳市中心 + 深圳夜景**\n\n夜晚住宿 深圳福田口岸(1)\n\n### 10月4号深圳出发HK：\n\n步行-福田口岸过关\n\n夜晚住宿 深圳福田口岸(2)\n\n### 10月5号深圳出发：\n\n深圳一天\n\n晚上飞回上海虹桥\n\n![1563208143050](广州行程规划/1563208143050.png)\n\n\n\n\n\n\n\n\n\n# 为了方便小高找房子\n\n**airbnb选好位置和日期的链接如下**\n\n[广州上下九1-3两晚](https://www.airbnb.cn/s/%E4%B8%8A%E4%B8%8B%E4%B9%9D/homes?refinement_paths%5B%5D=%2Fhomes&toddlers=0&hotSpots=hotSpots&scenic=scenic&subwayLine=subwayLine&businessArea=businessArea&district=district&station=station&checkin=2019-08-01&checkout=2019-08-03&place_id=ChIJ-YfxQo_4AjQR922KaJvTLqw&poi_tab=hotSpots&poi_group=0&s_tag=gvaqG5qP)偏好可选黄沙地铁站（来时候火车走的时候高铁都方便）\n\n[深圳福田口岸3-5两晚]([https://www.airbnb.cn/s/%E6%B7%B1%E5%9C%B3%E7%A6%8F%E7%94%B0%E5%8F%A3%E5%B2%B8/homes?refinement_paths%5B%5D=%2Fhomes&hotSpots=hotSpots&scenic=scenic&subwayLine=subwayLine&businessArea=businessArea&district=district&station=station&checkin=2019-10-03&checkout=2019-10-05&place_id=ChIJc6DH3qL2AzQRLLifu1u7p8Y&s_tag=VgctrEiM](https://www.airbnb.cn/s/深圳福田口岸/homes?refinement_paths[]=%2Fhomes&hotSpots=hotSpots&scenic=scenic&subwayLine=subwayLine&businessArea=businessArea&district=district&station=station&checkin=2019-10-03&checkout=2019-10-05&place_id=ChIJc6DH3qL2AzQRLLifu1u7p8Y&s_tag=VgctrEiM))\n\n不用有太多功能，入住退房时间长的更好。我们路线比较紧密。注意 ***安全私密独立*** 就好。\n\n# 说服自己的理由\n\n1. 完整旅游体验：核心景点okey\n2. 深圳的世界之窗有点老套了，之后会去全世界旅游的，就不用去微缩版本的了\n3. 深圳广州都有完整到晚上的一天 - 住宿\n4. 实现5号归  + 经济\n\n# 后续需要注意\n\n1. 抢票时间！！！（火车和高铁）\n2. 确认后买机票 + 住宿\n3. 信用卡返现名额\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n---------以下为旧版本，备用抢不上火车票的情况，留档使用------------\n\n\n\n##### 9月30号学校出发： \n\n上海虹桥 ✈ 深圳宝安机场\n\nCZ6584 19:20-21:45 ￥1080\n\n夜晚住宿 深圳福田口岸\n\n##### 10月1号深圳出发HK：\n\n步行-福田口岸过关\n\n夜晚住宿 深圳福田口岸(2)\n\n> ##### 10月2号深圳出发：\n>\n> 深圳全天\n>\n> 夜晚 深圳福田口岸(3)\n\n##### 10月2号深圳出发广州：\n\n福田🚝广州南\n\nG72 7:00-7:39\n\n![1563206776182](广州行程规划/1563206776182.png)\n\n早茶开始广州的一天\n\n夜晚住宿 广州长隆\n\n##### 10月3号广州出发：\n\n长隆全天\n\n夜晚住宿 广州长隆(2)\n\n##### 10月4号广州出发：\n\n广州全天\n\n夜晚 住宿机场酒店\n\n##### 10月5号广州早出发：\n\n广州白云机场✈上海虹桥\n\n9C8542 5:40-7:55 \n\n春秋官网订票￥510\n\n\n\n\n","tags":["恋爱","旅行"],"categories":["文字"]},{"title":"我的租房日记","url":"/myRentingHouseDiary/","content":"\n# 190809更新\n\n今天是台风夜\n\n很早就下班了，在家自己看美剧\n\n剩下的美剧，明天看吧\n\n电表这几天走到了90\n\n自己一个人对待台风，脑子也并没有多么的清醒，想让自己积极起来，想让自己清醒起来，但是一个人的时候就是混沌，浑噩。没有说的那么吓人，但是确实是没有那么的规律。\n\n一个人的台风夜，为什么会想这么多呢？太闲了，太累了，太不规律了。早睡早起成了奢望，人的本能和懒惰掌控着我。这该该死的温柔。\n\n一个人的台风夜，风呼呼吹。\n\n# 190730更新\n\n回家电费70.6\n\n以后还是单位学习，回家看书，锁住手机。\n\n# 190724更新\n\n今天回家的时候看了电表是53.7 相当于23晚上 + 白天一天的路由器用了3度电。\n\n开空调吧，正常开没事的。\n\n记录一下回家的时间。\n\n\n\n| 21:53      | 准备回来 |\n| ---------- | ------------ |\n| **22:21**  | **出公司门** |\n| **2230**   | **地铁站**   |\n| **2239**   | **出地铁站** |\n| **10+min** | **走回房间** |\n\n路上也得有半个小时了。晕难受ing\n\n明天就是争取半个小时回来，然后半个小时运动一下。\n\n骑车子20分钟，要是地铁站有车子可以试一试，但是估计吓人（白天先尝试？）\n\n\n\n# 190723更新\n\n昨晚使用了开窗门通风的战术，临睡前开一会儿空调。早上再开窗通风的战术。\n\n加油！冲！\n\n早上看了电表                                                       5450.7\n\n这么长时间还没用太多的电，所以还好啦！\n\n\n\n# 190717更新\n\n凌晨还是没有睡着，脑子里按照思路实现了冒泡排序的流程\n\n一个是图形的帮助，另一个是对程序越来越不那么抵触\n\n\n\n早上4:30醒了在坏肚子，厕所的马桶就是坏的，用大的盆来冲刷🆗\n\n早上房间里闷闷的，没开空调也没法开窗子。此时电费5442\n\n尝试开门睡呢，听听外面鸟语花香\n\n# 190716更新\n\n现在已经成功搬家🆗\n明天正常入职啦\n\n电费是按照一块钱一度收取，此时电费5441\n房间阳台门有点关不严，用透明胶粘上了。\n空调风有点吹后背。所以到一定温度之后停止吹风。能省下电费也能保护身体。\n很好的生活\n\n头几天我把贵重的东西都锁在我自己的箱子里吧。\n\n在超市买了水，从地铁站来的路上买了晚饭。\n之后可以去吃点饭类的食物。\n\n超市很方便，周围也有很多卖水果的。\n西瓜￥1.68还是1.98一斤，还是很平价的。\n\n周围夜市生活也很繁华，很好。\n晚上可以骑车子去看看。\n\n1号房的人刚才20:30左右刚回来，感觉他也是一个很善良的人。\n东西都收拾好了，注意每天的水的摄入、绿色的菜、水果！\n\n房间隔音暂时没有什么事儿\n冲！\n\n3号房间的人现在过来了，是20:46分，应该还好。不知道是做什么工作的。之后可以聊一聊。\n\n------分割线------\n\n3号房间的人使用电瓶车，电瓶车停在大厅里面。\n\n刚刚洗完澡，然后热水很好。稍微等一小会儿就来了热水。还有浴霸一点都不冷。\n\n超市买的东西\n\n- 两大桶水\n- 酸奶（洗洗肠胃）\n- 一兜玉米香肠\n- 一袋洗衣液\n- 一小瓶花露水\n\n他推荐我买液体蚊香，但是我觉得有可能中毒就没买。\n\n<br>\n\n洗澡忘带了自己的浴巾，用擦头的毛巾擦正好。\n\n一切顺利\n\n在门口能听到1号房间在看剧🆗\n\n电表闪烁的速度 3号最快 其次是我2号 一号几乎看不到闪烁（不知道为什么？\n\n浴霸的电应该算在了3号的电表里，心疼他一下。。。\n\n<br>\n\n房间就是太静了，真的太静了（不是说声音，是说不开窗不开空调时候的空气）\n\n继续努力，洗澡完清醒了，可以学一会儿习了。\n\n今天奠定一个基调，不能荒废时间了。\n\n------分割线------\n\n只能在桌子上面学习，只能在桌子上看书。\n\n# 190715更新\n\n### 明天搬家需要\n\n床上用品\n\n- 煜伟赏了我一个枕头\n\n瑜伽垫（网上买一个吧 10块钱就不搬运了）\n\n插线板\n\n鞋子（boost）+ 穿一双\n\n台灯\n\n各种充电线 需要装电脑过去\n\n剩下的书\n\n抹布 \n\n卫生纸 纸巾 + 纸卷\n\n带了棉拖鞋 还需要洗澡的拖鞋\n\n神奇台灯\n\n洗漱用品\n\n洗澡用品\n\n# 190713和小妹妹的搬家\n\n电表5439","tags":["杂记"],"categories":["文字"]},{"title":"程序员炼成记-从小白到工程师","url":"/programmer-upgrade/","content":"### 了解这份职业\n\n##### 跟进最新技术的重要性\n\n每一次业界的革命，都会让一些公司没落，让另一些公司崛起。正因为技术的不断换代，所以学得快的人才比单纯年轻的人更有优势。做管理也是一个出路，因为在管理的经验积累上很难有“职场天花板”的说法。但是也要考虑管理和技术脱节的问题。作为技术管理者，也要掌握最先进的技术，然后能用于自身业务。\n\n作为程序员，最需要保持三种感觉：饥饿感、孤独感和疲劳感。\n\n### 预见未来的自己\n\n##### 平静看待挫折\n\n> 没有哪一个聪明人会否定痛苦与忧愁的锻炼价值。——阿道斯·赫胥黎\n\n##### 项目团队的管理者\n\n研发领导需不需要编码\n\n- 如果关键输出是编码，需要\n- 如果编码的价值没有技术全局把握的价值大，那么研发领导需要把时间用在编码以外的地方。因为对于技术团队管理者，产品研发、技术调研和预研、系统架构设计、未来技术方向明确、团队管理等，都属于他们的工作内容。\n\n团队领导必须对技术有热情，需要对技术有敬畏之心：\n\n1. 基础知识和理论知识非常重要\n2. 多使用已有的成熟方案是稳定当前状态的关键手段\n3. 对技术要有一颗严谨和敬畏的心\n4. 想清楚了再做，坚持高标准\n5. 明确技术愿景\n\n##### 跳槽\n\n世界上的事，很多都急不来，你得等他熟。\n\n##### 技术选型的注意事项\n\n洛克希德·马丁公司的著名飞机设计师凯利·约翰逊提出的KISS原则：架构设计能简单绝不复杂，因而不需要任何华而不实的设计，不要因为3年后可能怎样甚至是现实生活中无法出现的场景，加入当下的架构设计中，导致系统无比复杂。\n\n1. 选择自己最熟悉的技术\n\n   > 一个新项目最好不要使用超过30%的新技术。\n\n   - 扬长避短\n\n   - 关注技术的发展前景\n\n2. 选择拥有强大社区支撑的开源技术\n\n   Apache StackOverflow\n\n3. 确保技术前进步伐\n\n   技术的生命周期必须显著长于项目的生命周期\n\n   > FaceBook 要么做到最好，要么死亡\n\n4. 从业务端开始思考-技术选型和业务相关\n   - 早期创业团队-新技术\n   - 中大型的公司的核心业务-稳定了几年的技术\n\n5. 先验证，后使用\n\n   先全方位的验证，然后再大规模的使用\n\n6. 重视经验\n\n   很需要经验的工作，要有大量的信息积累和输入，再根据具体现实情况输出一个结果。\n\n   工程师要确保自己所有的思考都是基于以前的事实，还要弄庆祝这些事实背后的假设，这都需要让知识内化形成经验。\n\n   **经验的本质是知识索引的完备程度**。\n\n   想要建立好这个知识索引，就要保持技术敏感性和广度，也就是要做到持续的信息输入、内化，并发现信息之间的关联性，建立索引，记下来。\n\n   难点在于信息输入量大，很容易忘记。因此一定要对知识进行压缩，记住最关键的细节，并且反复地去回味这个细节。\n\n### 架构师之路\n\n来自海康威视自身系统架构师季怡\n\n从开发到项目经理再到部门管理，然后回归开发，到最后成为架构师。\n\n工作就是不断地自我反省和总结教训。\n\n#### 成为架构师的关键道路\n\n##### 追根、抽象、把握事物本质\n\n“非风动，非幡动，仁者心动”\n\n##### 不停地学习和传播知识\n\n“世事洞明皆学问，人情练达即文章”\n\n##### 追求简约与平衡的架构之美\n\n脚踏实地，仰望星空。平衡好成熟技术和新技术之间的关系、平衡好硬编码和业务引擎之间的取舍、平衡好性能与资源占用之间的矛盾等。\n\n平衡，不是平均，更不是平庸。在所处的场景中，态度鲜明的取舍。这种取舍回最终形成架构师独特的审美，这种审美源自于环境与架构的和谐。\n\n#### 回顾和总结\n\n“踏遍青山人未老，风景这边独好”\n\n“回首向来萧瑟处，也无风雨也无晴”\n\n##### 还会有什么原因能让你放弃这个职业呢？\n\n**——是“枯燥的编码生活”吗？**\n\n​\t\t还有什么工作能得到创造一个世界的满足感呢？\n\n**——是“用户频繁的变更需求”吗？**\n\n​\t\t更好的完成业务，变化的是需求，不变的是管理学、组织行为学和普通心里学作用下的业务本质。领会到这一点，就会从用户的微笑和感谢中找到前进的动力。\n\n**——是“繁重到不加班就完成不了的任务”吗？**\n\n​\t\t任何成就哪儿有不经过汗水和痛苦就能达到的呢？辛苦和汗水带来的不仅是疲劳，还有荣誉和满足感。\n\n坚持走技术发展的道路，用技术手段解决客观世界的问题，然后在软件设计和编码的汪洋大海中寻找乐趣，这是所有软件技术人最好归宿！\n\n---\n\nOver","tags":["程序员","读书笔记"],"categories":["文字"]},{"title":"人生没有白走的路","url":"/every-step-is-crucial/","content":"\n有时候，你活得好累，\n\n总觉得自己走了好多错路，\n\n总觉得自己一直陷入迷茫和困境，\n\n总觉得付出的努力都看不到回报。\n\n\n\n其实，走过的一些路，\n\n只有你走错了，走进死胡同里了，\n\n才知道这条路是不能走的，\n\n才知道这条路是不适合你的。\n\n\n\n![img](【转】人生没有白走的路/u=1717152622,2956631211&fm=173&app=25&f=JPEG.jpg)\n\n\n\n别着急走错路花费了你的时间，\n\n这并不影响你的速度，\n\n因为生活，本就与速度无关，\n\n与终点无关，\n\n而是与路上遇见的风景、\n\n陪伴你的人、变化的心情息息相关。\n\n\n\n没有哪条路是白走的，\n\n虽然可能走错了路，\n\n但是你看到了别人看不到的风景；\n\n认识了你一辈子都能交心的知己；\n\n闻到了鸟语花香，看见了风和日丽；\n\n收获了温暖的回忆和弥足珍贵的经历；\n\n只有经历过苦难，才更能体会幸福的意义。\n\n\n\n![img](【转】人生没有白走的路/u=1239510758,1503479649&fm=173&app=25&f=JPEG.jpg)\n\n\n\n人生没有白走的路，每一步都算数。\n\n每一个地方都有不同的记忆，\n\n每一个拐弯都有不一样的风景，\n\n每一段经历都注定珍贵，\n\n每一段路都是一种领悟。\n\n\n\n你的气质里，你的人生中，\n\n藏着你读过的书，走过的路，\n\n听过的歌，流过的泪，吃过的苦，\n\n看过的风景，见识过的世面，爱过的人。\n\n这点点滴滴拼凑起来，\n\n成就了今天真实的你，\n\n也让人生变得更加丰盈圆满。\n\n\n\n![img](【转】人生没有白走的路/u=1921490849,542496753&fm=173&app=25&f=JPEG.jpg)\n\n\n\n这个世界上，\n\n没有白走的路，\n\n也没有白受的苦，\n\n所有的一切都有它存在的意义。\n\n在不一样的经历中行走，\n\n不知不觉地积累了生命的厚度，\n\n最后才有机会到达最初的方向。\n\n\n\n这个世界上，\n\n也没有白费的努力，\n\n更没有碰巧的成功。\n\n不要急于求成，\n\n你只要一点一点去做，\n\n一步步去走，\n\n成功，不过是水到渠成。\n\n\n\n![img](【转】人生没有白走的路/u=3399847757,2950785172&fm=173&app=25&f=JPEG.jpg)\n\n\n\n总有一些路，是一个人的旅程，\n\n总有一些坎坷，是一个人的坚强，\n\n最美好的未来，\n\n就是每一步踏实的走下去，\n\n那些岁月风烟漫过的地方，\n\n便是最美的风景。\n\n\n\n走到生命的哪一个阶段，\n\n都该喜欢那一段时光，\n\n完成那一阶段该完成的职责。\n\n不焦虑未来，不沉迷过去，\n\n不辜负岁月，努力活在当下，\n\n在每一段时光里，\n\n安排好自己的生活，\n\n你的每一步，都将成就更好的自己！","tags":["鸡汤"]},{"title":"代码之外的功夫-程序员精进之路","url":"/programming-beyond-practices/","content":"# 写在前面\n\n最后一章给了我很多的启发，我想写在最前面。\n\n**程序员是用技术解决人类社会常见问题的人。**\n\n我们写程序，不只是一个个小的 cpp、py文件，实际上编程是一种解决问题的方法。我们就像工地上面的工程师一样，为人类的大厦（不只是科技、产片）添砖加瓦。\n\n编程，无关乎程序，关乎人类的生活，人类的未来。\n\n---\n\n代码是一种解决问题很有利的工具。\n\n**认清行业未来，再议软件开发**\n\n未来可能我们站在一种足够高的层次和计算机交流，只需要关注如何解决问题，而不是纠结于代码编写中的细枝末节。\n\n> 有一些开发人员只对工具、代码及其带来的智力挑战感兴趣。但是对于其他人来说，这些只属于工作环境，而不是我们的本性。\n\n可能未来会有很多机器为我们完成大部分的编码工作，所以我们更需要关注的是“以人为本”的理念和不断地思考。\n\n## Chapter 1 善用原型设计，探索项目创意\n\n**早期产品设计和项目规划**\n\n#### 1.1 从理解项目背后的需求入手\n\n讨论获取项目的需求，细节问题可以之后再实现，先考虑项目的可行性。\n\n#### 1.2 利用线框图表达功能需求\n\n不用太长时间纠结于实现，而是集中精力寻找“最简单可行的方法”（有Ward Cunningham提出，目的在于提醒人们注意工作的最根本目标，**不要因为过多地考虑收益损失而迷失方向**）\n\n尽快实现简单的交互模型\n\n### 1.3 编程之初立即搭建测试系统\n\n速成原型法的意义是拉近项目中每个参与者之间的距离。\n\n搭建一个人人都都能使用的交互系统很有必要。估计大家亲自操作和实践。\n\nYAGNI原则（You Aren't Gonna Need It）不要添加任何不必要的功能。\n\n### 1.4 全面探讨不足，改善追求实效\n\n发现有瑕疵的时候，可能想停下来修改。需要平衡缺陷带来的损失和修复这一缺陷的时间成本。\n\n### 1.5 早问多问，验证设想\n\n多与客户沟通。\n\n### 1.6 力求缩小自己的工作范围\n\n把大的任务拆分成一个一个小的部分，然后分析小的部分。\n\n### 1.7 谨记原型并非生产系统\n\n有可能有的我们用的功能不是最完善最稳妥的，但是原型阶段可以使用。\n\n可以做好标记，这样就能够方便之后的开发。\n\n### 1.8 巧妙设计特性，轻松收集反馈\n\n这个是我们原型设计阶段的，我们通过设计简单的模型，让客户理解我们的产品内在的原理。\n\n## Chapter 2 \n\n---\n\n这本书详细读完啦，但是没有摘抄太多的内容。\n\nOver~\n\n\n\n","tags":["程序员","读书笔记"],"categories":["文字"]},{"title":"文件系统管理","url":"/ubuntu-fileSystem/","content":"##### ext4文件系统\n\n- 第四代的扩展文件系统\n- 提高了时间戳分辨率和扩展范围\n  - 时间戳单位提升到纳秒\n  - 时间范围添加了两位\n- 突破了文件系统的限制\n  - 最大文件系统为 1EB\n  - 最大支持 16TB 的文件\n\n##### 目录结构\n\n- / 根目录：所有目录绝对路径的起始地址\n- /bin binary的缩写：所有用户可执行的且最经常使用的命令\n- /boot 系统内核存放的目录\n- /etc 系统设置与管理的文件\n- /media 即插即用型存储设备的挂载点\n- /mnt 各项设备的文件提供挂载点\n- /root 管理员的主文件夹\n- /usr 用户使用的系统命令以及应用程序等信息\n- /var Variable的缩写，内容是经常变动的。\n\n\n\n\n\n\n\n\n","tags":["读书笔记","Ubuntu"],"categories":["文字"]},{"title":"shell","url":"/ubuntu-shell/","content":"**shell是外壳的意思：保护着内核，同时作为和外界通信的桥梁。**\n\n**shell是命令解释器，也是一种高级编程语言。**\n\n- 命令解释器：解释和执行用户输入的命令\n- 高级编程语言：编写处可运行的脚本，提供函数和控制结构等语言编程能力\n\n**shell按照是否使用图形界面作为接口来分类：**\n\n- 图形界面：Windows Explorer\n- 字符型：cmd、bash\n\n##### shell 的特点：\n\n- 命中历史\n  - history调用一使用过的命令\n  - 重新打开的时候也会保存，保存在~/.bash_history文件 默认500条\n- 自动补全\n  - 两次Tab罗列所有匹配的项目\n- 后台处理\n  - 允许命令同时执行\n- 通配符功能\n  - 快速找到文件\n\n##### 通配符：\n\n- 通配符？匹配任意一个字符\n- 通配符\\* 匹配任意多个字符\n- 字符范围符[] \n  - 匹配任意一个中括号里面的字符\n  - [12345]  [1-5]\n  - [a-zA-Z] 匹配所有的字母\n\n##### 配置shell：\n\n- shell的初始化\n  - /etc/profile：为系统的每一个用户设置环境变量信息\n  - ~/.bashrc：专用于当前用户的 Bash Shell信息（不需要root管理员权限）\n  - /etc/environment：系统的环境变量\n- 添加环境变量\n  - echo $PATH\n\n##### 编辑命令行：\n\n- 移动光标\n  - CTRL+A：移动到开始位置\n  - CTRL+E：移动到末尾位置\n  - CTRL+F：光标向右移动一个位置\n  - CTRL+B：光标向左移动一个位置\n  - CTRL+l：清屏并从屏幕最上面开始新的一行\n- 编辑\n  - CTRL+W：剪切光标前的一个单词\n  - CTRL+Y：粘贴最近间切的字符串\n  - CTRL+C：删除整行，并换到下一行\n\n##### 基本操作命令：\n\n- ls\n\n  - .本级目录\n  - ..上一级目录\n  - -l 详细列出来\n  - -R 递归显示下层子目录\n\n- cd \n\n  - /开头是相对路径\n  - ~ 表示shell用户的主文件夹\n  - \\- 表示上次执行命令 cd 的目录\n\n- cat\n\n  - 文本文件内容命令\n  - -n 显示行号\n\n- grep \n\n  - 匹配字符串命令\n\n  - eg 在文件hello1中搜索包含字符“1”的所有文本行\n\n    ```bash\n    grep 1 hello1\n    ```\n\n- sort 排序命令\n  - -d 按照字典顺序排序\n  - -f 忽略大小写\n  - -r 逆序输出排序结果\n\n##### 文件和目录操作指令\n\n- 创建文件\n\n  - touch\n\n- 复制文件\n\n  - cp 源文件 目标路径\n\n  - 备份文件\n\n    ```bash\n    cp passwd passwd.bak\n    ```\n\n    \n\n- ##### 删除文件\n\n  - rm删除文件及整个目录\n\n    - ```bash\n      rm *.jpg\n      # 删除所有的jpg图像\n      ```\n\n    - ```bash\n      rm -r ~/test\n      # 删除目录 -r\n      ```\n\n    \trm删除不可逆转\n\n    \trm -i 会询问是否删除\n\n  - mv 移动命令\n  \n  - mkdir 创建目录命令\n  \n  ##### 文档打包：\n  \n  由于我已经使用图形界面，暂时不学了这部分。\n  \n  \n\n\n\n\n\n","tags":["读书笔记","Ubuntu"],"categories":["文字"]},{"title":"docker-myself","url":"/docker-myself/","content":"docker中的 image 和 container是不同的东西，这个需要提前清楚。\n\ndocker-compose.yml的配置可以让我们快速打开多个container（从image），并把他们配置好和主机的关系（端口/共享文件夹等)。\n\n如果你想要从一个基础镜像开始建立一个自定义镜像，可以选择一步一步进行构建，也可以选择写一个配置文件，然后一条命令（docker build）完成构建，显然配置文件的方式可以更好地应对需求的变更，这个配置文件就是Dockerfile。\n\n思路就是先获取已有的基础image，之后根据自己的Dockerfile & requirements.txt build自己的image\n\n**why？**\n\n因为container就是一个一次性的容器，我们每次调用container就是从image新建出一个完全空白的container。这个时候之前安装的 Django 就不存在了。所以通过自己定制的Dockerfile来生成自己的image。之后直接docker-compose up就可以了！\n\ne.g \n\n***Django***\n\n```dockerfile\n<Dockerfile>\n\nFROM python:latest\n\nRUN apt-get install python3 python3-dev python3-pip   但是这个我没用！！！\nRUN pip3 install Django==2.2.1 djangorestframework==3.9.4  但是这个我没用！！！\n\nRUN pip3 install Django\n```\n\n**build**\n\n```bash\ndocker build -t new-david-python-image:latest --no-cache  我也没用这个！\n```\n\n```bash\ndocker build -t hanwen_python:latest .\n```\n\n​\t重点！一定要注意上面需要一个点 .\n\n> \tDocker问题：\"docker build\" requires exactly 1 argument.\n>\n> https://blog.csdn.net/aboutmn/article/details/87913062\n\n**操作**\n\n```\ndocker images\n\ndocker-compose up\n\ndocker exec -it ....\n```\n\n这个时候需要修改 docker-compose 里面的 image 名称为刚创建的 image 的名字。\n\n\n\n\n\n\n--------------------- \n\n\n\n","tags":["docker"],"categories":["技术"]},{"title":"一亩三分地答案","url":"/1point3acre-answer/","content":"\n1.'Negotiate 工资的时候，哪种做法有利于得到更大的包裹？': '精读地里谈工资宝典，知己知彼，百战不殆',\n2.'Which company is the largest single-site employer in the US?': 'Disney World',\n3.'which state is University of Miami located?': 'Florida',\n4.地里发帖可以隐藏内容。假如要设置200积分以上才可以看到，下面哪个语法正确？': '[hide=200]想要隐藏的内容[/hide]',\n5.'地里面经数目最多的是哪家公司？': 'Amazon',\n6.'地里数据科学类职位面经放在在什么版最合理？': '数科面经版',\n7.'给论坛ios或者安卓手机应用留评价如何获取50大米？': '以上步骤都需要',\n8.'公司之间级别对应，如下哪个是错误的？': 'Facebook L6 = Facebook E6',\n9.'关于旧金山市中心描述，下面哪个不正确？': '旧金山创业公司很多，被称为“硅谷”',\n10.'回答别人的私信提问还需要消耗我5大米怎么办？': '直接在版面回答，这样大家都能看见',\n11.'加州大学有多个分校，下面哪个成立时间最短？': 'UC Merced',\n12.'论坛鼓励如何发面经？': '以上都正确',\n13.'哪种选校策略最合理？': '根据自己下一步职业和学业目标，参考地里数据和成功率，认真斟酌',\n14.'求内推如何作死？': '这些都会作死',\n15.'下面几个州，哪个离美国首都最远？': 'North Carolina',\n16.'下面哪种方法，可以妥妥拿到积分？': '这些全都可以',\n17.'下面哪种情况，管理员会按照你的要求，进行删帖？': '这些情况全都不删帖！',\n18.'下面哪个城市没有SUNY（纽约州立大学）校区？': 'Fulton',\n19.'下面哪个大学实际上不存在？': 'University of Michigan, Twin City',\n20.'下面哪个情况，不会消耗你的积分？': '看到干货帖子和精华回复，给作者加分！',\n21.'下面哪个说法错误？': [\n                    '芝加哥是美国著名的雨城',\n                    '中国驻纽约领事馆位于法拉盛中国城，周围全是好吃的！'\n                ],\n22.'下面哪个学术会议不是机器学习领域的？': 'ICSE',\n23.'下面哪个州，对公司友好，所以吸引了美国很多公司注册？': '特拉华',\n24.'下面哪个州，没有income tax?': 'Nevada',\n25.'下面哪个州，没有state income tax?': [\n                    'Florida',\n                    'New Hampshire'\n                ],\n26.'下面哪个州，有state income tax': [\n                    'Mississippi',\n                    'North Dakota',\n                ],\n27.'下面哪个州冬天最暖和？': 'Oklahoma',\n28.'下面哪个州里有Disney World？': 'Florida',\n29.'下面哪个州在美国西海岸': 'Washington',\n30.'下面哪个专业，不是STEM，OPT没法延期？': '教育学',\n31.'下面哪个公司总部在圣地亚哥？': 'Qualcomm',\n32.'下面哪家公司的总部不在西雅图': '波音',\n33.'下面哪类版块，可以拉群，而且不会被警告扣分？': '学友工友、找室友或者版聚本地',\n34.'下面哪所大学所在城市不是波士顿？': [\n                    'Boston College',\n                    'MIT',\n                ],\n35.'下面哪种行为，在地里会被扣光积分，甚至封号？': '这些全都会',\n36.'想找室友或者当房东，帖子发在哪里？': '租房广告|找室友版',\n37.'一亩三分地发帖可以用hide语法隐藏内容。下面哪个写法正确？': '柯南的名字是[hide=200]工藤新一[/hide]',\n38.'一亩三分地鼓励如何发面经？': '以上都正确',\n39.'一亩三分地是哪年创立的？': '2009',\n40.'一亩三分地是谁创立的？': 'Warald',\n41.'在Linkedin上求内推如何作死': '这些都会作死',\n42.'在论坛发slack群，qq群，微信群，任何站外讨论方式，会如何？': '以上都正确'","tags":["一亩三分地"]},{"title":"数据结构-图","url":"/ds-graph/","content":"\n注明：瀚文代码版本都为 Visual Studio 版本\n\n## 图_邻接表\n\n```c++\ntemplate <class TypeOfEdge>\nclass graph {\npublic:\n\tvirtual bool insert(int u, int v, TypeOfEdge w) = 0;\n\tvirtual bool remove(int u, int v) = 0;\n\tvirtual bool exist(int u, int v) const = 0;\n\tvirtual numOfVer() const { return Vers; }\n\tvirtual numOfEdge() const { return Edges; }\nprotected:\n\tint Vers, Edges;\n};\n\ntemplate <class TypeOfVer, class TypeOfEdge>\nclass adjListGraph :public graph<TypeOfEdge> {\npublic:\n\tadjListGraph(int vSize, const TypeOfVer d[]);\n\tbool insert(int u, int v, TypeOfEdge w);\n\tbool remove(int u, int v);\n\tbool exist(int u, int v) const;\n\t~adjListGraph();\nprivate:\n\tstruct edgeNode {//邻接表中存储边的结点类\n\t\tint end; //终点编号\n\t\tTypeOfEdge weight;  //边的权值\n\t\tedgeNode *next;\n\t\tedgeNode(int e, TypeOfEdge w, edgeNode *n = NULL) {\n\t\t\tend = e; weight = w; next = n;\n\t\t}\n\t};\n\tstruct verNode { //保存顶点的数据元素类型\n\t\tTypeOfVer ver;  //顶点值\n\t\tedgeNode *head;  //对应的单链表的头指针\n\t\tverNode(edgeNode *h = NULL) { head = h; }\n\t};\n\tverNode *verList;\n};\n\ntemplate <class TypeOfVer, class TypeOfEdge>\nadjListGraph<TypeOfVer, TypeOfEdge>::\nadjListGraph(int vSize, const TypeOfVer d[]) {\n\tVers = vSize;\n\tEdges = 0;\n\n\tverList = new verNode[vSize];\n\tfor (int i = 0; i < Vers; ++i) verList[i].ver = d[i];\n}\n\ntemplate <class TypeOfVer, class TypeOfEdge>\nadjListGraph<TypeOfVer, TypeOfEdge>::~adjListGraph() {\n\tint i;\n\tedgeNode *p;\n\tfor (i = 0; i < Vers; ++i)\n\t\twhile ((p = verList[i].head) != NULL) {\n\t\t\tverList[i].head = p->next; delete p;\n\t\t}\n\tdelete[] verList;\n}\n\n\ntemplate <class TypeOfVer, class TypeOfEdge>\nbool adjListGraph<TypeOfVer, TypeOfEdge>::\ninsert(int u, int v, TypeOfEdge w) {\n\tverList[u].head =\n\t\tnew edgeNode(v, w, verList[u].head);\n\t++Edges;\n\treturn true;\n}\n\ntemplate <class TypeOfVer, class TypeOfEdge>\nbool adjListGraph<TypeOfVer, TypeOfEdge>::remove(int u, int v) {\n\tedgeNode *p = verList[u].head, *q;\n\tif (p == NULL) return false;  //结点u没有相连的边\n\tif (p->end == v)  //单链表中的第一个结点就是被删除的边\n\t{\n\t\tverList[u].head = p->next;\n\t\tdelete p; --Edges;\n\t\treturn true;\n\t}\n\twhile (p->next != NULL && p->next->end != v) p = p->next\n\t\tif (p->next == NULL) return false;  //没有找到被删除的边\n\tq = p->next; p->next = q->next; delete q;\n\t--Edges;\n\treturn true;\n}\n\ntemplate <class TypeOfVer, class TypeOfEdge>\nbool adjListGraph<TypeOfVer, TypeOfEdge>::\nexist(int u, int v) const {\n\tedgeNode *p = verList[u].head;\n\twhile (p != NULL && p->end != v) p = p->next;\n\tif (p == NULL) return false; else  return true;\n}\n\n```\n\n## 图_邻接矩阵\n\n```c++\ntemplate <class TypeOfEdge>\nclass graph {\npublic:\n\tvirtual bool insert(int u, int v, TypeOfEdge w) = 0;\n\tvirtual bool remove(int u, int v) = 0;\n\tvirtual bool exist(int u, int v) const = 0;\n\tvirtual numOfVer() const { return Vers; }\n\tvirtual numOfEdge() const { return Edges; }\nprotected:\n\tint Vers, Edges;\n};\n\ntemplate <class TypeOfVer, class TypeOfEdge>\nclass adjMatrixGraph :public graph<TypeOfEdge> {\npublic:  adjMatrixGraph(int vSize, const TypeOfVer d[],\n\tTypeOfEdge noEdgeFlag);\n\t\t bool insert(int u, int v, TypeOfEdge w);\n\t\t bool remove(int u, int v);\n\t\t bool exist(int u, int v) const;\n\t\t ~adjMatrixGraph() ；\nprivate:\n\tTypeOfEdge **edge; //存放邻接矩阵\n\tTypeOfVer *ver;  //存放结点值\n\tTypeOfEdge noEdge; //邻接矩阵中的∞的表示值\n};\n\ntemplate <class TypeOfVer, class TypeOfEdge>\nadjMatrixGraph<TypeOfVer, TypeOfEdge>::adjMatrixGraph\n(int vSize, const TypeOfVer d[], TypeOfEdge noEdgeFlag) {\n\tint i, j;\n\tVers = vSize;\n\tEdges = 0;\n\tnoEdge = noEdgeFlag;\n\n\t//存放结点的数组的初始化\n\tver = new TypeOfVer[vSize];\n\tfor (i = 0; i < vSize; ++i) ver[i] = d[i];\n\n\t//邻接矩阵的初始化\n\tedge = new TypeOfEdge*[vSize];\n\tfor (i = 0; i < vSize; ++i) {\n\t\tedge[i] = new TypeOfEdge[vSize];\n\t\tfor (j = 0; j < vSize; ++j) edge[i][j] = noEdge;\n\t\tedge[i][i] = 0;\n\t}\n}\n\n\ntemplate <class TypeOfVer, class TypeOfEdge>\nadjMatrixGraph<TypeOfVer, TypeOfEdge>::~adjMatrixGraph() {\n\tdelete[] ver;\n\tfor (int i = 0; i < Vers; ++i) delete[] edge[i\n\t\tdelete[] edge;\n}\n\ntemplate <class TypeOfVer, class TypeOfEdge>\nbool adjMatrixGraph<TypeOfVer, TypeOfEdge>::insert(int u, int v, TypeOfEdge w) {\n\tif (u < 0 || u > Vers - 1 || v < 0 || v > Vers - 1)\n\t\treturn false;\n\tif (edge[u][v] != noEdge) return false;\n\tedge[u][v] = w;\n\t++Edges;\n\treturn true;\n}\n\ntemplate <class TypeOfVer, class TypeOfEdge>\nbool adjMatrixGraph<TypeOfVer, TypeOfEdge>::remove(int u, int v) {\n\tif (u < 0 || u > Vers - 1 || v < 0 || v > Vers - 1)\n\t\treturn false;\n\tif (edge[u][v] == noEdge) return false;\n\tedge[u][v] = noEdge;\n\t--Edges;\n\treturn true;\n}\n\ntemplate <class TypeOfVer, class TypeOfEdge>\nbool adjMatrixGraph<TypeOfVer, TypeOfEdge>::exist(int u, int v) const {\n\tif (u < 0 || u > Vers - 1 || v < 0 || v > Vers - 1)\n\t\treturn false;\n\tif (edge[u][v] == noEdge) return false;\n\telse  return true;\n}\n\n\n```\n\n","tags":["数据结构"],"categories":["算法"]},{"title":"数据结构-图","url":"/ds-stack/","content":"\n数据结构瀚文的基础结构\n\n## 栈_线性栈seqStack\n\n```c++\n#include<iostream>\nusing namespace std;\n\ntemplate<class elemType>\nclass stack\n{\npublic:\n\tvirtual bool isEmpty()const = 0;\n\tvirtual void push(const elemType &x) = 0;\n\tvirtual elemType pop() = 0;\n\tvirtual elemType top()const = 0;\n\tvirtual ~stack() {}\n};\n\n\ntemplate<class elemType>\nclass seqStack : public stack<elemType>\n{\nprivate:\n\telemType *elem;\n\tint topp;\n\tint maxSize;\n\n\tvoid doubleSpace();\npublic:\n\tseqStack(int initSize = 10);\n\t~seqStack();\n\n\tbool isEmpty()const;\n\telemType top()const;\n\telemType pop();\n\tvoid push(const elemType &x);\n\n};\n\ntemplate<class elemType>\nseqStack<elemType>::seqStack(int initSize) {\n\telem = new elemType[initSize];\n\tmaxSize = initSize;\n\ttopp = -1;\n}\n\ntemplate<class elemType>\nseqStack<elemType>::~seqStack() { delete[] elem; }\n\ntemplate<class elemType>\nbool seqStack<elemType>::isEmpty()const {\n\treturn topp == -1;\n}\n\ntemplate<class elemType>\nelemType seqStack<elemType>::top()const {\n\treturn elem[topp];\n}\n\ntemplate<class elemType>\nelemType seqStack<elemType>::pop() {\n\treturn elem[topp--];\n}\n\ntemplate<class elemType>\nvoid seqStack<elemType>::push(const elemType &x) {\n\tif (topp == maxSize - 1)doubleSpace();\n\n\telem[++topp] = x;\n}\n\ntemplate<class elemType>\nvoid seqStack<elemType>::doubleSpace() {\n\telemType *tmp = elem;\n\telem = new elemType[2 * maxSize];\n\tmaxSize *= 2;\n\n\tfor (int i = 0; i <= topp; ++i) {\n\t\telem[i] = tmp[i];\n\t}\n\n\tdelete[] tmp;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nbool isBegin(char s[]);\nbool isEnd(char s[]);\nbool isIf(char s[]);\nbool isThen(char s[]);\nbool isElse(char s[]);\n\nint main() {\n\tseqStack<char> x(100);\n\n\twhile (cin) {\n\t\tchar s[1000];\n\n\t\tif (!(cin >> s)) { break; }\n\t\telse {\n\t\t\tif (isIf(s)) {\n\t\t\t\tif (x.top() == 'a') { break; }\n\t\t\t\telse { x.push('a'); }\n\t\t\t}\n\t\t\telse if (isThen(s)) {\n\t\t\t\tif (x.isEmpty()) { x.push('t'); break; }\n\t\t\t\telse if (x.top() == '{' || x.top() == 'b') { x.push('a'); break; }\n\t\t\t\telse if (x.top() == 'a') { x.pop(); x.push('b'); }\n\t\t\t}\n\t\t\telse if (isBegin(s)) { x.push('{'); }\n\n\t\t\telse if (isEnd(s)) {\n\t\t\t\tif (x.isEmpty()) { x.push('}'); break; }\n\t\t\t\telse if (x.top() == 'a') { break; }\n\t\t\t\telse {\n\t\t\t\t\twhile (x.top() != '{' && !x.isEmpty()) {\n\t\t\t\t\t\tx.pop();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (x.isEmpty()) { x.push('}'); break; }\n\t\t\t\t\telse { x.pop(); }\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if (isElse(s)) {\n\t\t\t\tif (x.isEmpty()) { x.push('e'); break; }\n\t\t\t\telse if (x.top() == 'a' || x.top() == '{') { break; }\n\t\t\t\telse { x.pop(); }\n\t\t\t}\n\n\t\t\tchar s[1000];\n\t\t}\n\t}//BigWhile\n\n\twhile (!x.isEmpty()) {\n\t\tif (x.top() == 'a' || x.top() == '{' || x.top() == 't' || x.top() == '}' || x.top() == 'e') { break; }\n\t\telse { x.pop(); }\n\t}\n\n\tif (x.isEmpty()) { cout << \"Match!\"; }\n\telse { cout << \"Error!\"; }\n\n\n\treturn 0;\n}\n\nbool isBegin(char s[]) {\n\tif ((s[0] == 'b') && (s[1] == 'e') && (s[2] == 'g') && (s[3] == 'i') && (s[4] == 'n') && (s[5] == '\\0')) { return 1; }\n\telse { return 0; }\n}\n\nbool isEnd(char s[]) {\n\tif ((s[0] == 'e') && (s[1] == 'n') && (s[2] == 'd') && (s[3] == '\\0')) { return 1; }\n\telse { return 0; }\n}\n\nbool isIf(char s[]) {\n\tif ((s[0] == 'i') && (s[1] == 'f') && (s[2] == '\\0')) { return 1; }\n\telse { return 0; }\n}\n\nbool isThen(char s[]) {\n\tif ((s[0] == 't') && (s[1] == 'h') && (s[2] == 'e') && (s[3] == 'n') && (s[4] == '\\0')) { return 1; }\n\telse { return 0; }\n}\n\nbool isElse(char s[]) {\n\tif ((s[0] == 'e') && (s[1] == 'l') && (s[2] == 's') && (s[3] == 'e') && (s[4] == '\\0')) { return 1; }\n\telse { return 0; }\n}\n\n\n```\n\n## 栈_链接栈linkStack\n\n```c++\n#include<iostream>\nusing namespace std;\n\ntemplate<class elemType>\nclass stack\n{\npublic:\n\tvirtual bool isEmpty()const = 0;\n\tvirtual void push(const elemType &x) = 0;\n\tvirtual elemType pop() = 0;\n\tvirtual elemType top()const = 0;\n\tvirtual ~stack() {}\n};\n\n\ntemplate<class elemType>\nclass linkStack : public stack<elemType>\n{\nprivate:\n\tstruct node {\n\t\telemType data;\n\t\tnode *next;\n\t\tnode(const elemType &x, node *N = NULL) { data = x; next = N; }\n\t\tnode() : next(NULL) {}\n\t\t~node() {}\n\t};\n\tnode *topp;\npublic:\n\tlinkStack();\n\t~linkStack();\n\n\tbool isEmpty()const;\n\telemType top()const;\n\telemType pop();\n\tvoid push(const elemType &x);\n};\n\n\ntemplate<class elemType>\nlinkStack<elemType>::linkStack() {\n\ttopp = NULL;\n}\n\ntemplate<class elemType>\nlinkStack<elemType>::~linkStack() {\n\tnode *tmp;\n\twhile (topp != NULL) {\n\t\ttmp = topp;\n\t\ttopp = topp->next;\n\t\tdelete tmp;\n\t}\n}\n\ntemplate<class elemType>\nbool linkStack<elemType>::isEmpty()const {\n\treturn topp == NULL;\n}\n\ntemplate<class elemType>\nelemType linkStack<elemType>::pop() {\n\tnode *tmp = topp;\n\telemType x = topp->data;\n\ttopp = topp->next;\n\tdelete tmp;\n\treturn x;\n}\n\ntemplate<class elemType>\nelemType linkStack<elemType>::top()const {\n\treturn topp->data;\n}\n\ntemplate<class elemType>\nvoid linkStack<elemType>::push(const elemType &x) {\n\tnode *tmp = new node(x, topp);\n\ttopp = tmp;\n}\n\n\n\n\n\nint main() {\n\tcout << \"Hello world!\" << endl;\n\n\tcout << \"Please input your words: \" << endl;\n\tlinkStack<int> s;\n\tint count = 1;\n\n\twhile (cin) {\n\t\tchar store[1000];\n\n\t\tif (!(cin >> store)) { break; }\n\t\telse {\n\t\t\ts.push(count);\n\t\t}\n\t\tcount++;\n\t}\n\n\tcout << \"There are \" << s.top() << \" words.\" << endl;\n\n\tsystem(\"pause\");\n\treturn 0;\n}\n\n```\n\n","tags":["数据结构"],"categories":["算法"]},{"title":"数据结构-树","url":"/ds-tree/","content":"\n注明：瀚文代码版本都为 Visual Studio 版本\n\n## 二叉树\n\n```c++\n#include<iostream>\nusing namespace std;\n\nint max(const int &a, const int &b) {\n\treturn(a > b) ? a : b;\n}\n\ntemplate<class elemType>\nclass stack\n{\npublic:\n\tvirtual bool isEmpty()const = 0;\n\tvirtual void push(const elemType &x) = 0;\n\tvirtual elemType pop() = 0;\n\tvirtual elemType top()const = 0;\n\tvirtual ~stack() {}\n};\n\n\ntemplate<class elemType>\nclass linkStack : public stack<elemType>\n{\nprivate:\n\tstruct node {\n\t\telemType data;\n\t\tnode *next;\n\t\tnode(const elemType &x, node *N = NULL) { data = x; next = N; }\n\t\tnode() : next(NULL) {}\n\t\t~node() {}\n\t};\n\tnode *topp;\npublic:\n\tlinkStack();\n\t~linkStack();\n\n\tbool isEmpty()const;\n\telemType top()const;\n\telemType pop();\n\tvoid push(const elemType &x);\n};\n\n\ntemplate<class elemType>\nlinkStack<elemType>::linkStack() {\n\ttopp = NULL;\n}\n\ntemplate<class elemType>\nlinkStack<elemType>::~linkStack() {\n\tnode *tmp;\n\twhile (topp != NULL) {\n\t\ttmp = topp;\n\t\ttopp = topp->next;\n\t\tdelete tmp;\n\t}\n}\n\ntemplate<class elemType>\nbool linkStack<elemType>::isEmpty()const {\n\treturn topp == NULL;\n}\n\ntemplate<class elemType>\nelemType linkStack<elemType>::pop() {\n\tnode *tmp = topp;\n\telemType x = topp->data;\n\ttopp = topp->next;\n\tdelete tmp;\n\treturn x;\n}\n\ntemplate<class elemType>\nelemType linkStack<elemType>::top()const {\n\treturn topp->data;\n}\n\ntemplate<class elemType>\nvoid linkStack<elemType>::push(const elemType &x) {\n\tnode *tmp = new node(x, topp);\n\ttopp = tmp;\n}\n\n\ntemplate<class elemType>\nclass queue\n{\npublic:\n\tvirtual bool isEmpty() = 0;\n\tvirtual void enQueue(const elemType &x) = 0;\n\tvirtual elemType deQueue() = 0;\n\tvirtual elemType getHead() = 0;\n\tvirtual ~queue() {};\n};\n\ntemplate<class elemType>\nclass seqQueue :public queue<elemType>\n{\nprivate:\n\telemType *elem;\n\tint maxSize;\n\tint front, rear;\n\n\tvoid doubleSpace();\npublic:\n\tseqQueue(int size = 10) {\n\t\telem = new elemType[size];\n\t\tmaxSize = size;\n\t\tfront = rear = 0;\n\t}\n\t~seqQueue() { delete[]elem; }\n\tbool isEmpty() { return rear == front; }\n\tvoid enQueue(const elemType &x);\n\telemType deQueue();\n\telemType getHead() { return elem[(front + 1) % maxSize]; }\n};\n\ntemplate<class elemType>\nvoid seqQueue<elemType>::doubleSpace() {\n\telemType *tmp = elem;\n\telem = new elemType[2 * maxSize];\n\tfor (int i = 1; i < maxSize; ++i) {//Attention i从1开始\n\t\telem[i] = tmp[(front + i) % maxSize];//由于队列不需要考虑front元素在新表中的位置，所以只需要把所有的元素拷贝过去就好\n\t}\n\n\tfront = 0; rear = maxSize - 1;\n\tmaxSize *= 2;\n\tdelete tmp;\n\n}\n\ntemplate<class elemType>\nvoid seqQueue<elemType>::enQueue(const elemType &x) {\n\tif ((rear + 1) % maxSize == front) { doubleSpace(); }\n\trear = (rear + 1) % maxSize;\n\telem[rear] = x;\n}\n\ntemplate<class elemType>\nelemType seqQueue<elemType>::deQueue() {\n\tfront = (front + 1) % maxSize;//这个元素出队列了，front指向实际存储元素的前一个位置（作为标志）\n\treturn elem[front];\n}\n\n\n\n\ntemplate<class T>\nclass BinaryTree {\nprivate:\n\tstruct Node {\n\t\tNode *left, *right;\n\t\tT data;\n\t\tNode() :left(NULL), right(NULL) {}\n\t\tNode(T item, Node *L = NULL, Node *R = NULL) :data(item), left(L), right(R) {}\n\t\t~Node() {}\n\t};\n\n\tstruct StNode {\n\t\tNode *node;\n\t\tint TimesPop;\n\t\tStNode(Node *N = NULL) :node(N), TimesPop(0) {}\n\t};\n\n\tNode *root;\npublic:\n\tBinaryTree() :root(NULL) {}//构造空二叉树（但是好奇居然可以这么使用初始化参数列表么？）\n\tBinaryTree(const T & value) { root = new Node(value); }\n\tBinaryTree(Node *p) { root = p; }\n\t~BinaryTree() { clear(root); }\n\n\tT gerRoot() { return root->data; }\n\tT getLeft() { return root->left->data; }\n\tT getRight() { return root->right->data; }\n\tvoid makeTree(const T &x, BinaryTree &lt, BinaryTree &rt) {\n\t\troot = new Node(x, lt.root, rt.root);\n\t\tlt.root = NULL; rt.root = NULL;\n\t}//makeTree（x,TL, TR）：为x申请一个结点，让它的left指向TL的根结点，right指向TR的根结点。 \n\tvoid delLeft() {\n\t\tBinaryTree tmp = root->left;\n\t\troot->left = NULL;\n\t\ttmp.clear();\n\t}\n\tvoid delRight() {\n\t\tBinaryTree tmp = root->right;\n\t\troot->right = NULL;\n\t\ttmp.clear();\n\t}\n\tbool isEmpty() { return root == NULL; }\n\tvoid clear() {\n\t\tif (root != NULL) { clear(root); }\n\t\troot = NULL;\n\t}\n\tint size() { return size(root); }\n\tint height() { return height(root); }\n\tvoid preOrder()const;\n\tvoid midOrder()const;\n\tvoid postOrder()const;\n\tvoid creatTree(T flag);\n\tvoid creatTreeOUT(int L[], int R[], int P[], int n, T flag);\n\tvoid preOrderNR()const;\n\tvoid midOrderNR()const;\n\tvoid postOrderNR()const;\n\tvoid levelOrder()const;\n\tint countNotLeaves()const;\n\n\nprivate:\n\tvoid clear(Node *t);\n\tint height(Node *t)const;\n\tint size(Node *t)const;\n\tvoid preOrder(Node *t)const;\n\tvoid midOrder(Node *t)const;\n\tvoid postOrder(Node *t)const;\n\n};\n\n\ntemplate<class T>\nvoid BinaryTree<T>::clear(Node *t) {\n\tif (t->left != NULL) { clear(t->left); }\n\tif (t->right != NULL) { clear(t->right); }\n\tdelete t;\n}\n\n\ntemplate<class T>\nint BinaryTree<T>::height(Node *t)const {\n\tif (t == NULL)return 0;\n\treturn 1 + max(height(t->left), height(t->right));\n}//递归！ 1＋max（左子树高度，右子树高度）    && 其实是因为有了‘1+’所以就会有变化\n\ntemplate<class T>\nint BinaryTree<T>::size(Node *t)const {\n\tif (t == NULL)return 0;\n\treturn size(t->left) + size(t->right) + 1;//注意这里的这个分号\n}//递归！ 左子树的规模 + 右子树的规模 + 1（根）\n\ntemplate<class T>\nvoid BinaryTree<T>::preOrder() const {\n\tif (root != NULL) { cout << \"\\n前序遍历: \"; preOrder(root); }\n}\n\ntemplate<class T>\nvoid BinaryTree<T>::preOrder(Node *t)const {\n\tif (t != NULL) {\n\t\tcout << t->data << ' ';\n\t\tpreOrder(t->left);\n\t\tpreOrder(t->right);\n\t}\n}\n\ntemplate<class T>\nvoid BinaryTree<T>::midOrder()const {\n\tif (root != NULL) { cout << \"\\n中序遍历: \"; midOrder(root); }\n}\n\ntemplate<class T>\nvoid BinaryTree<T>::midOrder(Node *t)const {\n\tif (t != NULL) {\n\t\tmidOrder(t->left);\n\t\tcout << t->data << ' ';\n\t\tmidOrder(t->right);\n\t}\n}\n\ntemplate<class T>\nvoid BinaryTree<T>::postOrder()const {\n\tif (root != NULL) { cout << \"\\n后序遍历: \"; postOrder(root); }\n}\n\ntemplate<class T>\nvoid BinaryTree<T>::postOrder(Node *t)const {\n\tif (t != NULL) {\n\t\tpostOrder(t->left);\n\t\tpostOrder(t->right);\n\t\tcout << t->data << ' ';\n\t}\n}\n\ntemplate<class T>\nvoid BinaryTree<T>::levelOrder()const {\n\tseqQueue<Node *> q; Node *p;\n\tcout << \"\\n层次遍历: \";\n\tif (!root)return;\n\tq.enQueue(root);\n\twhile (!q.isEmpty()) {\n\t\tp = q.deQueue(); cout << p->data;\n\t\tif (p->left) { q.enQueue(p->left); }\n\t\tif (p->right) { q.enQueue(p->right); }\n\t}\n}\n\ntemplate<class T>\nvoid BinaryTree<T>::preOrderNR()const {\n\tlinkStack<Node *>s;\n\tNode *current;\n\tcout << \"\\n前序遍历: \";\n\ts.push(root);\n\n\twhile (!s.isEmpty()) {\n\t\tcurrent = s.pop();\n\t\tcout << current->data << ' ';\n\t\tif (current->right != NULL) { s.push(current->right); }\n\t\tif (current->left != NULL) { s.push(current->left); }\n\t}\n\n\n}\n\n\ntemplate<class T>\nvoid BinaryTree<T>::midOrderNR()const {\n\tlinkStack<StNode> s;\n\tStNode current(root);\n\tcout << \"\\t中序遍历: \";\n\ts.push(current);\n\n\twhile (!s.isEmpty()) {\n\t\tcurrent = s.pop();\n\t\tif (++current.TimesPop == 2) {\n\t\t\tcout << current.node->data << ' ';\n\t\t\tif (current.node->right != NULL) {\n\t\t\t\ts.push(StNode(current.node->right));\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\ts.push(current);\n\t\t\tif (current.node->left != NULL) {\n\t\t\t\ts.push(StNode(current.node->left));\n\t\t\t}\n\t\t}\n\t}\n}\n\n\ntemplate<class T>\nvoid BinaryTree<T>::postOrderNR()const {\n\tlinkStack<StNode> s;\n\tStNode current(root);\n\tcout << \"\\t后序遍历: \";\n\ts.push(current);\n\n\twhile (!s.isEmpty()) {\n\t\tcurrent = s.pop();\n\t\tif (++current.TimesPop == 3) {\n\t\t\tcout << current.node->data << ' ';\n\t\t\tcontinue;\n\t\t}\n\t\ts.push(current);\n\n\t\tif (current.TimesPop == 1) {\n\t\t\tif (current.node->left != NULL) {\n\t\t\t\ts.push(StNode(current.node->left));\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (current.node->right != NULL) {\n\t\t\t\ts.push(StNode(current.node->right));\n\t\t\t}\n\t\t}\n\t}\n}\n\ntemplate<class T>\nvoid BinaryTree<T>::creatTree(T flag) {\n\tseqQueue<Node *>que;\n\tNode * tmp;\n\tT x, ldata, rdata;\n\n\tcout << \"输入根节点: \";\n\tcin >> x;\n\troot = new Node(x);\n\tque.enQueue(root);\n\n\twhile (!que.isEmpty()) {\n\t\ttmp = que.deQueue();\n\t\tcout << \"请输入 \" << tmp->data\n\t\t\t<< \" 的两个儿子(\" << flag << \"表示空结点): \";\n\t\tcin >> ldata >> rdata;\n\n\t\tif (ldata != flag) { que.enQueue(tmp->left = new Node(ldata)); }\n\t\tif (rdata != flag) { que.enQueue(tmp->right = new Node(rdata)); }\n\t\tcout << \"Create Completed!\\n\";\n\t}\n}\n\ntemplate<class T>//备注哦：只需要在new Node() 这个部位使用V[i]就可以把值传入进去哦~\nvoid BinaryTree<T>::creatTreeOUT(int L[], int R[], int P[], int n, T flag) {\n\tseqQueue<Node *>que;\n\tNode * tmp;\n\tint ldata, rdata;\n\tint i = 1;\n\tfor (; i <= n; ++i) { if (P[i] == 0) { cout << \"第\" << i << \"个元素是root\"; break; } }\n\n\troot = new Node(i);\n\tque.enQueue(root);\n\n\twhile (!que.isEmpty()) {\n\t\ttmp = que.deQueue();\n\t\tcout << tmp->data\n\t\t\t<< \" 的两个儿子(\" << flag << \"表示空结点): \";\n\t\tint i = tmp->data;\n\t\tldata = L[i]; cout << \"ldata\" << ldata << '\\t';\n\t\trdata = R[i]; cout << \"rdata\" << rdata << endl;\n\n\n\t\tif (ldata != flag) { que.enQueue(tmp->left = new Node(ldata)); }\n\t\tif (rdata != flag) { que.enQueue(tmp->right = new Node(rdata)); }\n\t\tcout << \"Create Completed!\\n\";\n\t}\n}\n\ntemplate<class T>\nint BinaryTree<T>::countNotLeaves()const {\n\tint count = 0;\n\tlinkStack<Node *>s;\n\tNode *current;\n\ts.push(root);\n\n\twhile (!s.isEmpty()) {\n\t\tcurrent = s.pop();\n\t\tif (current->right != NULL) { s.push(current->right); }\n\t\tif (current->left != NULL) { s.push(current->left); }\n\t\tif (current->left != NULL or current->right != NULL)count++;\n\t}\n\treturn count;\n}\n\n\nint main() {\n\tBinaryTree<char> tree, tree1('M'), tree2;\n\ttree.creatTree('@');\n\n\tcout << \"高度为: \" << tree.height() << endl;\n\tcout << \"规模为: \" << tree.size() << endl;\n\ttree.preOrderNR();\n\ttree.midOrderNR();\n\ttree.postOrderNR();\n\n\tcout << '\\n';\n\ttree.preOrder();\n\ttree.midOrder();\n\ttree.postOrder();\n\ttree.levelOrder();\n\n\ttree2.makeTree('Y', tree, tree1);\n\tcout << endl;\n\tcout << \"高度为: \" << tree2.height() << endl;\n\tcout << \"规模为: \" << tree2.size() << endl;\n\ttree2.preOrder();\n\ttree2.midOrder();\n\ttree2.postOrder();\n\n/*  BinaryTree<int> treeT;\n\tint n;\n\tcin >> n;\n\tint *L = new int[n + 1];\n\tint *R = new int[n + 1];\n\tint *P = new int[n + 1]；\n\n\n\tint r, s;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tcin >> r >> s;\n\t\tL[i] = r;\n\t\tif (r != 0) { P[r] = i; }\n\t\tR[i] = s;\n\t\tif (s != 0) { P[s] = i; }\n\t}\n\n\tfor (int j = 1; j <= n; ++j) { cout << L[j]; }cout << endl;\n\tfor (int j = 1; j <= n; ++j) { cout << R[j]; }cout << endl;\n\tfor (int j = 1; j <= n; ++j) { cout << P[j]; }cout << endl;\n\tfor(int i = 1; i <= n; ++i) {\n\t\tP[i] = 0;\n\t}\n\n\ttreeT.creatTreeOUT(L, R, P, n, 0);\n\ttreeT.preOrder();\n\ttreeT.midOrder();\n\ttreeT.postOrder();\n\ttreeT.levelOrder();\n\tcout << endl;\n\tcout << \"高度为: \" << treeT.height() << endl;\n\tcout << \"非叶节点的个数: \"<< treeT.countNotLeaves() << endl;\n\n\t判断除去最后一层是不是完全二叉树\n\tint op;\n\tcout << log(treeT.countNotLeaves()) << endl;\n\tcout << log(2) << endl;\n\top = log(treeT.countNotLeaves()) / log(2);\n\tcout << op << endl;\n\tcout << treeT.height() - 1 << endl;\n\tcout << ((treeT.height() - 1 == op+1) ? 'Y' : 'N');\n*/\n\n\tsystem(\"pause\");\n\treturn 0;\n}\n\n\n\n\n```\n\n## 二叉查找树\n\n```c++\n#include<iostream>\nusing namespace std;\n//二叉查找树的插入、删除和查找都是通过递归实现的，而这三个公有函数的参数表中并不需要包含递归参数。为此，对于每个公有的成员函数都定义了一个对应的带有递归参数的私有的成员函数 \n\ntemplate <class Type>\nclass BinarySearchTree {\nprivate:\n\tstruct BinaryNode\n\t{\n\t\tType data;\n\t\tBinaryNode *left;\n\t\tBinaryNode *right;\n\t\tBinaryNode() :left(NULL), right(NULL) {}\n\t\tBinaryNode(const Type & thedata, BinaryNode *lt = NULL, BinaryNode *rt = NULL) : data(thedata), left(lt), right(rt) {}\n\t\t~BinaryNode() {}\n\t};\n\tBinaryNode *root;\npublic:\n\tBinarySearchTree(BinaryNode *t = NULL) { root = t; }\n\n\t~BinarySearchTree() { clear(); };\n\tbool find(const Type & x) const;\n\tvoid insert(const Type & x);\n\tvoid remove(const Type & x);\n\tint size() { return size(root); }\n\tint height() { return height(root); }\n\tvoid midOrder()const {\n\t\tif (root == NULL) { cout << endl; }\n\t\telse if (root != NULL) { cout << \"从小到大遍历: \"; midOrder(root); }\n\t}\n\n\tvoid clear() {\n\t\tif (root != NULL) { clear(root); }\n\t\troot = NULL;\n\t}\n\nprivate:\n\tint height(BinaryNode *t)const;\n\tint size(BinaryNode *t)const;\n\tvoid clear(BinaryNode *t);\n\tvoid midOrder(BinaryNode *t)const;\n\tvoid insert(const Type & x, BinaryNode * & t);\n\tvoid remove(const Type & x, BinaryNode * & t);\n\tbool find(const Type & x, BinaryNode *t) const;\n};\n\ntemplate<class Type>\nvoid BinarySearchTree<Type>::clear(BinaryNode *t) {\n\tif (t->left != NULL) { clear(t->left); }\n\tif (t->right != NULL) { clear(t->right); }\n\tdelete t;\n}\n\ntemplate <class Type>\nbool BinarySearchTree<Type>::find(const Type &x)const {\n\treturn find(x, root);\n}\n\ntemplate <class Type>\nbool BinarySearchTree<Type>::find(const Type & x, BinaryNode *t) const {\n\tif (t == NULL)return false;\n\telse if (x < t->data) { return find(x, t->left); }\n\telse if (x > t->data) { return find(x, t->right); }\n\telse { return true; }\n}\n\n\ntemplate <class Type>\nvoid BinarySearchTree<Type>::insert(const Type & x) {\n\tinsert(x, root);\n}\n\ntemplate <class Type>\nvoid BinarySearchTree<Type>::insert(const Type & x, BinaryNode *&t) {\n\tif (t == NULL) { t = new BinaryNode(x, NULL, NULL); }\n\telse if (x == t->data) { return; }\n\telse if (x < t->data) { insert(x, t->left); }\n\telse if (t->data < x) { insert(x, t->right); }\n}\n\ntemplate <class Type>\nvoid BinarySearchTree<Type>::remove(const Type & x) {\n\tremove(x, root);\n}\n\ntemplate <class Type>\nvoid BinarySearchTree<Type>::remove(const Type & x, BinaryNode * & t) {\n\tif (t == NULL) { return; }\n\tif (x < t->data) { remove(x, t->left); }\n\telse if (t->data < x) { remove(x, t->right); }\n\telse if (t->left != NULL && t->right != NULL) {\n\t\tBinaryNode *tmp = t->right;\n\t\twhile (tmp->left != NULL) { tmp = tmp->left; }//右子树上找最小\n\t\tt->data = tmp->data;//把替身数据复制到被删节点\n\t\tremove(t->data, t->right);//在右子树上删除原来的替身数据节点\n\t}\n\telse {//进入这层判断的时候就是在删除有一个孩子的父节点\n\t\tBinaryNode *oldNode = t;\n\t\tt = (t->left != NULL) ? t->left : t->right;//将原来的替身数据节点的子节点上移\n\t\tdelete oldNode;//释放原替身节点的空间\n\t}\n}\n\ntemplate<class Type>\nvoid BinarySearchTree<Type>::midOrder(BinaryNode *t)const {\n\tif (t != NULL) {\n\t\tmidOrder(t->left);\n\t\tcout << t->data << ' ';\n\t\tmidOrder(t->right);\n\t}\n}\n\ntemplate<class T>\nint BinarySearchTree<T>::height(BinaryNode *t)const {\n\tif (t == NULL)return 0;\n\n\treturn 1 + max(height(t->left), height(t->right));\n}//递归！ 1＋max（左子树高度，右子树高度）    && 其实是因为有了‘1+’所以就会有变化\n\ntemplate<class T>\nint BinarySearchTree<T>::size(BinaryNode *t)const {\n\tif (t == NULL)return 0;\n\n\treturn size(t->left) + size(t->right) + 1;//注意这里的这个分号\n}//递归！ 左子树的规模 + 右子树的规模 + 1（根）\n\n\n\nint main() {\n\tint a[] = { 10, 8, 6, 21, 87, 56, 4, 0 , 11, 3, 22, 7, 5, 34, 1, 2, 9 };\n\tBinarySearchTree<int>  tree;\n\tfor (int i = 0; i < 17; ++i) tree.insert(a[i]);\n\tcout << \"find 2 is \" << (tree.find(2) ? \"true\" : \"false\") << endl; tree.midOrder();\n\ttree.remove(2);\n\tcout << \"\\n\\nafter delete 2, find 2 is \" << (tree.find(2) ? \"true\" : \"false\") << endl; tree.midOrder();\n\tcout << \"\\n\\nfind 3 is \" << (tree.find(3) ? \"true\" : \"false\") << endl;\n\ttree.remove(3);\n\tcout << \"\\n\\nafter delete 3, find 3 is \" << (tree.find(3) ? \"true\" : \"false\") << endl; tree.midOrder();\n\tcout << \"\\n\\nfind 21 is \" << (tree.find(21) ? \"true\" : \"false\") << endl; tree.midOrder();\n\ttree.remove(21);\n\tcout << \"\\n\\nafter delete 21, find 21 is \" << (tree.find(21) ? \"true\" : \"false\") << endl; tree.midOrder();\n\n\ttree.clear();\n\tcout << endl << \"\\n\\nafter makeEmpty \";\n\tfor (int i = 0; i < 17; ++i) tree.insert(a[i]); tree.midOrder();\n\n\tsystem(\"pause\");\n\treturn 0;\n}\n\n\n```\n\n## 树_祖先大兄弟树\n\n```c++\n#include<iostream>\nusing namespace std;\n\ntemplate<class elemType>\nclass queue\n{\npublic:\n\tvirtual bool isEmpty() = 0;\n\tvirtual void enQueue(const elemType &x) = 0;\n\tvirtual elemType deQueue() = 0;\n\tvirtual elemType getHead() = 0;\n\tvirtual ~queue() {};\n};\n\ntemplate<class elemType>\nclass seqQueue :public queue<elemType>\n{\nprivate:\n\telemType *elem;\n\tint maxSize;\n\tint front, rear;\n\n\tvoid doubleSpace();\npublic:\n\tseqQueue(int size = 10) {\n\t\telem = new elemType[size];\n\t\tmaxSize = size;\n\t\tfront = rear = 0;\n\t}\n\t~seqQueue() { delete[]elem; }\n\tbool isEmpty() { return rear == front; }\n\tvoid enQueue(const elemType &x);\n\telemType deQueue();\n\telemType getHead() { return elem[(front + 1) % maxSize]; }\n};\n\ntemplate<class elemType>\nvoid seqQueue<elemType>::doubleSpace() {\n\telemType *tmp = elem;\n\telem = new elemType[2 * maxSize];\n\tfor (int i = 1; i < maxSize; ++i) {//Attention i从1开始\n\t\telem[i] = tmp[(front + i) % maxSize];//由于队列不需要考虑front元素在新表中的位置，所以只需要把所有的元素拷贝过去就好\n\t}\n\n\tfront = 0; rear = maxSize - 1;\n\tmaxSize *= 2;\n\tdelete tmp;\n\n}\n\ntemplate<class elemType>\nvoid seqQueue<elemType>::enQueue(const elemType &x) {\n\tif ((rear + 1) % maxSize == front) { doubleSpace(); }\n\trear = (rear + 1) % maxSize;\n\telem[rear] = x;\n}\n\ntemplate<class elemType>\nelemType seqQueue<elemType>::deQueue() {\n\tfront = (front + 1) % maxSize;//这个元素出队列了，front指向实际存储元素的前一个位置（作为标志）\n\treturn elem[front];\n}\n\ntemplate<class T>\nclass FNTree {\nprivate:\n\tstruct Node {\n\t\tNode *firstson, *nextSibling;\n\t\tT data; T linedata;\n\t\tNode() :firstson(NULL), nextSibling(NULL) {};\n\t\tNode(T line, T item = 0, Node *F = NULL, Node *N = NULL) :linedata(line), data(item), firstson(F), nextSibling(N) {}\n\t\t~Node() {}\n\t};\n\n\tNode *root;\n\npublic:\n\tFNTree() :root(NULL) {}\n\tFNTree(const T &line) { root = new Node(line); }\n\tFNTree(Node *p) { root = p; }\n\t~FNTree() { clear(root); }\n\n\tvoid preOrder()const {\n\t\tif (root != NULL) {\n//cout << \"\\n前序遍历: \";\n\t\t\tpreOrder(root);\n\t\t}\n\t};\n\tvoid postOrder()const {\n\t\tif (root != NULL) {\n//cout << \"\\n后序遍历: \";\n\t\t\tpostOrder(root);\n\t\t}\n\t}\n\tvoid levelOrder()const;\n\tvoid createTree(int F[], int N[], int P[], int B[], int V[], int L[], int n, T flag);\nprivate:\n\tvoid clear(Node *t);\n\tvoid preOrder(Node *t)const;//孩子兄弟表示法中：前序遍历和二叉树的前序遍历相同\n\tvoid postOrder(Node *t)const;//孩子兄弟表示法中：后序遍历和二叉树的中序遍历相同\n\n};\n\ntemplate<class T>\nvoid FNTree<T>::clear(Node *t) {\n\tif (t->firstson != NULL) { clear(t->firstson); }\n\tif (t->nextSibling != NULL) { clear(t->nextSibling); }\n\tdelete t;\n}\n\ntemplate<class T>\nvoid FNTree<T>::preOrder(Node *t)const {\n\tif (t != NULL) {\n\t\tcout << t->data << ' ';\n\t\tpreOrder(t->firstson);\n\t\tpreOrder(t->nextSibling);\n\t}\n}\n\ntemplate<class T>\nvoid FNTree<T>::postOrder(Node *t)const {\n\tif (t != NULL) {\n\t\tpostOrder(t->firstson);\n\t\tcout << t->data << ' ';\n\t\tpostOrder(t->nextSibling);\n\t}//二叉树中：中序遍历形式的递归\n}\n\ntemplate<class T>\nvoid FNTree<T>::levelOrder()const {\n\t//cout << \"\\n层次遍历: \";\n\tseqQueue<Node *>s;\n\tNode *p;\n\tif (!root)return;\n\tp = root; s.enQueue(p);\n\twhile (p->nextSibling) { p = p->nextSibling; s.enQueue(p); }\n\twhile (!s.isEmpty()) {\n\t\tp = s.deQueue(); cout << p->data << ' ';\n\t\tif (p->firstson) {\n\t\t\tp = p->firstson; s.enQueue(p);\n\t\t\twhile (p->nextSibling) { p = p->nextSibling; s.enQueue(p); }\n\t\t}\n\t}\n}\n\ntemplate<class T>\nvoid FNTree<T>::createTree(int F[], int N[], int P[], int B[], int V[], int L[], int n, T flag) {\n\tseqQueue<Node *>que;\n\tNode * tmp;\n\tint fData, nData;\n\tint i = 1;\n\tfor (; i <= n; ++i) { if (P[i] == 0 && B[i] == 0) { break; } }\n\n\troot = new Node(L[i], V[i]);\n\tque.enQueue(root);\n\n\twhile (!que.isEmpty()) {\n\t\ttmp = que.deQueue();\n\n\t\tint i = tmp->linedata;\n\t\tfData = F[i];\n\t\tnData = N[i];\n\n\n\t\tif (fData != flag) { que.enQueue(tmp->firstson = new Node(fData, V[fData])); }\n\t\tif (nData != flag) { que.enQueue(tmp->nextSibling = new Node(nData, V[nData])); }\n\t}\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tint *F = new int[n + 1];\n\tint *N = new int[n + 1];\n\tint *V = new int[n + 1];\n\tint *P = new int[n + 1]; for (int k = 0; k <= n; k++) { P[k] = 0; }\n\tint *B = new int[n + 1]; for (int k = 0; k <= n; k++) { B[k] = 0; }\n\tint *L = new int[n + 1];\n\n\n\tint r, s, t;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tcin >> r >> s >> t;\n\t\tF[i] = r; if (r != 0) { P[r] = i; }\n\t\tN[i] = s; if (s != 0) { B[s] = i; }\n\t\tV[i] = t; L[i] = i;\n\t}\n\n\tFNTree<int> test;\n\ttest.createTree(F, N, P, B, V, L, n, 0);\n\ttest.preOrder(); cout << endl;\n\ttest.postOrder(); cout << endl;\n\ttest.levelOrder();\n\n\n\tdelete[]F; delete[]N; delete[]V; delete[]P; delete[]B; delete[]L;\n\t//system(\"pause\");\n\treturn 0;\n}\n\n\n\n```\n\n","tags":["数据结构"],"categories":["算法"]},{"title":"数据结构-列表","url":"/ds-list/","content":"\n注明：瀚文代码版本都为 Visual Studio 版本\n\n## 线性列表\n\n```c++\n#include<iostream>\nusing namespace std;\n\ntemplate<class elemType>\nclass list {\npublic:\n\tvirtual void clear() = 0;\n\tvirtual int length()const = 0;\n\tvirtual void insert(int i, const elemType &x) = 0;\n\tvirtual void remove(int i) = 0;\n\tvirtual int search(const elemType &x)const = 0;\n\tvirtual elemType visit(int i)const = 0;\n\tvirtual void traverse()const = 0;\n\tvirtual ~list() {};\n};\n\ntemplate<class elemType>\nclass seqList : public list<elemType> {\nprivate:\n\telemType *data;\n\tint currentLength;\n\tint maxSize;\n\tvoid doublespace();\npublic:\n\tseqList(int initSize = 10001);\n\t~seqList();\n\tvoid clear();\n\tint length()const;\n\tvoid insert(int i, const elemType &x);\n\tvoid remove(int i);\n\tint search(const elemType &x)const;\n\telemType visit(int i)const;\n\tvoid traverse()const;\n\n};\n\ntemplate<class elemType>\nseqList<elemType>::seqList(int initSize) { data = new elemType[initSize]; currentLength = 0; maxSize = initSize; }\n\ntemplate<class elemType>\nseqList<elemType>::~seqList() { delete[] data; }\n\ntemplate<class elemType>\nvoid seqList<elemType>::clear() { currentLength = 0; }\n\ntemplate<class elemType>\nint seqList<elemType>::length()const { return currentLength; }\n\ntemplate<class elemType>\nvoid seqList<elemType>::insert(int i, const elemType &x) {\n\tif (currentLength == maxSize)doublespace();\n\n\tfor (int j = currentLength; j > i; j--) { data[j] = data[j - 1]; }\n\n\tdata[i] = x;\n\t++currentLength;\n}\n\ntemplate<class elemType>\nvoid seqList<elemType>::remove(int i) {\n\tfor (int j = i; j < currentLength - 1; j++) { data[j] = data[j + 1]; }\n\n\t--currentLength;\n}\n\ntemplate<class elemType>\nint seqList<elemType>::search(const elemType &x) const {\n\tfor (int i = 0; i < currentLength && data[i] != x; ++i)\n\t\tif (i == currentLength)return -1;\n\t\telse return i;\n}\n\ntemplate<class elemType>\nelemType seqList<elemType>::visit(int i) const {\n\tif (i >= currentLength)cout << \"OutOfBound!\" << endl;\n\n\treturn data[i];\n}\n\ntemplate<class elemType>\nvoid seqList<elemType>::traverse() const {\n\tfor (int i = 0; i < currentLength; ++i) { cout << data[i] << ' '; }\n\n\tcout << endl;\n}\n\ntemplate<class elemType>\nvoid seqList<elemType>::doublespace() {\n\telemType *tmp;\n\ttmp = data;\n\tdata = new elemType[2 * maxSize];\n\n\tfor (int i = 0; i < currentLength; ++i) { data[i] = tmp[i]; }\n\n\tmaxSize *= 2;\n}\nint main() {\n\tseqList<int> s(100);\n\n\tint n;\n\tcin >> n;\n\n\tfor (int i = 0; i < n; ++i) {\n\t\ts.insert(i, i*i);\n\t}\n\n\ts.traverse();\n\n\tsystem(\"pause\");\n\treturn 0;\n}\n\n```\n\n## 链式列表\n\n```c++\n#include<iostream>\nusing namespace std;\n\ntemplate<class elemType>\nclass list {\npublic:\n\tvirtual void clear() = 0;\n\tvirtual int length()const = 0;\n\tvirtual void insert(int i, const elemType &x) = 0;\n\tvirtual void remove(int i) = 0;\n\tvirtual int search(const elemType &x)const = 0;\n\tvirtual elemType visit(int i)const = 0;\n\tvirtual void traverse()const = 0;\n\tvirtual ~list() {};\n};\n\ntemplate<class elemType>\nclass linkList : public list<elemType>\n{\n\nprivate:\n\tstruct node {\n\t\telemType data;\n\t\tnode *next;\n\n\t\tnode(const elemType &x, node*p = NULL) {\n\t\t\tdata = x;\n\t\t\tnext = p;\n\t\t}\n\n\t\tnode() : next(NULL) {}\n\t\t~node() {}\n\t};\n\n\tnode *head;\n\n\n\npublic:\n\tlinkList();\n\t~linkList() {\n\t\tclear();\n\t\tdelete head;\n\t}\n\n\tvoid clear() {};\n\tint length()const;\n\tint search(const elemType &x)const;\n\tvoid insert(int i, const elemType &x);\n\telemType visit(int i)const;\n\tvoid remove(int i);\n\tvoid traverse()const;\n\n};\n\ntemplate<class elemType>\nlinkList<elemType>::linkList() {\n\thead = new node();\n}\n\ntemplate<class elemType>\nint linkList<elemType>::length()const {\n\tint len = 0;\n\tnode *p = head->next;\n\n\twhile (p != NULL) {\n\t\tlen++;\n\t\tp = p->next;\n\t}\n\n\treturn len;\n}\n\ntemplate<class elemType>\nint linkList<elemType>::search(const elemType &x)const {\n\tint num = 0;\n\tnode *p = head->next;\n\n\twhile (p != NULL && p->data != x) { ++num; p = p->next; }\n\n\tif (p == NULL)num = -1;\n\n\treturn num;\n}\n\ntemplate<class elemType>\nvoid linkList<elemType>::insert(int i, elemType const &x) {\n\tif (i < 0)return;\n\tnode *tmp, *p = head;\n\tfor (int j = 0; p&&j < i; ++j) { p = p->next; }\n\tif (!p)return;\n\ttmp = new node(x, p->next);\n\tp->next = tmp;\n}\n\ntemplate<class elemType>\nvoid linkList < elemType>::remove(int i) {\n\tif (i < 0)return;\n\tnode *tmp, *p = head;\n\tfor (int j = 0; p&&j < i; ++j)p = p->next;\n\tif (!p || !p->next)return;\n\ttmp = p->next;\n\tp->next = tmp->next;\n\tdelete tmp;\n}\n\ntemplate<class elemType>\nelemType linkList<elemType>::visit(int i) const {\n\tnode  *p = head;\n\tfor (int j = 0; p&&j < i; ++j) { p = p->next; }\n\treturn p->data;\n}\n\ntemplate<class elemType>\nvoid linkList<elemType>::traverse()const {\n\tnode *p = head->next;\n\twhile (p) {\n\t\tcout << p->data << ' ';\n\t\tp = p->next;\n\t}\n}\nint main() {\n\tcout << \"Hello world!\" << endl;\n\tlinkList<char> s;\n\n\tsystem(\"pause\");\n\treturn 0;\n}\n```\n\n","tags":["数据结构"],"categories":["算法"]},{"title":"数据结构-哈希","url":"/ds-hashTable/","content":"\n注明：瀚文代码版本都为 Visual Studio 版本\n\n## 哈希-闭散列表类\n\n```c++\n#include<iostream>\nusing namespace std;\n\ntemplate <class Type>\nclass hashTable\n{\npublic:\n\tvirtual bool find(const Type &x) const = 0;\n\tvirtual bool insert(const Type &x) = 0;\n\tvirtual bool remove(const Type &x) = 0;\nprotected:\n\tint(*key)(const Type &x);\n\tstatic int defaultKey(const int &k) { return k; }\n};\n\ntemplate <class Type>\nclass closeHashTable :public hashTable<Type>\n{\nprivate:\n\tstruct node {\n\t\tType data;\n\t\tint state;  //0 -- empty   1 -- active   2 -- deleted\n\t\tnode() { state = 0; }\n\t};\n\tnode *array;\n\tint  size;\npublic:\n\tcloseHashTable(int length = 101,\n\t\tint(*f)(const Type &x) = defaultKey);\n\t~closeHashTable() { delete[] array; }\n\tbool find(const Type &x) const;\n\tbool insert(const Type &x);\n\tbool remove(const Type &x);\n\tvoid rehash();\n};\n\ntemplate <class Type>\ncloseHashTable<Type>::closeHashTable\n(int length, int(*f)(const Type  &x)) {\n\tsize = length;\n\tarray = new node[size];\n\tkey = f;\n}\n\ntemplate <class Type>\nbool closeHashTable<Type>::insert(const Type &x) {\n\tint initPos, pos;\n\tinitPos = pos = key(x) % size;\n\tdo {\n\t\tif (array[pos].state != 1) {\n\t\t\tarray[pos].data = x;\n\t\t\tarray[pos].state = 1;\n\t\t\treturn true;\n\t\t}\n\t\tif (array[pos].state == 1 && key(array[pos].data) == key(x))\n\t\t\treturn true;\n\t\tpos = (pos + 1) % size;\n\t} while (pos != initPos);\n\treturn false;\n}\n\ntemplate <class Type>\nbool closeHashTable<Type>::remove(const Type &x) {\n\tint initPos, pos;\n\tinitPos = pos = key(x) % size;\n\tdo {\n\t\tif (array[pos].state == 0) return false;\n\t\tif (array[pos].state == 1 && key(array[pos].data) == key(x)) {\n\t\t\tarray[pos].state = 2; return true;\n\t\t}\n\t\tpos = (pos + 1) % size;\n\t} while (pos != initPos);\n\treturn false;\n}\n\ntemplate <class Type>\nbool closeHashTable<Type>::find(const Type &x) const {\n\tint initPos, pos;\n\tinitPos = pos = key(x) % size;\n\tdo {\n\t\tif (array[pos].state == 0) return false;\n\t\tif (array[pos].state == 1 && key(array[pos].data) == key(x))\n\t\t\treturn true;\n\t\tpos = (pos + 1) % size;\n\t} while (pos != initPos);\n\treturn false;\n}\n\ntemplate <class Type>\nvoid closeHashTable<Type>::rehash() {\n\tnode *tmp = array;\n\tarray = new node[size];\n\tfor (int i = 0; i < size; ++i) {\n\t\tif (tmp[i].state == 1)\n\t\t\tinsert(tmp[i].data);\n\t}\n\tdelete[] tmp;\n}\n\n```\n\n## 哈希-开散列表类\n\n```c++\n#include<iostream>\nusing namespace std;\n\ntemplate <class Type>\nclass hashTable\n{\npublic:\n\tvirtual bool find(const Type &x) const = 0;\n\tvirtual bool insert(const Type &x) = 0;\n\tvirtual bool remove(const Type &x) = 0;\nprotected:\n\tint(*key)(const Type &x);\n\tstatic int defaultKey(const int &k) { return k; }\n};\n\ntemplate <class Type>\nclass openHashTable :public hashTable<Type>\n{\nprivate:\n\tstruct node {\n\t\tType data;\n\t\tstruct node *next;\n\t\tnode(const Type &d) { data = d; next = NULL; }\n\t\tnode() { next = NULL; }\n\t};\n\tnode **array;\n\tint  size;\npublic:\n\topenHashTable(int length = 101, int(*f)(const Type &x) = defaultKey);\n\t~openHashTable();\n\tbool find(const Type &x) const;\n\tbool insert(const Type &x);\n\tbool remove(const Type &x);\n};\n\ntemplate <class Type>\nopenHashTable<Type>::openHashTable(int length, int(*f)(const Type  &x)) {\n\tsize = length;\n\tarray = new node*[size];\n\tkey = f;\n\tfor (int i = 0; i < size; ++i) array[i] = new node;\n}\n\ntemplate <class Type>\nopenHashTable<Type>::~openHashTable() {\n\tnode *p, *q;\n\tfor (int i = 0; i < size; ++i) {\n\t\tp = array[i];\n\t\tdo {\n\t\t\tq = p->next;  delete p;\n\t\t\tp = q;\n\t\t} while (p != NULL);\n\t}\n\tdelete[] array;\n}\n\ntemplate <class Type>\nbool openHashTable<Type>::insert(const Type &x) {\n\tint pos;\n\tnode *p;\n\tpos = key(x) % size;\n\tp = array[pos]->next;\n\twhile (p != NULL && !(p->data == x)) p = p->next;\n\tif (p == NULL) {\n\t\tp = new node(x);\n\t\tp->next = array[pos]->next;\n\t\tarray[pos]->next = p;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\ntemplate <class Type>\nbool openHashTable<Type>::remove(const Type &x) {\n\tint  pos;\n\tnode *p, *q;\n\tpos = key(x) % size;\n\tp = array[pos];\n\twhile (p->next != NULL && !(p->next->data == x))\n\t\tp = p->next;\n\tif (p->next == NULL) return false;\n\telse {\n\t\tq = p->next;\n\t\tp->next = q->next;\n\t\tdelete q;\n\t\treturn true;\n\t}\n}\n\ntemplate <class Type>\nbool openHashTable<Type>::find(const Type &x) const {\n\tint pos;\n\tnode *p;\n\tpos = key(x) % size;\n\tp = array[pos];\n\twhile (p->next != NULL && !(p->next->data == x))\n\t\tp = p->next;\n\tif (p->next != NULL) return true;\n\telse return false;\n}\n\n```\n\n","tags":["数据结构"],"categories":["算法"]},{"title":"数据结构-队列","url":"/ds-queue/","content":"\n注明：瀚文代码版本都为 Visual Studio 版本\n\n## 队列_循环线性队列\n\n```c++\n#include<iostream>\nusing namespace std;\n\ntemplate<class elemType>\nclass queue\n{\npublic:\n\tvirtual bool isEmpty() = 0;\n\tvirtual void enQueue(const elemType &x) = 0;\n\tvirtual elemType deQueue() = 0;\n\tvirtual elemType getHead() = 0;\n\tvirtual ~queue() {};\n};\n\ntemplate<class elemType>\nclass seqQueue :public queue<elemType>\n{\nprivate:\n\telemType *elem;\n\tint maxSize;\n\tint front, rear;\n\n\tvoid doubleSpace();\npublic:\n\tseqQueue(int size = 10) {\n\t\telem = new elemType[size];\n\t\tmaxSize = size;\n\t\tfront = rear = 0;\n\t}\n\t~seqQueue() { delete[]elem; }\n\tbool isEmpty() { return rear == front; }\n\tvoid enQueue(const elemType &x);\n\telemType deQueue();\n\telemType getHead() { return elem[(front + 1) % maxSize]; }\n};\n\ntemplate<class elemType>\nvoid seqQueue<elemType>::doubleSpace() {\n\telemType *tmp = elem;\n\telem = new elemType[2 * maxSize];\n\tfor (int i = 1; i < maxSize; ++i) {//Attention i从1开始\n\t\telem[i] = tmp[(front + i) % maxSize];//由于队列不需要考虑front元素在新表中的位置，所以只需要把所有的元素拷贝过去就好\n\t}\n\n\tfront = 0; rear = maxSize - 1;\n\tmaxSize *= 2;\n\tdelete tmp;\n\n}\n\ntemplate<class elemType>\nvoid seqQueue<elemType>::enQueue(const elemType &x) {\n\tif ((rear + 1) % maxSize == front) { doubleSpace(); }\n\trear = (rear + 1) % maxSize;\n\telem[rear] = x;\n}\n\ntemplate<class elemType>\nelemType seqQueue<elemType>::deQueue() {\n\tfront = (front + 1) % maxSize;//这个元素出队列了，front指向实际存储元素的前一个位置（作为标志）\n\treturn elem[front];\n}\n\nint main() {\n\tseqQueue<char> s(100);\n\n\twhile (cin) {\n\t\tchar store;\n\t\tcin >> store;\n\t\tif (store == '*')break;\n\n\t\tcout << store << ' ';\n\t\ts.enQueue(store);\n\n\t}\n\n\tcout << endl << \"Input Over !\" << endl;\n\tcout << \"The head is : \" << s.getHead() << endl;\n\n\tcout << \"Please input how many numbers you want to delete : \" << endl;\n\tint count;\n\tcin >> count;\n\twhile (count > 0) { s.deQueue(); count--; }\n\tcout << \"The head is : \" << s.getHead() << endl;\n\n\tsystem(\"pause\");\n\treturn 0;\n}\n\n```\n\n","tags":["数据结构"],"categories":["算法"]},{"title":"docker-compose","url":"/docker-compose/","content":"\n## docker-compose的使用过程\n\n在接下来的使用中都是docker-compose。\n\ndocker-compose可以直接进行对我的image的配置，生成我的container文件。\n\n我的docker-compose.yml文件中：\n\n```\n****\n```\n\n##### **操作**\n\n```python\ndocker-compose up\n\ndocker container ls #发现container已经运行了\n\ndocker-compose down \n\ndocker container ls #container已经结束了\n```\n\n##### **Tips**：\n\n在web的页面如果ctrl+c 是中止了web**\n\n```python\nStopping web1   ... done\nStopping web2   ... done\nStopping web3   ... done\n```\n\n实际需要 docker-compose down 来完全清除container的擦操作\n\n```python\nRemoving web1 ... done\nRemoving web2 ... done\nRemoving web3 ... done\n\nRemoving network compose_dev\nRemoving network compose_pro\n```\n\n------\n\n##### 在另一个终端里面使用命令行工具来操作\n\n```python\ndocker-compose exec web2 /bin/bash \n#需要验证一下docker-compose还是用docker\ndocker exec -it david990917-python /bin/bash\n\nexit\n```\n\n相当于就是web2是一个docker，docker-compose批量打开了一堆service\n\n------\n\n##### volumes——连接本地和docker里面的文件\n\n> 补充：关于linux下/srv、/var和/tmp的职责区分\n> https://www.cnblogs.com/silentdoer/p/8680762.html\n\n------\n\n##### tty:true\n\n没有的话就是 exited with code 0 \n\n​\t\t这个情况有 restart:always 就总会重启\n\n","tags":["docker"],"categories":["技术"]},{"title":"环境配置","url":"/ryg-environment/","content":"\n**今天的开始主要是进行docker环境的配置。**\n\n1. 首先是重新安装Ubuntu18，由于Ubuntu和NVIDIA的显卡有冲突，所以选择的方式是禁用N卡。\n\n   使用U盘安装\n\n   > 在10秒内使用↑↓键选中**“安装Ubuntu”**，然后点击**“e”**键进入编辑模式，在倒数第二行有一句**linux**开头的话，在其最后\n   >\n   > ```\n   > quiet splash\n   > ```\n   >\n   > 添加**nomodeset**\n   >\n   > ```\n   > quiet splash nomodeset\n   > ```\n   >\n   > 然后按**F10**保存并运行 \n\n   只有这种方式才能正常重启（未经过这样的操作的，就会点击‘立即重启’没有反应。\n\n   重启的时候，引导同样要加入这个 nomodeset\n\n   **在grub的引导中，修改默认引导（添加nomodeset）**\n\n2. 安装docker\n\n   安装分为docker本体和docker-compose\n\n   docker直接安装，docker-compose使用官网的方法很慢（curl），最后使用直接去github下载，然后云盘拷贝的方式导入。\n\n**Another Days**\n\n3. 安装Django\n\n   安装\n\n   ```python\n   pip install django\n   ```\n\n   验证\n\n   ```python\n   python\n   import django\n   print(django.get_version())\n   ```\n\n   环境 pycharm\n   http://www.jetbrains.com/help/pycharm/using-docker-compose-as-a-remote-interpreter.html\n   官网有配置的教程\n\n   > 但是我自己配置的时候会报错，我后来就没有使用PyCharm\n   >\n   > 使用port：9876  # 我自己设置的外端口\n   > \t报错\n   > \tio.netty.channel.AbstractChannel$AnnotatedConnectException: 拒绝连接: localhost/127.0.0.1:9876\n   > \n   > caused by: java.net.ConnectException: 拒绝连接\n   > \t不开docker-compose\n   > \tjava.nio.channels.ClosedChannelException\n\n4. 自己定制自己的docker container\n\n   详见我的另一篇文章。\n\n","tags":["环境","docker","Django"],"categories":["技术"]},{"title":"django","url":"/django-get-started/","content":"\n### [Django* 文档 | *Django* 文档 | *Django*](https://www.baidu.com/link?url=roh5AHOS6ywL1wmC1fK1J9hvoLBUaxbZd0fodKeyY8KGPGufzb44wo91U43StTDXQ5VRj9RgdRsdSYt680PX9a&wd=&eqid=fcba680e003167a2000000035d1cb82c)\n\n### [Django* 教程 | 菜鸟教程](https://www.baidu.com/link?url=seUzu-w-TEYsSLforsBdKfar4BOP171_fuAYHz8zX_KssuqcoNn40uEq1BGtC1_dwlaAL1P9O6L7r_gq87X83a&wd=&eqid=fcba680e003167a2000000035d1cb82c)\n\n------\n\n\n\n# 简约而不简单的Django新手图文教程\n\n## 一、Django简介\n\n　　百度百科：开放源代码的Web应用框架，由Python语言编写......\n\n　　重点：一个大而全的框架，啥都替你考虑好了。\n\n### 1. web框架介绍\n\n　　具体介绍Django之前，必须先介绍WEB框架等概念。\n\n　　web框架： 别人已经设定好的一个web网站模板，你学习它的规则，然后“填空”或“修改”成你自己需要的样子。\n\n　　一般web框架的架构是这样的：\n\n![img](django/948404-20160830212049246-1153317231.jpg)\n\n \n\n　　其它基于python的web框架，如tornado、flask、webpy都是在这个范围内进行增删裁剪的。例如tornado用的是自己的异步非阻塞“wsgi”，flask则只提供了最精简和基本的框架。Django则是直接使用了WSGI，并实现了大部分功能。\n\n### 2. MVC/MTV介绍\n\n　　**MVC百度百科**：全名Model View Controller，是模型(model)－视图(view)－控制器(controller)的缩写，一种软件设计典范，用一种业务逻辑、数据、界面显示分离的方法组织代码，将业务逻辑聚集到一个部件里面，在改进和个性化定制界面及用户交互的同时，不需要重新编写业务逻辑。\n\n　　**通俗解释**：一种文件的组织和管理形式！不要被缩写吓到了，这其实就是把不同类型的文件放到不同的目录下的一种方法，然后取了个高大上的名字。当然，它带来的好处有很多，比如前后端分离，松耦合等等，就不详细说明了。　　　　　　　\n\n　　模型(model)：定义数据库相关的内容，一般放在models.py文件中。\n\n　　视图(view)：定义HTML等静态网页文件相关，也就是那些html、css、js等前端的东西。\n\n　　控制器(controller)：定义业务逻辑相关，就是你的主要代码。　　\n\n　　**MTV**: 有些WEB框架觉得MVC的字面意思很别扭，就给它改了一下。view不再是HTML相关，而是主业务逻辑了，相当于控制器。html被放在Templates中，称作模板，于是MVC就变成了MTV。这其实就是一个文字游戏，和MVC本质上是一样的，换了个名字和叫法而已，换汤不换药。\n\n### 3.Django的MTV模型组织\n\n　　目录分开，就必须有机制将他们在内里进行耦合。在Django中，urls、orm、static、settings等起着重要的作用。一个典型的业务流程是如下图所示：\n\n![img](django/948404-20160903111840215-2065765780.jpg)\n\n \n\n那么我们学Django学的是什么？\n\n1. 目录结构规范\n\n2. urls路由方式\n\n3. settings配置\n\n4. ORM操作\n\n5. 模板渲染\n6. 其它\n\n \n\n## 二、Django项目实例\n\n### 1. 程序安装\n\n　　python3.5、pip3及pycharm专业版自行安装。\n\n#### （1）安装Django：\n\n　　这里只介绍较为简单的pip3命令安装方式。\n\n　　win+r，调出cmd，运行命令：pip3 install django，自动安装Pypi提供的最新版本。\n\n ![img](django/948404-20160830220421011-1546349728.png)\n\n安装完成后如下图所示：\n\n![img](django/948404-20160830220459902-323793479.png)\n\n#### （2）配置系统环境\n\n成功安装Django后，在下图中的路径可找到django-admin.exe文件，将它加入操作系统环境变量中。这样在以后的调用会比较方便。\n\n![img](django/948404-20160830220713996-1222542130.png)\n\n![img](django/948404-20160830220725527-2000635437.png)\n\n![img](django/948404-20160830220748652-139734374.png)\n\n运行：django-admin help，能看到下面的内容表示OK。\n\n![img](django/948404-20160830221035355-2009526835.png)\n\n###  2. 创建django项目\n\n　　在linux等命令行界面下，使用django提供的命令和vim也能进行项目开发。但是，这里推荐使用pycharm这个目前最好的python开发IDE\n\n，它功能强大，界面友好。（下面所有的操作都在pycharm中进行。）\n\n　　点击：file-->new project，出现下面的对话框。\n\n![img](django/948404-20160830221502371-1143625656.png)\n\n选择Django栏目，输入项目名称，这里采用国际惯例的mysite。选择python解释器版本，点击create创建。\n\nDjango将自动生成下面的目录结构：\n\n![img](django/948404-20160830221628136-832794323.png)\n\n与项目同名的目录中是配置文件，templates目录是html文件存放也就是MTV中的T。manage.py是django项目管理文件。\n\n![img](django/948404-20160830222155746-982749621.png)\n\n### 3. 创建APP\n\n　　在每个django项目中可以包含多个APP，相当于一个大型项目中的分系统、子模块、功能部件等等，相互之间比较独立，但也有联系。\n\n所有的APP共享项目资源。\n\n　　在pycharm下方的terminal终端中输入命令：\n\n　　python manage.py startapp cmdb\n\n　　这样就创建了一个叫做cmdb的APP，django自动生成“cmdb”文件夹。\n\n![img](django/948404-20160830222336449-1279532630.png)\n\n \n\n### 4. 编写路由\n\n　　路由都在urls文件里，它将浏览器输入的url映射到相应的业务处理逻辑。\n\n　　简单的urls编写方法如下图：\n\n![img](django/948404-20160830222854183-1076810264.png)\n\n### 5. 编写业务处理逻辑\n\n　　业务处理逻辑都在views.py文件里。\n\n![img](django/948404-20160830223018324-1725571647.png)\n\n　　通过上面两个步骤，我们将index这个url指向了views里的index（）函数，它接收用户请求，并返回一个“hello world”字符串。\n\n### 6. 运行web服务\n\n　　现在我们已经可以将web服务运行起来了。\n\n　　命令行的方式是：python manage.py runserver 127.0.0.1:8000\n\n　　但在pycharm中，你可以这么干：\n\n　　在上部工具栏中找到下面图示的图标。\n\n![img](django/948404-20160830223309683-1106014591.png)\n\n点击下拉箭头\n\n![img](django/948404-20160830223413558-354278015.png)\n\n点击edit configurations\n\n![img](django/948404-20160830223435824-1333880627.png)\n\n在host中填入：127.0.0.1 　　port中填入：8000\n\nOK确定之后，点击绿色的三角，web服务就运行起来了。\n\n![img](django/948404-20160830223604433-2023847864.png)\n\n按图所示，自动跳转到浏览器程序界面。显示的却是下图的404页面：\n\n![img](django/948404-20160830223647074-1854088091.png)\n\n修改一下url，添加“/index”，就一切ok了！\n\n![img](django/948404-20160830223733636-402109128.png)\n\n至此，一个最简单的django编写的web服务就启动成功了。\n\n### 7.  返回HTML文件\n\n　　上面我们返回给用户浏览器的是什么？一个字符串！实际上这肯定不行，通常我们都是将html文件返回给用户。\n\n　　下面，我们写这么一个index.html文件：\n\n![img](django/948404-20160830224345761-1370574663.png)\n\n　　再修改一下views文件：\n\n![img](django/948404-20160830224420636-441621765.png)\n\n为了让django知道我们的html文件在哪里，需要修改settings文件的相应内容。但默认情况下，它正好适用，你无需修改。\n\n![img](django/948404-20160830224615668-365627617.png)\n\n接下来，我们可以重新启动web服务。在浏览器刷新一下，你会看到带有样式的“hello world”。\n\n注：这里有个小技巧，在多次频繁重启服务时，由于端口未释放的原因，容易启动不了服务，修改一下端口就OK了。\n\n### 8. 使用静态文件\n\n　　我们已经可以将html文件返还给用户了，但是还不够，前端三大块，html、css、js还有各种插件，它们齐全才是一个完整\n\n的页面。在django中，一般将静态文件放在static目录中。接下来，在mysite中新建个static目录。\n\n![img](django/948404-20160830225314058-2019723535.png)\n\n你的CSS,JS和各种插件都可以放置在这个目录里。\n\n为了让django找到这个目录，依然需要对settings进行配置：\n\n![img](django/948404-20160830225403886-2079870404.png)\n\n同样，在index.html文件中，可以引入js文件了：\n\n![img](django/948404-20160830225507996-2043334590.png)\n\n重新启动web服务，刷新浏览器，查看结果。\n\n### 9. 接收用户发送的数据\n\n　　上面，我们将一个要素齐全的html文件返还给了用户浏览器。但这还不够，因为web服务器和用户之间没有动态交互。\n\n下面我们设计一个表单，让用户输入用户名和密码，提交给index这个url，服务器将接收到这些数据。\n\n　　先修改index.html文件\n\n![img](django/948404-20160830225843168-1078788144.png)\n\n然后修改views.py文件\n\n![img](django/948404-20160830225931449-2031664798.png)\n\n此时 ，重启web服务时，会出错，因为django有一个csrf跨站请求保护机制，我们暂时在settings文件中将它关闭，或者在form表单里添加一个 **csrf_token** 标签。这里为了演示方便，我们采用临时关闭的方式。\n\n![img](django/948404-20160830230032699-44609715.png)\n\n再次进入浏览器，刷新页面：\n\n![img](django/948404-20160830230139418-2016934265.png)\n\n输入点东西，然后我们在pycharm中可以看到相应的数据。\n\n### 10. 返回动态页面\n\n　　我们收到了用户的数据，但返回给用户的依然是个静态页面，通常我们会根据用户的数据，进行处理后在返回给用户。\n\n这时候，django采用自己的模板语言，类似jinja2，根据提供的数据，替换掉html中的相应部分，详细语法入门后再深入学习。\n\n先改造views.py文件：\n\n![img](django/948404-20160830230546340-963093019.png)\n\n再改造index.html文件：\n\n![img](django/948404-20160903111615121-1818501347.png)\n\n重启服务，刷新浏览器：\n\n![img](django/948404-20160830230649511-2067013295.png)\n\n可以看到，我们获得了用户实时输入的数据，并将它实时展示在了用户页面上，这是个不错的交互过程。\n\n### 11. 使用数据库\n\n　　流程走到这里，django的MTV框架基本已经浮出水面了，只剩下最后的数据库部分了。\n\n　　上面我们虽然和用户交互得很好，但并没有保存任何数据，页面一旦关闭，或服务器重启，一切都将回到原始状态。\n\n　　使用数据库是毫无疑问的，django通过自带的ORM框架操作数据库，并且自带轻量级的sqlite3数据库。下面我们来看一看：\n\n　　首先是注册app：\n\n![img](django/948404-20160830231428449-1578630689.png)\n\n不注册它，你的数据库就不知道该给哪个app创建表。\n\n然后我们在settings中，配置数据库相关的参数，如果使用自带的sqlite，不需要修改。\n\n ![img](django/948404-20160830231601449-1743437183.png)\n\n 再编辑models.py文件，也就是MTV中的M。\n\n![img](https://images2015.cnblogs.com/blog/948404/201608/948404-20160830231652043-1110238877.png)\n\n这里我们创建了2个字段，分别保存用户的名字和密码。\n\n接下来要在pycharm的teminal中通过命令创建数据库的表了。有2条命令，分别是：\n\npython manage.py makemigrations\n\n![img](django/948404-20160830231822496-1448836608.png)\n\n再输入命令：python manage.py migrate\n\n![img](django/948404-20160830231916949-1344486910.png)\n\n修改views.py中的业务逻辑\n\n![img](django/948404-20160830231944605-2083069069.png)\n\n重启web服务后，刷新浏览器页面，之后和用户交互的数据都能保存到数据库中。任何时候都可以从数据库中读取数据，展示到页面上。\n\n至此，一个要素齐全，主体框架展示清晰的django项目完成了，其实很简单是不是？\n\n \n\n## 三、 Django总结\n\n　　作为python必须web框架的Django，它的功能强大，内容全面，但同时也意味着限制颇多，灵活性低，可修改性差，这就是鱼和熊掌不可兼得了。我们学习Django，其实就是学习一个软件，要理解它的基本原理，把握它整体框架，牢记一些基本规则，剩下的就是不断深入细节，然后熟能生巧、经验多少的问题了，不存在多高深的不可掌握技术。 ","tags":["Django"],"categories":["技术"]},{"title":"排序算法","url":"/sort-algorithm/","content":"\n# 九种排序算法分析与实现\n\n简介：总的来说，排序算法共有八大类，即冒泡排序、选择排序、快速排序、插入排序、希尔排序、归并排序、基数排序以及堆排序等，本文另外也介绍了桶排序。编程语言使用了C/C++（其实主要用的C），3个经常出现的函数形参，arr - 待排序数组名（首元素地址）、bgn - 待排序数组起始排序元素位置（有时我们仅需要对数组中某一段元素进行排序，但通常bgn = 0，即arr首元素位置）、end - 待排序数组截止排序尾元素的下一个位置（即该位置无效，不可引用）。文中均已升序为例，降序原理相同。\n\n时间复杂度：描述该算法在处理大量数据时，总的来说其时间效率的参考；　　\n\n稳定性：描述算法对原始序列处理前后，该序列相等大小的元素前后位置是否发生改变\n\n两个常用的函数：1、获取数组最大元素值； 2、交换两个整形元素。代码如下：\n\n```c++\n//获取整形数组的最大值\n//NOTE: 默认arr非空\nint getMaxValue(const vector<int> &arr)\n{\n    int max = 0;\n    for (auto val : arr)\n    {\n        if (val > max)\n            max = val;\n    }\n    return max;\n}\n\n/*交换两个整形值*/\nvoid mySwap(int *pa, int *pb)\n{\n    int tmp = *pa;\n    *pa = *pb;\n    *pb = tmp;\n}\n```\n\n###  1、冒泡排序 \n\n依次比较相邻两元素，若前一元素大于后一元素则交换之，直至最后一个元素即为最大；然后重新从首元素开始重复同样的操作，直至倒数第二个元素即为次大元素；依次类推。如同水中的气泡，依次将最大或最小元素气泡浮出水面。\n\n时间复杂度：O(N2) 　　稳定性：稳定\n\n```c++\n/*冒泡排序*/\nvoid bubbleSort(vector<int> &arr, int bgn, int end)\n{\n    /*isLoop用于指示依次遍历中是否发生元素交换，若没有，则已是有序数列，退出即可*/\n    bool isLoop = true;\n    for (int i = end; true == isLoop && i > bgn; --i)\n    {\n        isLoop = false;\n        for (int j = bgn + 1; j < i; ++j)\n        {\n            if (arr[j] < arr[j - 1])\n            {\n                mySwap(&arr[j], &arr[j - 1]);\n                isLoop = true;\n            }\n        }\n    }\n}\n```\n\n### 2、选择排序\n\n首先初始化最小元素索引值为首元素，依次遍历待排序数列，若遇到小于该最小索引位置处的元素则刷新最小索引为该较小元素的位置，直至遇到尾元素，结束一次遍历，并将最小索引处元素与首元素交换；然后，初始化最小索引值为第二个待排序数列元素位置，同样的操作，可得到数列第二个元素即为次小元素；以此类推。\n\n时间复杂度：O(N2) 　　稳定性：不稳定\n\n```c++\n/*选择排序*/\nvoid selectSort(vector<int> &arr, int bgn, int end)\n{\n    for (int i = bgn; i < end; ++i)\n    {\n        int minIndex = i;\n        for (int j = i + 1; j < end; ++j)\n        {\n            if (arr[j] < arr[minIndex])\n                minIndex = j;\n        }\n        if (minIndex != i)\n            mySwap(&arr[i], &arr[minIndex]);\n    }\n}\n```\n\n### 3、快速排序\n\n（类似于选择排序的定位思想）选一基准元素，依次将剩余元素中小于该基准元素的值放置其左侧，大于等于该基准元素的值放置其右侧；然后，取基准元素的前半部分和后半部分分别进行同样的处理；以此类推，直至各子序列剩余一个元素时，即排序完成（类比二叉树的思想，from up to down）\n\n时间复杂度：O(NlogN) 　　稳定性：不稳定\n\n```c++\n/*快排*/\nvoid quickSort(vector<int> &arr, int bgn, int end)  //arr must be the reference of real param\n{\n    //数组arr空or仅有一个元素则退出\n    if (bgn >= end - 1)\n        return;\n\n\nint lindex = bgn;\nint rindex = end - 1;\nint std = arr[lindex];\nwhile (lindex < rindex)\n{\n    while (lindex < rindex)\n    {\n        if (arr[rindex] < std)\n        {\n            arr[lindex++] = arr[rindex];\n            break;\n        }\n        --rindex;\n    }\n\n    while (lindex < rindex)\n    {\n        if (arr[lindex] >= std)\n        {\n            arr[rindex--] = arr[lindex];\n            break;\n        }\n        ++lindex;\n    } \n}\n\narr[lindex] = std;\nquickSort(arr, bgn, lindex);\nquickSort(arr, rindex + 1, end);\n}\n```\n\n### 4、插入排序\n\n数列前面部分看为有序，依次将后面的无序数列元素插入到前面的有序数列中，初始状态有序数列仅有一个元素，即首元素。在将无序数列元素插入有序数列的过程中，采用了逆序遍历有序数列，相较于顺序遍历会稍显繁琐，但当数列本身已近排序状态效率会更高。\n\n时间复杂度：O(N2) 　　稳定性：稳定\n\n```c++\n/*插入排序*/\nvoid insertSort(vector<int> &arr, int bgn, int end)\n{\n    for (int i = bgn + 1; i < end; ++i)\n    {\n        /*\n        * 分为1,2两部分处理，可以囊括j = beg - 1时的情况\n        * 即需要将arr[i]插入到首元素前的位置，若使用一个for\n        * 包括这两部分，则会在发生这种情况时退出\n        */\n        /*1*/\n        int j = i - 1;\n        for ( ; j >= bgn; --j)\n            if (arr[j] <= arr[i])\n                break;\n        /*2*/\n        if (j != i - 1)\n        {\n            int temp = arr[i];\n            for (int k = i; k > j + 1; --k)\n            {\n                arr[k] = arr[k - 1];\n            }\n            arr[j + 1] = temp;\n        }\n    }\n}\n```\n\n### 5、希尔排序\n\n\n插入排序的改进版。为了减少数据的移动次数，在初始序列较大时取较大的步长，通常取序列长度的一半，此时只有两个元素比较，交换一次；之后步长依次减半直至步长为1，即为插入排序，由于此时序列已接近有序，故插入元素时数据移动的次数会相对较少，效率得到了提高。\n\n时间复杂度：通常认为是O(N3/2) ，未验证　　稳定性：不稳定\n\n```c++\n/*希尔排序*/\nvoid shellSort(vector<int> &arr, int bgn, int end)\n{\n    for (int step = (end - bgn) / 2; step > 0; step /= 2)\n    {\n        for (int i = bgn; i < step; ++i)\n        {\n            /*\n            * 以下，insertSort的变异\n            */\n            for (int j = i + step; j < end; j += step)\n            {\n                int k = j - step;\n                for ( ; k >= i; k -= step)\n                    if (arr[k] <= arr[j])\n                        break;\n                if (k != j - step)\n                {\n                    int tmp = arr[j];\n                    for (int m = j; m > k + step; m -= step)\n                        arr[m] = arr[m - step];\n                    arr[k + step] = tmp;\n                }\n            }\n        }\n    }\n}\n```\n\n### 6、桶排序\n\n\n实现线性排序，但当元素间值得大小有较大差距时会带来内存空间的较大浪费。首先，找出待排序列中得最大元素max，申请内存大小为max + 1的桶（数组）并初始化为0；然后，遍历排序数列，并依次将每个元素作为下标的桶元素值自增1；最后，遍历桶元素，并依次将值非0的元素下标值载入排序数列（桶元素>1表明有值大小相等的元素，此时依次将他们载入排序数列），遍历完成，排序数列便为有序数列。\n\n时间复杂度：O(x*N) 　　稳定性：稳定\n\n```c++\n/*桶排序*/\nvoid bucketSort(vector<int> &arr)\n{\n    int max = getMaxValue(arr);\n    int *pBuf = new int[max + 1];\n\nmemset(pBuf, 0, (max + 1)*sizeof(int));\nfor (auto const i : arr)\n    ++pBuf[i];\n\nfor (int i = 0, j = 0; i <= max; ++i)\n{\n    while (pBuf[i]--)\n        arr[j++] = i;\n}\ndelete []pBuf;\n\n\n}\n```\n\n### 7、基数排序\n\n桶排序的改进版，桶的大小固定为10，减少了内存空间的开销。首先，找出待排序列中得最大元素max，并依次按max的低位到高位对所有元素排序；桶元素10个元素的大小即为待排序数列元素对应数值为相等元素的个数，即每次遍历待排序数列，桶将其按对应数值位大小分为了10个层级，桶内元素值得和为待排序数列元素个数。\n\n时间复杂度：O(x*N) 　　稳定性：稳定\n\n```c++\n/*基数排序*/\n//1. 计数排序，按整形数值单位进行排序\nvoid countSort(vector<int> &arr, int exp)\n{\n    int bucket[10] = { 0 };\n    int arrSize = arr.size();\n    int *pTemp = new int[arrSize];\n    memset(pTemp, 0, arrSize * sizeof(int));\n\n\n//统计单位exp各数值计数值\nfor (auto const val : arr)\n    ++bucket[(val / exp) % 10];\n\n//计数分层\nfor (int i = 1; i < 10; ++i)\n    bucket[i] += bucket[i - 1];\n\n//按exp位大小用数组arr元素填充pTemp\nfor (int i = arrSize - 1; i >= 0; --i)\n    pTemp[ --bucket[(arr[i] / exp) % 10] ] = arr[i];\n\n/*bugs*/\n#if 0\n    //bug1: bucket各层次的计数值没遍历一次相应自减1\n    for (auto const val : arr)\n        pTemp[bucket[(val / exp) % 10] - 1] = val;\n    //bug2: arr数组元素每次排序时，下标应从大到小遍历，否则无法实现排序\n    for (auto const val : arr)\n        pTemp[ --bucket[(val / exp) % 10] ] = val;\n#endif\n\n\n//pTemp -> arr\nfor (int i = 0; i < arrSize; ++i)\n    arr[i] = pTemp[i];\ndelete []pTemp;\n\n\n}\n//2. 合并各单位计数排序结果\nvoid radixSort(vector<int> &arr)\n{\n    int max = getMaxValue(arr);\n    for (int exp = 1; max / exp != 0; exp *= 10)\n        countSort(arr, exp);\n}\n```\n\n### 8、归并排序\n\n采用了分治和递归的思想，递归&分治-排序整个数列如同排序两个有序数列，依次执行这个过程直至排序末端的两个元素，再依次向上层输送排序好的两个子列进行排序直至整个数列有序（类比二叉树的思想，from down to up）。\n\n时间复杂度：O(NlogN) 　　稳定性：稳定\n\n```c++\n/*归并排序*/\n//排序两个有序数列\nvoid mergeSortInOrder(vector<int> &arr, int bgn, int mid, int end)\n{\n    int *pBuf = new int[end - bgn];\n    int *pTemp = pBuf;\n    int lindex = bgn;\n    int rindex = mid;\n\nwhile ((lindex < mid) && (rindex < end))\n    *(pTemp++) = (arr[lindex] < arr[rindex]) ? arr[lindex++] : arr[rindex++];\n\nwhile (lindex < mid)\n    *pTemp++ = arr[lindex++];\nwhile (rindex < end)\n    *pTemp++ = arr[rindex++];\n\n//pTemp -> arr\npTemp = pBuf;\nfor (int i = bgn; i < end; i++)\n    arr[i] = *pTemp++;\n\ndelete []pBuf;\n\n\n}\n//UpToDown To DownToUp\nvoid mergeSort(vector<int> &arr, int bgn, int end)\n{\n    //数组arr空or仅有一个元素则退出\n    if (bgn >= end - 1)\n        return;\n\n\nint mid = (bgn + end) / 2;\nmergeSort(arr, bgn, mid);\nmergeSort(arr, mid, end);\nmergeSortInOrder(arr, bgn, mid, end);\n\n}\n\n```\n\n### 9、堆排序\n\n堆排序的思想借助于二叉堆中的最大堆得以实现。首先，将待排序数列抽象为二叉树，并构造出最大堆；然后，依次将最大元素（即根节点元素）与待排序数列的最后一个元素交换（即二叉树最深层最右边的叶子结点元素）；每次遍历，刷新最后一个元素的位置（自减1），直至其与首元素相交，即完成排序。\n\n时间复杂度：O(NlogN) 　　稳定性：不稳定\n\n```c++\n/*堆排序*/\n//根节点元素自顶向下移动到合适的位置以构成最大堆\nvoid downToMaxHeap(vector<int> &arr, int bgn, int end)\n{\n    int child;\n    int parent = bgn;\n\n\n/*假根节点向下移动至合适的位置 --整个堆排序的核心代码块*/\nwhile ((child = parent * 2 + 1) < end)\n{\n    if ((child < end - 1) && (arr[child] < arr[child + 1]))\n        ++child;    //右孩子节点\n    if (arr[child] > arr[parent])\n        mySwap(&arr[child], &arr[parent]);\n    else\n        break;\n    parent = child;\n}\n\n\n}\n//将数组构造为最大堆\nvoid buildMaxHeap(vector<int> &arr, int bgn, int end)\n{\n    if (bgn >= end - 1)\n        return;\n\n\nint parent = end / 2 - 1;\nwhile (parent >= 0)\n{\n    downToMaxHeap(arr, parent, end);\n    --parent;\n}\n\n\n}\n//堆排序\nvoid heapSort(vector<int> &arr, int bgn, int end)\n{\n    //构造最大堆\n    buildMaxHeap(arr, bgn, end);\n\nwhile (end > 1)\n{\n    mySwap(&arr[0], &arr[--end]);\n    downToMaxHeap(arr, 0, end);\n}\n\n\n}\n```\n\n\n","tags":["C++"],"categories":["算法"]},{"title":"Python100例","url":"/python-test/","content":"\n##### T3\n\n平方差分解，同奇同偶的性质\n\n减少比较次数（限定一个比另一个大）\n\n```python\n# 一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？\n\nfor i in range(1, 85):\n    if 168 % i == 0:\n        j = 168 / i\n        if j > i and j % 2 == 0 and i % 2 == 0:\n            m = (i + j) / 2\n            x = m * m - 100 - 168\n            print(x)\n```\n\n##### T5\n\n列表的sort函数\n\n```python\n# 输入三个整数x,y,z，请把这三个数由小到大输出。\nl = []\nfor i in range(3):\n    num = int(input())\n    l.append(num)\n    l.sort()\n\nprint(l)\n```\n\n##### T6\n\n递归\n\n```python\n# 斐波那契数列。\ndef fib(n):\n    if n < 1:\n        return -1\n    elif n == 1 or n == 2:\n        return 1\n    else:\n        return fib(n - 1) + fib(n - 2)\n\n\n# print(fib(10))\n\ndef fibb(n):\n    a, b = 0, 1\n    for i in range(n):\n        print(b)\n        a, b = b, a + b\n\n\n\nfibb(10)\n```\n\n##### T7\n\na[:]\n\n```python\n# 将一个列表的数据复制到另一个列表中。\na = [1, 2, 3]\nb = a[:]\nprint(b)\n\n```\n\n\n\n##### T9\n\n```python\n# 题目：暂停一秒输出。\n\n# 程序分析：使用 time 模块的 sleep() 函数。\n\nimport time\n\nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print((key, value))\n    time.sleep(1)\n\n```\n\n\n\n##### T12\n\n判断素数：\n\n这个数除以 2 到 sqrt(x) , 要除到sqrt所以range的时候要+1！\n\n```python\n\"\"\"\n题目：判断101-200之间有多少个素数，并输出所有素数。\n\n程序分析：判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。\n\"\"\"\nimport math\n\ncount = 0\nfor i in range(101, 201):\n    flag = 1\n    s = int(math.sqrt(i))\n    for t in range(2, s + 1):\n        if i % t == 0:\n            flag = 0\n            break\n    if flag:\n        print(i)\n        count += 1\n\nprint(count)\n\n```\n\n\n\n##### T13\n\n```python\n\"\"\"\n题目：打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。\n\n程序分析：利用for循环控制100-999个数，每个数分解出个位，十位，百位。\n\"\"\"\nfor a in range(10):\n    for b in range(10):\n        for c in range(10):\n            num = 100 * a + 10 * b + c\n            if a ** 3 + b ** 3 + c ** 3 == num:\n                if a >= 1:\n                    print(num)\n\n```\n\n\n\n##### T14\n\n分解质因数，从小到大，小的要分干净（用while循环）\n\n函数的过程整合（化简）先提取出来i，然后再判断。\n\n```python\n\"\"\"\n题目：将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。\n\n程序分析：对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：\n(1)如果这个质数恰等于n，则说明分解质因数的过程已经结束，打印出即可。\n(2)如果n>k，但n能被k整除，则应打印出k的值，并用n除以k的商,作为新的正整数n,重复执行第一步。\n(3)如果n不能被k整除，则用k+1作为k的值,重复执行第一步。\n\"\"\"\n\n\ndef reduceNum(n):\n    if not isinstance(n, int) or n <= 0:\n        print(\"请输入一个正确的数字 !\")\n        exit(0)\n    print(\"{} = \".format(n), end=\"\")\n    for i in range(2, n):\n        while n % i == 0:\n            n //= i\n            if n == 1:\n                print(i)\n            else:\n                print(\"{} * \".format(i), end=\"\")\n\n\nreduceNum(4)\nreduceNum(16)\nreduceNum(90)\n\n```\n\n\n\n##### T17\n\n```python\n\"\"\"\n题目：输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。\n\n程序分析：利用 while 或 for 语句,条件为输入的字符不为 '\\n'。\n\"\"\"\ns = input()\nletters, space, digit, others = 0, 0, 0, 0\ni = 0\nwhile i < len(s):\n    c = s[i]\n    i += 1\n    if c.isalpha():\n        letters += 1\n    elif c.isdigit():\n        digit += 1\n    elif c.isspace():\n        space += 1\n    else:\n        others += 1\n\nprint((\"letters\", letters))\nprint((\"digit\", digit))\nprint((\"space\", space))\nprint((\"others\", others))\n\n```\n\n\n\n##### T18\n\nreduce 和 lambda 函数\n\n```python\n\"\"\"\n题目：求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。\n\n程序分析：关键是计算出每一项的值。\n\"\"\"\nfrom functools import reduce\n\nTn = 0\nSn = []\ns = int(input(\"s = \"))\nn = int(input(\"n = \"))\nfor i in range(n):\n    Tn += s\n    s *= 10\n    Sn.append(Tn)\nSn = reduce(lambda x, y: x + y, Sn)\nprint(Sn)\n\n```\n\n\n\n##### T27\n\n递归\n\n```python\n\"\"\"\n题目：利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。\n\"\"\"\n\n\ndef reverse(s, l):\n    if l == 0:\n        return\n    else:\n        print(s[l - 1])\n        reverse(s, l - 1)\n\n\ns = \"abc\"\nl = len(s)\nreverse(s, l)\n\n```\n\n\n\n##### T30\n\n回文数·递归\n\n1. 判断出口\n2. 其他情况处理\n3. 重复调用函数\n\n```python\n\"\"\"\n题目：一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。\n\"\"\"\n\n\ndef reverse(s):\n    l = len(s)\n    if l == 1:\n        return s\n    else:\n        return s[-1] + reverse(s[:-1])\n\n\ndef reversess(str, lenth):\n    if lenth == 1:\n        return str[lenth - 1]\n    else:\n        return str[lenth - 1] + reversess(str, lenth - 1)\n\n\ns = \"abcdefg\"\na = reverse(s)\nprint(a)\n\nb = reversess(s, len(s))\nprint(b)\n\n\ndef judgement():\n    s = input(\"The number u want to check: \")\n    if s == reverse(s):\n        print(\"Yes!\")\n    else:\n        print(\"No!\")\n\n\njudgement()\n\n```\n\n\n\n##### T32\n\n```python\n\"\"\"\n题目：按相反的顺序输出列表的值。\n\"\"\"\ns = [1,2,3]\ns = s[::-1]\nprint(s)\n```\n\n\n\n##### T33\n\n```python\n\"\"\"\n题目：用，把列表串起来。\n\"\"\"\nln = [1, 2, 3, 4, 5]\nls = [\"a\", \"b\", \"c\"]\n\n# jn = \",\".join(ln)  # TypeError: sequence item 0: expected str instance, int found\n# jn = \",\".join(str(x) for x in ln) # 这个也可以\n\njn = \",\".join([str(x) for x in ln])\njs = \",\".join(ls)\n\nprint(jn)\nprint(js)\n\n\nl = [1, 2, 3]\na = (str(x) for x in l)\nprint(type(a))\nprint(a)\n# <class 'generator'>\n# <generator object <genexpr> at 0x0000023770F44A98>\n\nb = [str(x) for x in l]\nprint(type(b))\nprint(b)\n# <class 'list'>\n# ['1', '2', '3']\n```\n\n\n\n##### T34\n\n```python\n\"\"\"\n题目：练习函数调用。\n\"\"\"\n\n\ndef hello_world():\n    print(\"hello world\")\n\n\ndef three_hellos():\n    for i in range(3):\n        hello_world()\n\n\nif __name__ == '__main__':\n    three_hellos()\n\n```\n\n\n\n##### T49\n\n```python\n\"\"\"\n题目：使用lambda来创建匿名函数。\n\"\"\"\nMAXIMUM = lambda x, y: (x > y) * x + (x < y) * y\nMINIMUM = lambda x, y: (x > y) * y + (x < y) * x\n\nif __name__ == '__main__':\n    a = 10\n    b = 20\n    print('The largar one is %d' % MAXIMUM(a, b))\n    print('The lower one is %d' % MINIMUM(a, b))\n\n```\n\n\n\n##### T69\n\n约瑟夫环\n\nm：删除了几个人\n\n​\t\t（删除n-1次的时候结束。由于是while循环，判断条件为小于，保证跳出循环时是结束）\n\ni：位次\n\nk：0-3计数\n\n```python\n\"\"\"\n题目：有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。\n\"\"\"\n\nn = int(input())\nnum = []\nfor i in range(n):\n    num.append(i + 1)\n\ni = 0\nk = 0\nm = 0\n\nwhile m < n - 1:\n    if num[i] != 0:\n        k += 1\n    if k == 3:\n        num[i] = 0\n        k = 0\n        m += 1\n    i += 1\n    if i == n:\n        i = 0\n\nprint(num)\ni = 0\nwhile num[i] == 0:\n    i += 1\nprint(num[i])\n\n```\n\n\n\n##### T74\n\n```python\n\"\"\"\n题目：列表排序及连接。\n\n程序分析：排序可使用 sort() 方法，连接可以使用 + 号或 extend() 方法。\n\"\"\"\nif __name__ == '__main__':\n    a = [1, 3, 2]\n    b = [3, 4, 5]\n    a.sort()  # 对列表 a 进行排序\n    print(a)\n\n    # 连接列表 a 与 b\n    print(a + b)\n\n    # 连接列表 a 与 b\n    a.extend(b)\n    print(a)\n\n```\n\n","categories":["Python"]},{"title":"Python里面的reduce函数和lambda","url":"/python-reduce-lambda/","content":"\n```python\na = [2,22,222]\nSn = reduce(lambda x,y:x+y,a)\nprint \"计算和为：\",Sn\n```\n\n其中reduce函数是python中的一个二元内建函数，它可以通过传给reduce中的函数（必须是二元函数）依次对数据集中的数据进行操作。例如上述代码传给reduce的函数是做加法，数据集是a，那么reduce函数的作用就是将数据集中的数据依次相加，最后打印出的结果就是246。\n\n函数语法：  reduce(function, iterable[,initializer])\n\n函数参数含义如下：\n\n1. function 需要带两个参数，1个是用于保存操作的结果，另一个是每次迭代的元素。\n2. iterable 待迭代处理的集合\n3. initializer 初始值，可以没有。\n\nreduce函数的运作过程是，当调用reduce方法时：\n\n1. 如果存在initializer参数，会先从iterable中取出第一个元素值，然后initializer和元素值会传给function处理；接着再从iterable中取出第二个元素值，与function函数的返回值 再一起传给function处理，以此迭代处理完所有元素。最后一次处理的function返回值就是reduce函数的返回值。\n2. 如果不存在initializer参数，会先从iterable中取出第一个元素值作为initializer值，然后以此从iterable取第二个元素及以后的元素进行处理。特殊情况下，如果集合只有一个元素，则无论function如何处理，reduce返回的都是第一个元素的值。\n\n看例子：\n\n```python\nreduce(lambda re,x:re+x,[2,4,6])\n```\n\n结果是12。 这里我们用的是lambda表达式（匿名函数），带两个参数，re就是指的是每次操作后的返回值，这里没带initializer参数，参数x就是代表集合中的元素。\n\n第一轮操作时，re的初始值为第一个元素为2，x为第二个元素4， 运算后re的结果是6.\n\n第二轮操作时，re的值就是上次的结果6，x的值为6，这样结果为12.\n\n因为只有三个元素，又没有initializer参数，所以只会执行两轮。\n\n```python\nreduce(lambda re,x:re+x,[2,4,6],10)\n```\n\n结果是22. 这个例子传入了初始化参数10 ，这样re的初始化值为10.\n\n有三个元素，需要操作三轮，结果就是22了\n\n凡是要对一个集合进行操作的，并且要有一个统计结果的，能够用循环或者递归方式解决的问题，一般情况下都可以用reduce方式实现。\n\n**在python 3.0.0.0以后, reduce已经不在built-in function里了, 要用它就得from functools import reduce**。\n\n\n\n而其中的lambd表达式是一种精简函数的表达方法，省略了函数的定义，命名等问题。\n\nlambda表达式是起到一个函数速写的作用。允许在代码内嵌入一个函数的定义。\n\n如下函数，定义了一个lambda的表达式，求三个数的和：\n\n```python\nf = lambda x,y,z:x+y+x\nprint f(1,2,3)\n\n>>>> 4\n```\n\n```python\nf = lambda x,y,z:x+y+z\nprint f(1,2,3)\n\n>>>> 6\n```\n\n用lambda表达式求n的阶乘：\n\n```python\nn = 5\nprint reduce(lambda x,y:x*y,range(1,n+1))\n\n>>>>120\n```\n\nlambda表达式也可以用在def函数中：\n\n```python\ndef action(x):\n    return lambda y:x+y\na = action(2)\nprint a(22)\n\n>>>>24\n```\n\n这里定义了一个action函数，返回了一个lambda表达式。其中lambda表达式获取到了上层def作用域的变量名x的值。\n\na是action函数的返回值，a(22)，即是调用了action返回的lambda表达式。\n\n这里也可以把def直接写成lambda形式。如下：\n\n```python\nb = lambda x:lambda y:x+y\na = b(2)\nprint a(22)#print (b(2))(22)\n\n>>>>24\n```\n\nreduce的知识点出处：[点击打开链接 ](http://blog.csdn.net/dragonfli_lee/article/details/52301561)\n\nlambda的出处：[点击打开链接](http://blog.csdn.net/imzoer/article/details/8667176)","categories":["Python"]},{"title":"Hanwen2019SummerPlan","url":"/hanwen2019SummerPlan/","content":"# 前言\n\n在小学期开始之前已经尝试了英语单词、数据库学习、网课、读书、写博客和Onlinejudge的生活。现在准备工作就绪，可以开冲了！\n\n通过这样公开在自己很喜欢的博客上的方式来督促自己：提前规划，记录日程，每日总结，定期回顾。希望通过这样的方式来让自己能够更加有效率得利用大二的暑假！更加脚踏实地得前行！\n\n**冲冲冲！**\n\n## 一些备注\n\n- 每半天结束学习的时候deploy到网站上，节约自己的经历\n- 睡前使用 To-Do来进行第二天要做的事的规划\n- 不必太拘泥于形式，重要的是努力学习，冲！\n\n## Tips\n\n- 睡觉不能晚于12：00，上床坚决不能带手机\n\n- 博客不要纠结太多，注意大方向\n\n  \n\n\n## 大方向上需要做的事\n\n- GRE学习\n  - GRE单词（一直背）\n    - GRE红\n    - GRE短语搭配精选\n    - GRE绿（核心词汇助记与精练）\n    - GRE蓝（核心词汇考法精析）\n  - GRE阅读（第一周简单看，之后这个月重点突破）\n    - 阅读白皮书\n    - 长难句3000\n    - 基础填空24套\n    - 强化填空36套\n  - GRE数学（一个星期）\n    - 官方指南\n  - GRE写作\n    - 官方指南\n    - 短语\n- 托福\n  - 高级的三本书\n    - 听力\n    - 口语\n    - 阅读！！！\n- 实习\n  - 一定要认真负责做好实习\n- 网课\n  - coursera!!!\n- 书\n  - 算法导论\n  - 大黑书\n- 写博客\n- 和xc一起学习\n  - OnlineJudge做题 \n  - Python100Days\n- 复现自己的代码\n- 其他\n  - 主持人 √\n  - Robocup ×\n  - 第二课堂？×\n\n## 一些时间表\n\n#### RoboCup\n\n| 课程表(培训内容) |           |                                                              |                                                              |\n| ---------------- | --------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| 日期             | 时长（h） | 内容                                                         |                                                              |\n| 硬件             | 软件      |                                                              |                                                              |\n| 7.2              | 2         | 基本比赛介绍，大家自我介绍，机器人演示                       |                                                              |\n| 7.4              | 2         | 小车的使用方法、基本原理，发射机的使用方法                   | 代码框架，SSLvision使用                                      |\n| 7.6              | 6         | 嵌入式代码，程序烧录方法，Keil使用      参数调整（包括PID等）      日常/比赛维护内容、经验 | 跑仿真，策略简介                                             |\n| 7.7              | 6         | 拆装车                                                       | 卡尔曼滤波，Rbk中的图像处理流程，Anthena讲解和改动，尝试跑实车 |\n| 7.9              | 2         | 一传一射（尝试）                                             | 一传一射（尝试）                                             |\n| 7.11             | 2         | 答疑，一传一射                                               | 答疑，一传一射                                               |\n| 7.13             | 上午+下午 | 做小任务：前场定位球，角球，后场定位球，每一队3辆车，每队五次机会，计算每队打中的次数，最后总分排名 |                                                              |\n\n备注：除了7月6日，7日，13日，其余培训时间均为晚上6:30-8:30。地点为学生创新中心   B楼3楼教室，需要自带电脑。培训会录有视频，每次结束之后会上传到云盘，大家可以自行下载再次观看。\n\n## 190701\n\n由于有龙舟课，度过了幸福而美丽的一个上午。\n\n下午的时候来图书馆激活了个人域名。到实验室找王贺升老师。\n\n吃过晚饭，到图书馆学习。\n\n深夜折腾自己的博客，突然崩溃不知道什么原因。（可能是网络）\n\nGRE单词很难，还没有背完第一chapter，需要加速！\n\n\n\n## 190702\n\n今天起床了就去图书馆了，主要研究的是Python面试的事儿。\n\n电话过来说是明天中午1：00面试，瀚文加油！\n\n下午打球，最近总不打手感不是很好。没有太多机会磨砺，最近的运动就改成跑步和游泳吧！\n\n晚上回图书馆还是很认真的学了一会习，回寝室也能学习，早点睡觉咯~\n\n**以后的数据结构系列就用山的图片！**\n\n冲！\n\n小卡快来吧！\n\n湖人总冠军！\n\n## 190703\n\n去MicroFocus面试技术岗位。\n\n和他们聊的很开心，也顺利走了流程！\n\n我去很棒的，继续努力！\n\n真的太远了\n\n## 190704\n\n日月光实习的第一天，昨晚有点没睡好，真的好长时间啊。\n\n就⑧个小时，但是都有点要坐不住了\n\n（规划）写在100天本子里。\n\n开始准备数据结构！\n\n**路上的时间真的很长**\n\n今天记录一下，用于规划：\n\n​\t\t早上8点起床，9点50前到的。急急忙忙吃早饭，骑车去地铁站。\n\n​\t\t晚上7点下班，9点20吃完饭走到校门，和爸爸妈妈视频21：44，接近十点回到寝室静下来。\n\n​\t\t时间花费早上8点到晚上十点，超过12个小时，有效工作7小时，午休1小时。4个小时路上。\n\n​\t\t实际纯地铁时间应该2* 1h15min，争取能节约一点时间出来吧。\t\n\n​\t\t明天可以看看Python100Day的知识。\n\n​\t\t注意学习自己的博客。\n\n减轻背的东西，只要电脑，和自己的小瓶子。\n\n## 190705\n\n周五上班学docker\n\n下班去外滩看毕业生的点亮💗\n\n## 190706\n\n解决了住房问题 + GRE数学开始 + 小高找衣服\n\n## 190707\n\n完成了GRE OG数学的题目学习。也算按时完成了进度。\n\n后面还有习题，还有知识点的总结可以慢慢来看了。\n\n小学期的第一周结束了，总体来说进入到了平稳期。该剪掉的都剪掉了，需要踏踏实实的努力。\n\n瀚文加油！\n\n## 190708\n\n周一，是上班的一天。\n\n和同事逛了田子坊，之后可以和小高去逛。\n\n晚上搞主持的稿子。\n\n发现没有太多的时间系统的学英语。。。😡不可以！！！\n\n## 190709\n\n终于搞定了HR的OFFER，￥160/day，努力！\n\n不收税的话还是有很多剩余的！\n\n努力冲英语！\n\n不能再失败了！\n\n游泳感觉很好！\n\n8说了，开始博客每日系列！\n\n## 190710\n\n\n\n## 190711\n\n周四\n\n日月光上班，被榨干了最后一点剩余价值。\n\n应该不会再去上班了吧\n\n回学校准备主持\n\n## 190712\n\n主持上海交通大学2019国际暑期学校\n\n## 190713\n\n周六\n\n睡了一天\n\n## 190714\n\n周日\n\n拍证件照\n\n搬家到新住的地方\n\n## 190715\n\n周一\n\n到图书馆看书\n\n晚上制定行程\n\n## 190716\n\n周二\n\n上午在床上准备睡觉\n\n中午开始收拾\n\n下午晚上搬家ing\n\n## 190717\n\n即将入职\n\n-----New Plan-----\n\n我的计划是7月完成\n\n- cpp+数据结构复习的规划\n\n- GRE红宝书的单词第一遍结束（就算是扫过也要结束掉）\n\n日程规划：\n\n- 每天早上起床的时候单词 + 听力做一个\n- 回家甜点Python100Days\n- 晚上Cpp + GRE阅读\n- 工作时间认真完成就好了！！！\n\n假期计划：\n\n- 7月完成上述\n- 8月可以尝试leetcode(到时候看一下用cpp还是用python)\n- 9月开始提前看教材","tags":["规划"],"categories":["文字"]},{"title":"summerSearch","url":"/summerSearch/","content":"\n- 暑研申请总结【官方项目only】\n  https://www.1point3acres.com/bbs/thread-391383-1-1.html\n\n> 暑研申请已经进入到了收尾阶段，近期准备申请签证文件等，把一些自己觉得重要的信息发上来回馈地里。祝学弟学妹们明年找暑研顺利~~（这里我只写官方暑研项目，自己私下联系教授的暑研不在本帖讨论范围内）\n> 一共申请了两个项目，一个duke一个cmu，都拿了offer，duke给了加总1万刀左右，卡梅给了加总五千刀左右。\n>\n>   \n>\n> 先说一下怎么找项目，学校资源有限，只能靠自己，分几步走：\n>\n> 1. google海搜接受international student的summer research program，组合不同关键字REU/SURF等等。其实全部找下来，接受国际生申请且由明确网页guidance和介绍的项目真的不多。这里建议大家建立一个excel方便记录跟踪自己的申请状况。把你找到的学校填进去，包括学校，项目时间及长度，是否有funding，是否要自己提前找导师，以及各个项目的申请要求如gpa、托福 等等。我当时找下来基本就是10个项目左右。\n>\n> 2. 接下来把排名一般和资料不详和不符合申请要求的学校去掉，这时候还剩5-6个，接下来深入了解一下各个项目的情况，选择2-3个最适合自己的项目，进行套磁。怎么套，套谁？首先找到你自己学校官网的师资列表，看看有没有目标学校挂名的教授，如果有就方便很多。可惜楼主学校资源少，木有，接下来去目标学院官网看有没有和自己方向比较match的教授。这里选人我的标准基本上就是\n>\n>    ​\t1）一定要match，\n>\n>    ​\t2）不选年纪大的（年纪太大的没有什么精力仔细指导本科生）\n>\n>    ​\t3）尽量不选华人（这点主要是因为看地里对华人AP印象总体比较一般，楼主又不太会鉴别）\n>\n> 3. 锁定目标以后，套磁。首先读一读近1-2年的paper，看一看这个教授指导的学生里面有没有中国人，有的话可以联系一下，问问课题组的情况，最好是能先问一问funding的情况，以往是否有host本科生的先例。套磁写好以后，发邮件时推荐大家用gmail邮箱的tracking功能，这样你可以知道教授有没有收到你的邮件，有没有看你的附件等等。另外，建议大家第一封信不要写太长，清晰明确很重要。\n>\n> 4. 接下来就等回音啦。一般1周内都会有response。如果总体回复是positive的话，就可以开始在正式申请系统里面提交了。\n>\n> 5. 在接下来的时间里，保持每两周给教授发一封邮件的频率update一下进展，比如之前提过的xx文章被接受啦，上周有个xx比赛做了个啥很有趣且和他研究有关的玩意儿拿了啥奖，等等。如果这个邮件往来一直可以保持的比较好的话，基本offer也就跑不了了。\n>\n> 总结一下，其实我的申请策略比较少见，不像很多同学喜欢海投，海投完再集中火力。我比较喜欢在选定几个项目后，直接集中火力，一搞一个准。需要注意的是，在项目筛选阶段，你要能够有足够的信息搜集能力和分析判断能力，不然就很可能会造成花了很多时间心力写套磁，结果到最后才发现人家教授根本不能host你。  ","tags":["一亩三分地","美国","暑研"]},{"title":"masterApply","url":"/masterApply/","content":"\n- ##### 6.19沈阳，CS PhD毫无悬念的check\n  \n\nhttps://www.1point3acres.com/bbs/thread-533125-1-1.html\t\n\n> 沈阳的CS PhD被check， 贴子中有人被check了54天\n\n**读博士有风险**\n\n- ##### 从审材料的角度谈谈研究生申请（待更新）\n  \n\nhttps://www.1point3acres.com/bbs/thread-463109-1-1.html\n\n> 参与过（且正在参与）北美某TOP高校的CS Master审材料工作，给大家提供一些建议来避免申请中的误区。**不过每个学校流程和偏好都各有不同，不要以偏概全**首先谈谈申请材料的重要性，一般来说：成绩单（毕业学校）>=  > 个人陈述 >= 托福 > 其他经历（如工作） > GRE。\n> 拿我们学校来说，每份材料会先有2-3个人初审，并筛掉其中2/3的申请人，只有剩下的1/3才会被教授看到。考虑到每个人都很忙，很多时候看的是非常快的，一般不超过五分钟。我的流程一般是：\n> ![img](https://www.1point3acres.com/bbs/static/image/hrline/5.gif)\n>\n> \n>\n> - 如果有大牛的强推（**注意是强推**）或者非常**厉害的论文发表**（CCF A或者B，尤其是一作），都是很大的加分项，可以很大程度上弥补其他方面的不足。**即使我们不知道你的推荐人是谁，但名校的教授一般都是信用保证**。\n> - **大部分Master项目无需套磁**，Professional都是上课而已，最多有个名义导师。\n> - 大部分本科生都没有科研经历，也没有论文，这是再正常不过的事情了。申请就业型硕士不需要论文（当然如果有肯定会加分）。\n> - 工作经历是加分项，但不知名小公司也没啥用，毕竟完全可以编造。\n>\n> . check 1point3acres for more.\n> 至于GPA的评估问题，我们有不同国家和地区的标准，比如香港用 First Class/Second Class，印度用的是10分制。系里面提供了两套中国内地的评分标准，系统1中 85-100是A，76-84是B；系统2中90-100才是A，80-90是B。具体情况下一般会灵活处理，但很少会重新算一遍GPA除非怀疑有猫腻。不过单纯的高成绩也没有用，毕竟北大85依然比某不知名的学校90要强的多。所以我们的评估是「」。\n>\n> 最后想说一句，每个人的PS都写想做机器学习，偶尔看到一个想做software engineering，HCI，system的人都让人眼前一亮。写机器学习却没有相关经历不仅不会给你加分，还会让人觉得你缺乏思考，人云亦云。\n\n- 一份写得很全面的推荐信的写作建议\n  https://www.1point3acres.com/bbs/thread-42806-1-1.html  \n\n> 尽管是CS的教授写的指导教授们怎么写[推荐信](http://tinyurl.com/l3tpgv5)，但是鉴于我国的国情，你懂的\n> 把其中比较重要的几点摘录如下：\n>\n>\n> **The One-Minute Rule**\n> When I'm on the committee, I try to read every application; when I chair it, I make sure I do, some multiple times. That's many hundreds of applications in under a month. Factor in lots and lots of late letters, classes, etc., and it's clear I have to work pretty fast.\n> For the first pass—deciding whether the application deserves more time or not—I can afford to spend no more than about 6-7 minutes per application. (Keep in mind I've read maybe a few thousand applications, so I've had practice.) If I decide the application is promising, I may spend over half an hour (in some cases, days!) on it. But in those first 6-7 minutes, I have to:\n> •        eyeball the student's research record\n> •        form a summary of the transcript\n> •        glance at the standardized test scores\n> •        determine whether the statement is promising\n> •        get the gist of 2-3 letters of recommendation\n> In practice, that means I have about one minute to devote to the first reading of your letter. Now think about whether your letter works in this context. (For instance, some letter writers put a big, prominent paragraph of boilerplate legalese at the beginning of their letter, which I have to read before I realize it's irrelevant. Could you have buried that in a postscript? Was that the best use of my minute?)\n>\n> **关于任课老师的写作：**\n> Naturally, your most significant contact with the student is likely to be in courses. Yet what could be a rich source of description is often the poorest: Mor Harchol-Balter reports that at CMU, they call a certain class of these “DWIC” letters (“did well in class”), which are effectively useless.\n> Give us context. What textbook did you use? How much of it did you cover? Did the student take it earlier than usual?\n> Don't just report the grade; put it in perspective. How many students got that grade or better? If your transcript isn't nuanced (e.g., at Brown we give only letter grades with no +/- decorations), fill it in. Did they do an exceptional job at something? (Tell us what they did!) Were they biased towards some aspect of your class? (For instance, in my programming languages course, some take much better to the theoretical aspects, while others prefer the systems work. The transcript won't reveal this, but it's extremely valuable information for a professor trying to decide whether or not to recruit a student.)\n>\n> \n> **关于研究经历的写作：**\n> At a highly-competitive university like Brown, we want to know the student's research potential. The best assessment of this is what they have already done. If you are their research advisor, you have a special obligation to them (and to us) in your letter:\n>\n> •        describe their work in your own words. 1point3acres\n> •        tell us what the student's contribution was\n> •        tell us whether it succeeded or failed\n> •        if it's ongoing, tell us why you think it will succeed\n> We rarely expect the ideas to have originated from the student, but we would like to see signs that they took ownership of the project, improved it in some way, refined the idea, and so on. Finally:\n> •        put any publications in context\n> Students don't always know how to do this. If you published a paper on the work, tell us about the quality of the venue. In particular, students are poor at telling different kinds of publications apart (tech report from conference poster from research paper) and may even try to hide the distinction (I've seen this happen). Help us understand what they really accomplished.. check 1point3acres for more.\n> If you run a summer research center, you may get bombarded with letter requests from each of your students. I have seen such people write perfunctory one-paragraph letters. These hurt students, and are ultimately unethical. Someone gave you money to run that center; when you asked for it, you took on an obligation. Fulfill it, or else get out of the way. There are plenty of others who will gladly put that money to better use.\n>\n> \n> **还有关于工作经历的推荐信的写作要点：**\n> An important special case is the corporate letter: when you, the letter-writer, work in industry and have no academic affiliation. Many corporate letters (like many academic letters, but more so) tend to be vapid, clearly written in a different culture and for a different audience. Unless they actually did academic research with you, here are some suggestions for improving them.\n> A common mistake is to focus on teamwork. This is important even in academia, but often this is the primary focus of the letter, which makes it less valuable. Of course we care about it, but it's secondary to their technical skills.\n>\n> •        Tell us if they learned something particularly quickly, mastered a complex technology, or solved a problem others were stuck on. Give us a paragraph of details.\n> •        If you have a concrete reason to evaluate research potential, do so concretely. Otherwise, don't bother.\n> •        Give us a brief bio-sketch, including educational qualifications.\n> •        Put the applicant in context, and tell us the context. It's fine to relate it to your own student days, or to your experience hiring students. E.g.:\n> Compared to the students I studied with at Cucumber and Melon University, and the ones I now recruit from there, I would put him in the top 10%.  \n\n- ##### 留学申请时间规划表（长文干货）\n\n  https://www.1point3acres.com/bbs/thread-533820-1-1.html \n\n> 转眼这一届的同学已经申请完毕，offer收割满满。马上下一届的学弟学妹们要开始忙碌起来，准备今年你们的留学大战。距离正式申请还有半年的时间，很多学弟学妹问我能做些什么，提高自己的背景呢？在我介绍我的“收割offer食谱”之前，我有一句话想分享给大家，这个是支撑我高考和留学申请的信念（鸡汤）。\n>\n> **“尽吾志也而不能至者，可以无悔矣，其孰能讥之乎”**\n>\n> 最重要的就是“尽吾志”，如果你没把自己英文刷到托福110 GRE330，如果你没拿到500强实习，如果你要转专业却没有相关的科研实习，如果你文书没有让自己脱颖而出，你在明年的这个时候，没有任何的借口说出“可以无悔”。很多学生问我能不能短期内提高背景到哈佛耶鲁，我总是说现在请不要想结果，不要给自己定假大空的目标，脚踏实地一步一步做好现在能做的，等到10月开始申请了，和周围同学比较，自然也知道自己的层次。\n>\n> 希望同学们能动起来，时间很紧迫。留学就是你的人生重新洗牌，期待明年拿到王炸的你。\n>\n> 以下是一份收割OFFER的食谱，希望能帮助你。\n> **五月**\n> 好好上课和考试，这学期GPA非常重要，如果你之前GPA比较低，那这学期GPA的显著提升可以作为一个文书的亮点之一，证明你是有努力的。下学期的GPA就不重要了，所以好好再努力最后几个月，胜利就在前方！\n>\n> 下一步，根据你申请的专业，看你是否需要更多的科研或者实习。如果你申请商业或者管理相关，还没有一个拿得出手的（国际五百强）实习，或者你是理工科，还没有一个专业相关的科研或者发表文章，那么尝试做一个短期的科研项目或者实习。具体怎么找，其实有很多方式，就拿实习为例子，五月份其实部分大公司已经截止，但仍然有很多国际五百强仍然在招实习。考虑你的第一人脉，比如亲戚朋友是否能内推，这个是最有效的，接着是海投。对于高校同学，基本拿到面试没问题，但是怎么面试脱颖而出是关键。面试技巧我在下几篇推送会具体分享，包括了研究生面试的一些小技巧。\n>\n> \n> **六月**\n> 审视自己的英文成绩，如果你要申请前30的学校，托福105以上和GRE325以上应该是标配。不要相信所谓学校要求的最低分，哈佛对托福的要求是80分底线，但录取的都是近满分。还有同学说，去年XX托福没到100分都去了哥大呢。我想说，确实有这样的例子，并且也有很多，但是对于还能奋斗的你而言，我想说的就是“尽吾志”，提到你能做到的最好，这样没有学校能用GT卡你。\n>\n> 希望同学们能在6月的时候把托福给拿下，如果还在努力托福的，可以考虑先考GRE再来重考托福。GRE的准备时间一般在2-4个月，主要取决于你的单词量和每天投入的时间。我也有学生是一个半月考到330的GRE，每天几乎除了吃饭睡觉就是在背单词和刷填空。\n>\n> 把自己GRE和托福或者雅思的时间线要定下来，同时要报名，因为考位到了后期比较紧张。今年托福可以拼分，这就意味着即使单次考试的总分不理想，如果把多次考试的成绩拼在一起，各项都取最高值。你可能觉得是一个好事情，但是其实这是一个很大的压力，因为身边的同学都会去刷分，今年对托福的分数线要求会大大提高。\n>\n> 大概的时间线是理想情况：6月解决托福，9月解决GRE。当然你也有可能是这种情况: 6月没刷出来托福，9月没刷出GRE，11月刷出GRE，12月刷出托福。这两种都能赶得上12月15日第一批学校的截止日期前申请，但是第二种会在我们开始申请文书，套词推荐的时候还在考英文，兵荒马乱会有紧迫感。如果再往后推到1月考出成绩，对于商科需要面试的学生而言就偏晚。面试的位置可能就被占了不少。\n>\n> \n> **七月**\n> 7月份GRE还没有考出来的开始准备GRE。除了一遍准备英文考试，你应该也开始实习或者科研。国内很多的实习可能还是停留于做简单“打杂”的事情，但是如果就把“打杂”的经历放在简历和文书里面，不仅不加分反而会让你的背景打折扣。所以如何在平淡的工作里面挖掘出来有深度的内容，自己要机灵做事，也要高情商处理好各级关系。比如有位学员，老板只是让她整理收据，她运用了机器学习和图像识别，用智能系统处理收据核对，提高效率和正确率。这个放在简历和面试里面就是亮点。\n>\n> 接着重要的一点就是推荐人的寻找。很多人问要找什么样的人推荐，第一原则就是和你要有很多的interaction，可以有很多的小的事例去证明你不同的能力，像是带你的老板。第二原则是职位越高越有说服力，如果你能找到总监类的[推荐信](http://tinyurl.com/l3tpgv5)，并且他清楚你在实习中做了什么，而不是简单空洞地夸：小明是我们部门最优秀的实习生。\n>\n> \n> **八月**\n> 了解专业和学校。不论是单专业还是双专业申请，现在一定要定下来专业。如果你是想毕业在美国工作一段时间，那么你的专业会直接影响自己的就业和工资，一定要慎重选择专业，这个是一辈子的事情。现在不同专业的工资待遇，未来发展，以及抽取工作签证绿卡等政策都不相同。当然最重要是你的兴趣，因为只有在自己擅长的领域自己才能最大地发光发亮。\n>\n> 关于学校，因为同学背景还在改变，比如GT，推荐人，实习科研等，所以我推荐你们拟一个大致的学校名单即可。关于选学校，强烈推荐你们用[linkedin](http://redirect.viglink.com/?key=a1aa544c3b328def412653f9fc432107&u=http%3A%2F%2Flinkedin.com)去看class profile，看看往年招的学生背景如何，从而更精准的[定位](http://www.1point3acres.com/warald-evaluation-免费咨询背景评估定位/)。整理成为一个list，看看每个学校的截止日子，GT要求等等。\n>\n> 开始物色三个推荐人，能找到院长、博导、主管、总监那是最好，如果他们和你们关系好并且了解你们（带过项目）就是好上加好。诚恳问他们是否能愿意当你们的推荐人，因为他们都很忙，所以请提前询问。\n>\n> \n> **九月**\n> GRE考试，GRE会当场出分，如果没有考好可以马上报名一个半到两个月后的考试。\n>\n> 同时建议你们先起草简历，一来比个人陈述好写，二来也是帮你梳理一遍逻辑。除了格式要规范，没有语法错误，关键是内容要饱满。盲区：不要写流水账，让别人觉得自己在公司只是整理文件的螺丝钉。\n>\n> 不能写得太散，要以项目为核心。开头动词过去式，动词不要重复。不要干瘪，多写专业术语和数据等等\n>\n> \n> **十月**\n> 起草个人陈述，一句话，千万不能套模板！！！最好不要用以下两个模板开头：“因为我爸是出色的工程师，所以我从小对工程很感兴趣。”；“因为我有一次去华尔街参观，让我下定决心去学金融”。把握自己的逻辑主线，把自己背景串起来，加上自己的职业规划，比起辞藻华丽要重要多的多的多。我帮很多小朋友审核他们写的文章的时候发现他们背景很丰富，但是内容就很假大空。比如说‘帮助xx公司进行产品分析和定位’。 WHAT????你这段话告诉了啥。你分析了多少的competitors，每个competitor的特点是啥，你最后的结论是啥，你对公司的贡献是啥。就是千万拒绝假大空。\n>\n> \n> **十一月**\n> 网申之前，如果国内老师和经理需要推荐信草稿，请在11月份拟好发过去。最好不要太早发送，这样距离你网申时候发送推荐链接太早，推荐人可能会忘记。推荐信也有很多雷区，我们有机会再讲。\n> -baidu 1point3acres\n> 网申之前还有两件大事情，就是personal statement和简历的定稿，根据不同学校和项目的偏好修改。一定要找外教定稿，不然一些很愚蠢的语法错误可能断送你的前程。\n>\n> 开始填写网申资料，一点也不难，但是输入个人信息不要出错。first name是名字，last name是姓氏。然后给推荐人发邮件提醒他们提交推荐信。\n>\n> \n> **十二月**\n> 如果你还没有理想的英文成绩，那这就是你最后的机会冲刺好学校，越早申请有好的offer的概率越大。第一批学校的截止日期一般在12月1到12月15日之前，大部分还是再一月份截止。但是希望同学不要在最后一天提交，如果系统crash了，虽然可以给admission发邮件，但是就很繁琐了。\n>\n> \n> **一月**\n> 不要以为你提交了申请就万事大吉啦，如果你是有面试的专业，现在开始就要准备面试。很多人都以为面试只是看口语，其实口音只是很小的一部分，这一部分也很难再短时间提高。内容和流利度是最重要的，所以要找一个比你年长有经验的人给你做模拟面试是非常重要的，要知道面试的刷人是很大的。一边准备考试和过年，一边要抓起你的面试英文。\n>\n> **二到五月**\n> 这段时间是在面试和收割offer中度过，状态应该是每天手机不离手，做梦都在查邮箱，看看有没有update。如果被waitlist了，我们就要开始和学校发邮件argue。**这三个月是收割成果的时候，希望大家明年都有一个满意的收官offer收割季！**.   \n\n- ##### 大四上去UCB交换一学期对master申请有什么帮助嘛\n\n  https://www.1point3acres.com/bbs/thread-499204-1-1.html\n\n> 现在大三下，国内top10 985 高校 cs专业女生一枚，GPA3.88，托福分数104，GRE正在备考，但是除了三围没有其他背景，三月到申请季结束还有将近九个月时间，原来有过一段不算愉快的短期科研经历，但是是大二的事情了，现在手上没有在做的课题，套暑研觉得有些来不及了，找实习进大厂难度有点高，所以萌生了八月底到十二月申请季期间去UCB交换的念头，当然其一觉得可以开阔眼界，学到写真东西，其次也幻想在那期间能和教授面套，进实验室做点事，或者获得课程教授的认可，以此拿到一两封[推荐信](http://tinyurl.com/l3tpgv5)，但那可是UCB呀，12分的课程本身就是一个挑战，，而且得到那里的教授认可应该是个tough task。。。加上在陌生的环境迅速适应一边cover文书和申请工作量，担心是否现实，，如果不去交换的话，也就只能在本校实验室做九个月，能否出paper和成果也未可知，当然暑假实习可能不会因为交换的时间问题受到影响(因为交换八月中旬就要走，国内暑期实习一般也要789三月)，其实这也是个背景提升规划的咨询贴，希望有经验的学长学姐能给点建议，我也看到过hust的学长大四交换的经验贴，但是没有联系上，真诚求问大四交换是否值得？有无加持？还是我老老实实[刷题](http://www.1point3acres.com/bbs/forum-84-1.html)面试找实习，就在国内实验室搬搬砖呢，，还是像地里一些大神四月初还能海套套一下暑研，做最后的挣扎，争取一个暑研的机会o>_<o\n> 因为交换名额有限所以要尽快做决定，真心渴望过来人宝贵的指点o>_<o\n\n> 我当初也是这么想的（希望去Berkeley找找大佬套近乎），之后大四上学期就去交换了，然而没想到伯克利的cs课基本上都是几百或者接近千人大课，office hour去过几次 每次基本上都要排很久的队，而且聊不了科研，因为后面一堆人等着问问题。尝试单独约教授谈，结果邮件基本上不回复，少数几个回复的教授说supervised research 名额满了，cs资源实在是紧张... 认识的几个一起来交换的同学好像并没有成功拿到授课老师的推荐的。不过过来上上课倒是挺好的，大佬学霸也多，能学到很多东西。\n>\n> （虽然最终我有幸拿到大佬推荐信，不过是summer research时候的事情，和交换没什么关系）\n\n> 私以为大三下去交换优于大四上交换。  \n\n> 大四交换比较冒险 也不一定拿得到推荐信。\n> 而且现在正是找实习的黄金期啊 做做相关实习对于申请应该更有利吧，如果被大厂拒了 找小公司实习也可以呀 重点是你做了什么。有相关业界经历 在写ps的时候也能显得经历丰富一些。\n> 如果想申请phd 那现在继续去套暑研 发几百封总能有结果的 我很多朋友都是这样套到的 现在时间还来得及\n\n> 楼主好呀我是今年申的UCB项目，我个人觉得实习还蛮重要诶，我可能是全靠讲实习过的UCB面试…\n> 因为申的MEng准备毕业直接找工作的，三维不够突出，没有科研只有几个比赛做过一些项目，而且只有大三下暑假一段实习。而且实习也不算大厂（在携程），但可能正是因为不是大厂，以一个实习生的身份接触了很多核心业务天天加班（没办法组里缺人，组长天天面试新人又眼光太高），当时纯属因为喜欢旅游随便找的实习，没有想过出国的事，我觉悟比较晚…\n> 但UCB面试的时候真的是全程谈了实习的经历还有实习中很多teamwork的例子和自己的反思和收获，真的觉得学到了不少东西~我觉得我的背景UCB算是彩票校了录我可能真的是面试表现不错吧)\n> 之前学校也有UCB交流项目貌似是20万左右一个学期，考虑了一下未来还要读研，不想给家里太大负担就没有去，但隔壁班去了一个应该是和教授关系不错直接录研究生了。所以也不否定交流肯定也是好的选择，楼主根据自己的实际情况决定吖~\n\n- ##### 善用Linkedin\n\n- ##### 2019 Fall一般三维MSCS，MSEE混申总结\n\n  https://www.1point3acres.com/bbs/thread-528713-1-1.html\n\n> 我本科在一所美本top20 的ee。 gpa 3.62， gre v152q169+ 3.5。有过一段水cv 科研， 和一段国内大厂的安卓实习。因为我们学校cs 专业是top10， 所以cs课难度还是比较大。 上过的cs 的课gpa 也就只有3.4。\n> 这个三维在转专业选手里面可以算挺没有竞争力了。[选校](http://tinyurl.com/lmupa8e)的时候因为主要是想转码， 所以大多申的是cs 的program。\n>\n> 选校：\n> 冲刺： \n> UT Austin ECE 软件track， Rice CS， Georgia Tech ECE， NW CS， UCSD CS\n> 主申：\n> NYU Tandon CS， USC CS37\n> 保底：\n> USC CE\n>\n> 录取结果： \n> AD： \n> GTECH ECE， NYU Tandon CS， USC CS37， USC CE\n> Rej：\n> UT Austin ECE 软件track， Rice CS， NW CS， UCSD CS\n> （AD 和 Rej 各一半，感觉这个选校list 还是比较科学）  \n\n>   选校过程\n> 如果你像我一样什么指标都很一般， 那选校就直接决定了申请的成败。首先要给自己一个准确的[定位](http://www.1point3acres.com/warald-evaluation-免费咨询背景评估定位/)，多去地里看看往届的录取播报， 对比一下自己的情况。我记得申请之前有人告诉我在三维差不多的情况下美本会很有优势， 但是自己申请过后感觉优势还是比较小。 尤其是对于usc 这种学校，gpa 是远远大于学校排名的。看一个学校的录取难度的时候不能只看排名，还要多研究一下录取数据。 就比如说gtech的ece 排名top5， 可是官网上写的ms 录取平均gpa 其实只有3.6。\n>\n> 其次，因为这几年cs的bar 坐地起价，申请人多， 有很多不确定因素，所以一定要做好plan B。 对于我自己来说， 我的plan B 就是继续读一个转码友好的EE项目， 所以EE 项目申请了一个彩票学校（gtech）， 一个保底学校（USC CE）。在等待offer 的过程中， 虽然cs 的来的都很晚， 但是3 月份手里拿着一个gtech 还是很稳的。 再来对学校的项目本身要做深入的research。对于像我这种没什么竞争力的转专业选手， 一定要选一些转码友好，录取人数多的学校。在做学校research 的时候一定看清楚选一个适合你的track。 就像usc，他的 37 credit 的track 其实就比其它track 多几节课， 但是会对转专业友好很多。最后选校list 不要冗长， 一些录了你也不想去的学校就别申了。浪费那些申请费还不如吃几顿好的。 **只要选几个你喜欢的学校，拉开差距即可。**\n>\n> **申请中的硬指标--GRE 和 GPA**\n> GPA\n> 如果你是转专业申请CS 研究生，那么GPA 就决定了你申请的高度。根据我和同学申请结果的对比，发现admission 会重点看cs 课程和数学课程的gpa。所以gpa 用不相关\n> 水课拉的虚高应该是没用的。 还有转专业的同学虽然是提倡多选cs 的课， 但是一定是在保证cs 的gpa 的情况下。和我一起申请的一个同学，除了cs 入门课程以外， 只上过\n> 一节**数据结构**拿到了3.8。 最后收到了我所有冲刺学校的offer。 最后**大三大四或者高阶的课成绩比入门课成绩重要很多**。 如果大一大二gpa 保持不太好的同学， 后面还是可以\n> 力挽狂澜一下的。\n> GRE\n> GRE 我个人认为是申请环节中比较不重要的一部分， 尤其对于cs 来说， verbal 和写作真的没有那么重要。只要能考到一个跟自己gpa 匹配的成绩， 就没有必要再刷下去了。\n> 有些CS的program 可能会对GRE 中的数学有要求。不过数学这部分也就相当于一个初中的水平， 只要把知识点复习全， 背好公式， 再刷几套题， 169， 170 应该不是很难。\n>\n> 申请中的软实力--科研，实习与文书\n> 科研与实习\n> 科研与实习这些经历对course-based 的项目来说基本只起到锦上添花的作用。 如果gpa gre 不达标， 想用这些经历来补救的话基本是没什么用的。 个人感觉科研与实习的作用\n> 主要在于个人实力的提升，和兴趣的挖掘。 而且对于转专业项目经验少的同学， 可以把这些经历加到文书里面让论点更加充实。 \n> 文书-baidu 1point3acres\n> 文书中最重要的部分有两点。一是阐述你对专业的兴趣和成就。 这里就可以把自己的科研和实习写进去了。 第二点也是很多人忽略的一点就是证明你可以survive 研究生的课程。 \n> 因为作为course-based 的项目，他们最不愿意看到的就是你跟不上课程毕不了业。 这一点可以从你对大学课程的思考和克服的困难上去写\n>\n> [推荐信](http://tinyurl.com/l3tpgv5)\n> 推荐信的话最好的是能找自己research 的教授去写。 因为毕竟你给他做了项目， 他写的时候会比较有内容， 不会只是去套模版。一般学校需要3 封推荐信。 找两个强推教授\n> 就可以了。还有就是教授一般会很忙， 还有教授有严重的拖延症。 如果实在不放心可以多找一个教授当备胎。\n>\n> 其实申请季开始的时候真的挺没底的， 基本上是抱着cs 要全聚德的心态申请的。但是没有cs offer和因为觉得cs 难就没有尝试是两码事。 最后有了cs 还能去梦寐以求的加州\n> 真的挺开心的。 鼓励一下向我一样成绩不是那么优秀的同学还是努力尝试。最后向各位求个大米，希望这份总结对你们有帮助。  \n\n\n\n","tags":["一亩三分地","研究生申请","美国"]},{"title":"A sweet trip to Suzhou with sweetie Annika","url":"/suzhou-trip/","content":"\n和小妹妹的苏州旅行结束了\n\n让我们记录一下幸福快乐的第一次和小高同学的单独旅行吧~\n\n## **Day1**\n\n第一天的旅行，到苏州站的时候就一点多啦，先到我们幸福的小窝。\n\n房间很舒适，有暖心的光，是很有设计感的房子。\n\n夜晚开着点点星光，坐在吧台，看苏州城的夜，很温馨💗\n\n![IMG_3695](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3695.JPG)\n\n出发的时候就已经很下午了，我们就放弃了原本要去的寒山寺和虎丘景区，直奔七里山塘。这也有一个小插曲，我在自己的旅行规划中提前想好了要提前预约票去听昆曲，但是还是错过了时间hh。大家要是出发的时候，一定要再提前确认一下时间，提前预约，别错过精彩的环节啦~\n\n<br>\n\n七里山塘，最有特点的就是红红的灯笼。\n\n喜欢暖暖的满是中国味道的喜庆红🏮\n\n![IMG_3702](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3702.JPG)古戏台\n\n![IMG_3696](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3696.JPG)艺术感的民俗店\n\n![250551452564611384](A-sweet-trip-to-Suzhou-with-sweetie-Annika/250551452564611384.jpg)\n\n![561177541534707232](A-sweet-trip-to-Suzhou-with-sweetie-Annika/561177541534707232-1561777136140.jpg)\n\n![887269778777295117](A-sweet-trip-to-Suzhou-with-sweetie-Annika/887269778777295117.jpg)超好吃的豆腐脑和桂花鸳鸯粥\n\n![54721819423234852](A-sweet-trip-to-Suzhou-with-sweetie-Annika/54721819423234852.jpg)￥25一个的蟹黄包😀\n\n![微信图片_20190629104005](A-sweet-trip-to-Suzhou-with-sweetie-Annika/微信图片_20190629104005-1561776531539.jpg)朝宗阁\n\n![微信图片_20190629103811](A-sweet-trip-to-Suzhou-with-sweetie-Annika/微信图片_20190629103811.jpg)山塘胜境\n\n![311222916591024505](A-sweet-trip-to-Suzhou-with-sweetie-Annika/311222916591024505.jpg)\n\n![918449716910149866](A-sweet-trip-to-Suzhou-with-sweetie-Annika/918449716910149866.jpg)\n\n![微信图片_20190629103907](A-sweet-trip-to-Suzhou-with-sweetie-Annika/微信图片_20190629103907.jpg)小桥\n\n![微信图片_20190629103924](A-sweet-trip-to-Suzhou-with-sweetie-Annika/微信图片_20190629103924-1561778201948.jpg)路接阊阖\n\n![微信图片_20190629103843](A-sweet-trip-to-Suzhou-with-sweetie-Annika/微信图片_20190629103843.jpg)阊门\n\n![IMG_3679](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3679-1561738814114.JPG)回看七里山塘\n\n![IMG_3698](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3698.JPG)桥头\n\n![IMG_3697](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3697.JPG)\n\n![微信图片_20190629103441](A-sweet-trip-to-Suzhou-with-sweetie-Annika/微信图片_20190629103441-1561777038273.jpg)\n\n![900672677546411446](A-sweet-trip-to-Suzhou-with-sweetie-Annika/900672677546411446.jpg)推荐大家一定要做游船！\n\n半个小时时长的游船，慢悠悠听着讲解，看着两边的人家，别有一般滋味。\n\n![IMG_3701](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3701.JPG)\n\n![0](A-sweet-trip-to-Suzhou-with-sweetie-Annika/0.png)\n\n![111072564080418889](A-sweet-trip-to-Suzhou-with-sweetie-Annika/111072564080418889.jpg)\n\n![IMG_3681](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3681.JPG)回到我们幸福的小窝啦💗\n\n## Day2\n\n今天微微雨，苏州园林和蒙蒙细雨很配哦~\n\n今日路线：苏州博物馆-拙政园-诚品书店-金鸡湖\n\n早餐我们找到了当地的菜市场，和爷爷奶奶们吃着小馄饨和生煎，接地气的同时又美味实惠~\n\n![IMG_3708](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3708.JPG)\n\n![IMG_3713](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3713.JPG)小馄饨￥4，大馄饨￥8，比学校还便宜，超值了！\n\n![IMG_3711](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3711-1561779909737.JPG)\n\n![IMG_3709](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3709-1561779913955.JPG)全是肉的生煎 ￥14 / 8个，冲冲冲！\n\n吃完早午饭，我们就去苏州博物馆啦~\n\n![1](A-sweet-trip-to-Suzhou-with-sweetie-Annika/1.jpg)小仙子\n\n在门外时间还有点早，我们又去品味了星巴克的新品~\n\n![733181087139559414](A-sweet-trip-to-Suzhou-with-sweetie-Annika/733181087139559414.jpg)味道。。。有点神奇~\n\n终于终于到了我们的预约时间，我们进到了苏州博物馆\n\n![IMG_3759](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3759.JPG)\n\n![IMG_3741](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3741.JPG)苏州博物馆\n\n![381042676846394853](A-sweet-trip-to-Suzhou-with-sweetie-Annika/381042676846394853.jpg)我也偷偷上一张自己的傻照吧😊\n\n![157214127285126375](A-sweet-trip-to-Suzhou-with-sweetie-Annika/157214127285126375.jpg)苏州博物馆是由贝聿铭大师设计的，极具艺术感。\n\n我和小高在博物馆里转了一个下午，看了好多展品，也一起学习到了很多知识：玉管、玉琮(cong)、釉里红、秘色瓷好多好多~\n\n![IMG_3758](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3758-1561778704329.JPG)然后就出发去拙政园啦~\n\n拙政园是中国四大园林之首，苏州必去的园林。\n\n![IMG_3740](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3740.JPG)\n\n![IMG_3742](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3742.JPG)\n\n![463443762613060584](A-sweet-trip-to-Suzhou-with-sweetie-Annika/463443762613060584.jpg)\n\n![IMG_3736](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3736.JPG)\n\n![IMG_3737](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3737-1561778817472.JPG)\n\n![470782747912989441](A-sweet-trip-to-Suzhou-with-sweetie-Annika/470782747912989441.jpg)刚学会甩裙子的小高~\n\n![IMG_3752](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3752.JPG)\n\n![846018886409112935](A-sweet-trip-to-Suzhou-with-sweetie-Annika/846018886409112935.jpg)帅气老刘🤭\n\n![705439429151320466](A-sweet-trip-to-Suzhou-with-sweetie-Annika/705439429151320466.jpg)金石见盟心\n\n![IMG_3743](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3743.JPG)\n\n![IMG_3748](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3748.JPG)\n\n![IMG_3772](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3772.JPG)\n\n从拙政园出来，我们在平江路饱餐了一顿~\n\n狮子头、四菇（这个菜emmm一言难尽。。。）、酸菜鱼、茶树菇牛肉、当地的小青菜~\n\n吃得撑撑的我们又出发了！\n\n![275355032591726067](A-sweet-trip-to-Suzhou-with-sweetie-Annika/275355032591726067.jpg)\n\n![IMG_3735](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3735.JPG)仙子小高·平江路小博物馆\n\n![IMG_3734](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3734.JPG)\n\n![393590233447566229](A-sweet-trip-to-Suzhou-with-sweetie-Annika/393590233447566229.jpg)\n\n> 你眼角温柔的光亮\n>\n> 照亮着我的心田\n>\n> 有你在的陪伴\n>\n> 便是最好的时光\n\n\n\n逛完平江路，我们又直接打车到了诚品书店。\n\n诚品书店是大陆第一家诚品书店。\n\n装修很漂亮很大气，就是书店卖的书好少呀，东西好贵呀😂\n\n![301351756847744280](A-sweet-trip-to-Suzhou-with-sweetie-Annika/301351756847744280.jpg)“今晚要吃几个小孩😼”\n\n![38430035033874686](A-sweet-trip-to-Suzhou-with-sweetie-Annika/38430035033874686.jpg)可爱猪猪婆💗\n\n接着我们沿着湖边走哇走，有彩虹桥，有大裤衩，有小高最喜欢的摩天轮。\n\n![694630088027585892](A-sweet-trip-to-Suzhou-with-sweetie-Annika/694630088027585892.jpg)\n\n![830376786443128143](A-sweet-trip-to-Suzhou-with-sweetie-Annika/830376786443128143.jpg)\n\n![494015638236666997](A-sweet-trip-to-Suzhou-with-sweetie-Annika/494015638236666997.jpg)\n\n可惜的是摩天轮正在维修不能进入，小高只有下一次旅行才能实现她的摩天轮愿望啦~\n\n![IMG_3773](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3773.JPG)\n\n## Day3\n\n今天又是早午饭一起吃~\n\n品尝了更多当地人的美食~\n\n![321837957674150358](A-sweet-trip-to-Suzhou-with-sweetie-Annika/321837957674150358.jpg)小圆子\n\n![604631047837896415](A-sweet-trip-to-Suzhou-with-sweetie-Annika/604631047837896415.jpg)牛肉粉丝汤\n\n![432458596790118333](A-sweet-trip-to-Suzhou-with-sweetie-Annika/432458596790118333.jpg)烧卖\n\n![273981907938672569](A-sweet-trip-to-Suzhou-with-sweetie-Annika/273981907938672569.jpg)小笼包\n\n![749375958622620673](A-sweet-trip-to-Suzhou-with-sweetie-Annika/749375958622620673.jpg)￥2的大汤圆，超级好吃！\n\n吃过早饭，我们先去火车站寄存行李，还发现了开封菜的兄弟品牌hhh\n\n![IMG_3775](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3775.JPG)\n\n然后就到狮子林啦~\n\n狮子林不是中国四大名园（苏州另一个是留园）但是留园的风格和拙政园比较相近，而狮子林的特色是假山，相比于留园更加值得一去。所以我们决定去的是狮子林。\n\n到狮子林的时候，已经是满天的大太阳了。今天不比昨天的蒙蒙细雨，热得一塌糊涂。但是好在狮子林中假山层叠，也算是夏日消暑的好去处。\n\n![242496448434040679](A-sweet-trip-to-Suzhou-with-sweetie-Annika/242496448434040679.jpg)\n\n![IMG_3786](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3786.JPG)\n\n![IMG_3784](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3784.JPG)\n\n![IMG_3785](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3785.JPG)美美的照片~\n\n![96524882024048781](A-sweet-trip-to-Suzhou-with-sweetie-Annika/96524882024048781.jpg)\n\n![274628301273053495](A-sweet-trip-to-Suzhou-with-sweetie-Annika/274628301273053495.jpg)\n\n![779000438786252412](A-sweet-trip-to-Suzhou-with-sweetie-Annika/779000438786252412.jpg)\n\n![662802457732794242](A-sweet-trip-to-Suzhou-with-sweetie-Annika/662802457732794242.jpg)怪树怪石和悬泉飞瀑\n\n![12200023896832901](A-sweet-trip-to-Suzhou-with-sweetie-Annika/12200023896832901.jpg)有没有看到一片心形叶子💚\n\n![284247132498298519](A-sweet-trip-to-Suzhou-with-sweetie-Annika/284247132498298519.jpg)窗\n\n![IMG_3777](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3777.JPG)\n\n![773852076000064683](A-sweet-trip-to-Suzhou-with-sweetie-Annika/773852076000064683.jpg)\n\n![2](A-sweet-trip-to-Suzhou-with-sweetie-Annika/2.jpg)\n\n![IMG_3781](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3781.JPG)画舫\n\n![IMG_3793](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3793.JPG)热心肠给别人拍照的小高\n\n![IMG_3792](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3792.JPG)\n\n![IMG_3791](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3791.JPG)又是美美的小高~\n\n![24490511356069978](A-sweet-trip-to-Suzhou-with-sweetie-Annika/24490511356069978.jpg)\n\n震惊！发生了什么！\n\n原来是甜甜的小高老刘又上线了！\n\n![IMG_3794](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3794.JPG)\n\n![IMG_3795](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3795.JPG)\n\n![IMG_3796](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3796.JPG)\n\n![IMG_3797](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3797-1561780922252.JPG)\n\n![IMG_3798](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3798.JPG)\n\n![IMG_3799](A-sweet-trip-to-Suzhou-with-sweetie-Annika/IMG_3799.JPG)(* ^ _^ * ）\n\n![820435984209360359](A-sweet-trip-to-Suzhou-with-sweetie-Annika/820435984209360359.jpg)\n\n看见这个熟悉的亭子就想起来当年和妈妈一起来过，在假山中，在细雨中钻上钻下，妙趣无穷。\n\n或许苏州狮子林就是我成长的一个见证吧。\n\n> 一个男人完整的一生，总要经历从老妈到老婆的过渡、交接呢  ——老高\n\n从美丽的狮子林出来，我们穿过老房子小巷子，准备去苏州大学。\n\n路上还遇到一个“有主垃圾”的牌子拍了照片（太辣眼睛就不放辣）\n\n终于到了苏州大学！\n\n可是！\n\n不让我们进去！\n\n这个要提前做好心理准备，苏州大学本部不让其他人进入😥\n\n于是，我们就抛弃了苏州大学，提前我们幸福的等车回家生活~\n\n![604690060865652644](A-sweet-trip-to-Suzhou-with-sweetie-Annika/604690060865652644.jpg)在麦当劳，享受我的双层安格斯厚牛培根套餐\n\n（忽略我看见肉的表情，是真的超级大超级厚的汉堡!!!![003](A-sweet-trip-to-Suzhou-with-sweetie-Annika/003.PNG)\n\n嘟嘟嘟，最后在鸭肠和薯片的香气中，结束了我们幸福的苏州之旅~\n\n## 尾声\n\n这是我和小高第一次单独的旅行，是珍贵的回忆\n\n苏州是一个慢悠悠而又有情调的城市，是美丽的足迹\n\n希望我们能够常常忆起：\n\n一睡就是一下午的午觉，暖心灯光和吧台夜景，吃豆腐脑和鸳鸯粥的手舞足蹈，还有榴莲芝士满满的香甜~\n\n12点才吃的早饭，博物馆一起认字和学历史，北岛的波兰来客，雨中的花花手环，和总是识别不出脸的虚化~\n\n假山的爬上爬下，闪光灯下的反光，心形的荷叶，中国胜利的拍照，与一天比哥哥多睡好多个小时还迷糊糊的小妹妹~\n\n💗苏州\n\n💗小高\n\n2019.6.29\n\n\n\n\n\n","tags":["恋爱","旅行"],"categories":["文字"]},{"title":"搭建博客","url":"/myBlog/","content":"\n\n# 我的博客使用Hexo + Github Pages 搭建。\n\n![1561341983642](搭建博客/1561341983642.png)\n\n## 和基础的 Casper 主题相比较，进行了如下定制：\n\n1. 修改网页小头像为我个人的脸萌\n\n2. 修改网页的标题\n\n3. 添加了知乎社交媒体的分享\n\n4. 底部栏添加了“点击支持我的知乎Live💗”的链接\n\n5. ⭐修改主页的显示方法，使之能够在有description的情况下，显示description。这样能够在主页更加有效的显示信息。\n\n6. 创建json脚本\n\n   package.json 中新建脚本：\n\n   - npm run s\n   - npm run d\n   \n7. 文章可以加密访问\n\n8. 文章末尾添加标签\n\n   ```\n   ---本文结束✔感谢阅读---\n   ```\n\n9. 实现文章字数统计和阅读预估时间（添加了附件，待定制）\n\n10. 定制头文件实现添加版权信息\n\n11. 可以主动推送到百度站长\n\n12. 设定菜单项的显示文本\n\n13. 生成 about 页面 && 定制化跳转菜单\n\n14. 404页面\n\n     {% pdf xx.pdf %}\n\n15. 数据统计：页面浏览次数的统计\n\n16. 修改permalink\n\n17. 添加pdf\n\n## 在研究过程中有如下的收获：\n\n- 图片的上传：\n\n  博客里面添加图片有两种方式:\n\n  - 相对位置：\n\n    在_post文件夹下面，同名的md文件和文件夹。在文件夹中放置你想要的图片，然后像正常写md一样，拖拽图片添加到文章中即可。\n\n    注意：\n\n    - 图片地址中需要使用斜杠，而非反斜杠\n    - 要修改地址为相对地址。\n    - 注意图片名称不要有空格\n\n      ✔现在使用的是Typora自带的图片生成文件夹（./${filename}​）\n\n  - 网络位置：\n\n    上传到我自己的GitHub assets文件夹\n\n- 图标的修改:\n\n  在网站上获取图片，然后使用Photoshop将图片转换为黑白格式（Ctrl+shift+Alt+B）。之后使用格式工厂将图片压缩（32*32），之后使用网络转换工具，将图片转换为svg格式。\n\n- 理解了layout布局的结构，使用宏。\n\n- 理解了swig语言，能够写初步的swig语言程序。\n\n- 设计了属于自己的blog模板。\n\n- 能够添加cover-image\n\n- 发布到自己的域名上面\n\n- 刷新（去缓存刷新）Ctrl+F5 / Shift+F5\n\n- 加密访问：\n\n  - [Hexo-Blog-Encrypt](https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2FMikeCoder%2Fhexo-blog-encrypt%2Fblob%2Fmaster%2FReadMe.zh.md)\n  \n  - **安装**\n  \n    在 hexo 根目录的 package.json 中添加 `\"hexo-blog-encrypt\": \"1.1.*\"` 依赖。\n  \n    然后执行`npm install` 命令。\n  \n    该插件会自动安装。\n  \n  - **快速开始**\n  \n    1. 首先在 `_config.yml` 中启用该插件:\n  \n    ```yml\n    # Security\n    ##\n    encrypt:\n        enable: true\n    ```\n  \n    1. 在你的文章的头部添加上对应的字段，如 `password`, `abstract`, `message` \n  \n    ```yml\n    ---\n    title: hello world\n    date: 2016-03-30 21:18:02\n    tags:\n        - fdsafsdaf\n    password: Mike\n    abstract: Welcome to my blog, enter password to read.\n    message: Welcome to my blog, enter password to read.\n    ---\n    ```\n\n- 404html+css 语言\n\n- TDK\n\n- 修改`hexo-image-asset`插件里面的内容，使之适应我们blog的网址设计。\n\n  发现已经有成熟的描述了，就直接放入链接了。https://blog.csdn.net/xjm850552586/article/details/84101345\n\n\n\n![david990917](搭建博客/david990917.png)\n\n## 知识点：\n\n#### 1. _config.yml文件配置：\n\n```yml\n# Hexo配置\n## 文档: https://hexo.io/docs/configuration.html\n## 源码: https://github.com/hexojs/hexo/\n## hexo版本：hexo-cli: 1.1.0\n\n# 网站\ntitle: Hexo # 网站标题\nsubtitle: # 网站副标题\ndescription: # 网站描述(SEO)\nauthor: John Doe # 您的名字\nlanguage: # 网站使用的语言\ntimezone: # 网站时区\n\n# 网址\n## 如果你的网站放在子目录中，请将url设置为为'http://yoursite.com/child'，将根目录root设置为'/child/'\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://yoursite.com # 网址\nroot: / # 网站根目录\npermalink: :year/:month/:day/:title/ # 文章的永久链接\npermalink_defaults: # 永久链接中各部分的默认值\n\n# 目录\nsource_dir: source # 资源文件夹，这个文件夹用来存放内容。\npublic_dir: public # 公共文件夹，这个文件夹用于存放生成的站点文件。\ntag_dir: tags # 标签文件夹\narchive_dir: archives # 归档文件夹\ncategory_dir: categories # 分类文件夹\ncode_dir: downloads/code # include code文件夹\ni18n_dir: :lang # 国际化（i18n）文件夹\nskip_render: # 跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。\n\n# 文章\nnew_post_name: :title.md # 新文章的文件名称\ndefault_layout: post # 预设布局\ntitlecase: false # 将标题转换为title case\nexternal_link: true # 在新标签中打开外部链接\nfilename_case: 0 # 把文件名称转换为 (1) 小写或 (2) 大写\nrender_drafts: false # 显示草稿\npost_asset_folder: false # 启动asset文件夹\nrelative_link: false # 把链接改为与根目录的相对位址\nfuture: true # 显示未来的文章\nhighlight: # 代码块的设置\n  enable: true # 启动设置\n  line_number: true # 行号\n  auto_detect: false # 自动检测\n  tab_replace: # tab替换\n  \n# 主页设置\n# path: Root path for your blogs index page. (默认 = '')\n# per_page: Posts displayed per page. (0 = 关闭分页功能)\n# order_by: Posts order. (默认情况下按日期降序排序)\nindex_generator: # 索引生成\n  path: '' # 路径\n  per_page: 10 # 每页展示文章数\n  order_by: -date # 排序依据\n  \n# 分类 & 标签\ndefault_category: uncategorized # 默认分类\ncategory_map: # 分类别名\ntag_map: # 标签别名     \n\n# 日期 / 时间格式\n## Hexo使用Moment.js来解析和显示日期\n## 您可以按下面的文档描述自定义日期格式\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD # 日期格式\ntime_format: HH:mm:ss # 时间格式\n\n# 分页 & 标签\n## 将per_page设置为0可禁用分页\nper_page: 10 # 每页显示的文章量 (0 = 关闭分页功能)\npagination_dir: page # 分页目录\n\n# 拓展\n## 插件：https://hexo.io/plugins/ #\n## 主题：https://hexo.io/themes/\ntheme: landscape # 当前主题名称。值为false时禁用主题\n\n# 部署\n## 文档: https://hexo.io/docs/deployment.html\ndeploy: # 部署部分的设置\n  type: # 网站类型\n```\n\n使用的主题 [Casper](https://zhih.me/hexo-casper-usage/ ) \n\n#### 2. 网站格式转化\n\n可以转化图片等一系列的格式https://www.aconvert.com/\n\n#### 3. Hexo根目录结构\n\nHexo根目录结构如下图：\n\n```\n.\n├── _config.yml\n├── db.json\n├── package.json\n├── public\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n##### **source**\n\n资源文件夹是存放用户资源的地方。除`_posts` 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件（如刚刚生成的about文件夹）会被拷贝到 public 文件夹。\n\n##### 为github仓库添加readme\n\n既然 source 文件夹中的内容将全部被推送到 public 文件夹，public 文件夹中的内容又将被最终push到github仓库中，那么如果我们想要为github仓库添加readme.md，只要在 source 文件夹中创建就好了：\n\n![img](搭建博客/5791489-afc543b5c1845e8c.webp)\n\n部署到github，就有readme了，但我们发现，README.md已经被解析为README.html，显示的全是html代码，并不是我们想要的文档格式的内容。\n\n为了解决这个问题，我们回到source文件夹，将`README.md`重命名为`README.MDOWN`，再部署到github。\n\nsource文件夹中，.md会被解析为html，并放到 public 文件夹被push到github，但.MDWN不会被解析。\n\n##### 404 页面\n\n创建404.html\n\n#### 4. Hexo卸载插件命令\n\n```\nnpm uninstall 插件名 --save\n```\n\n#### hexo install 命令\n\n```bash\nnpm install hexo-asset-image --save\n\nnpm install hexo-deployer-git --save\nnpm install hexo-baidu-url-submit --save\n\nnpm install hexo-generator-sitemap --save  \nnpm install hexo-generator-baidu-sitemap --save\n\nnpm install hexo-blog-encrypt --save\n\nnpm install hexo-generator-cname --save\nnpm install hexo-pdf --save \n```\n\n#### 还有一部分内容在兄弟页面连接\n\nstarky99.com/blog-characters\n\n","tags":["blog"],"categories":["技术"]},{"title":"毛概复习","url":"/maogai/","content":"\n### 1 毛泽东思想及其历史地位\n\n![毛泽东思想及其历史地位](毛概复习/毛泽东思想及其历史地位.png)\n\n### 2 新民主主义革命理论\n\n![新民主主义革命理论](毛概复习/新民主主义革命理论.png)\n\n### 3 社会主义改造理论\n\n![社会主义改造理论](毛概复习/社会主义改造理论.png)\n\n### 4 社会主义建设道路初步探索的理论成果\n\n![社会主义建设道路初步探索的理论成果](毛概复习/社会主义建设道路初步探索的理论成果.png)\n\n### 5 邓小平理论\n\n![邓小平理论](毛概复习/邓小平理论.png)\n\n### 6 三个代表重要思想\n\n![三个代表重要思想](毛概复习/三个代表重要思想.png)\n\n### 7 科学发展观\n\n![科学发展观](毛概复习/科学发展观.png)\n\n### 8 习近平新时代中国特色社会主义思想及其历史地位\n\n![习近平新时代中国特色社会主义思想及其历史地位](毛概复习/习近平新时代中国特色社会主义思想及其历史地位.png)\n\n### 9 坚持和发展中国特色社会主义的总任务\n\n![坚持和发展中国特色社会主义的总任务](毛概复习/坚持和发展中国特色社会主义的总任务.png)\n\n### 10 五位一体总体布局\n\n![五位一体总体布局](毛概复习/五位一体总体布局.png)\n\n### 11 四个全面战略布局\n\n![四个全面战略布局](毛概复习/四个全面战略布局.png)\n\n### 13 中国特色大国外交\n\n![中国特色大国外交](毛概复习/中国特色大国外交.png)\n\n### 14 实现中华民族伟大复兴关键在党\n\n![实现中华民族伟大复兴关键在党](毛概复习/实现中华民族伟大复兴关键在党.png)","tags":["课程"],"categories":["技术"]},{"title":"小学期苏州行房间选择","url":"/suzhou-house/","content":"\n\n苏州旅行计划，我们一共游玩三天（25-26-27）。\n\n选择房子的位置是在苏州繁华的观前街，靠近我们要去的景区，住两晚。\n\n在需要***两张床***这一硬性条件下，我筛选出了几套房子，小高同学可以看看喜欢哪一种风格。\n\n\n\n房源按照地理位置优先级进行排序。**（越看越惊喜）**\n\n## 房源1\n\n### 平江路中心 闹中取静 ￥319/晚\n\n[Airbnb连接](https://www.airbnb.cn/rooms/27816403?check_in=2019-06-25&check_out=2019-06-27&source_impression_id=p3_1560417299_H1gWxHKDNKvdUV40&s=7ElWlnte)\n\n二楼\n\n![img](https://z1.muscache.cn/im/pictures/d9e414e7-1cf3-4b70-84ed-fa78d2b49cdb.jpg?aki_policy=xx_large)\n\n![img](https://z1.muscache.cn/im/pictures/d9e414e7-1cf3-4b70-84ed-fa78d2b49cdb.jpg?aki_policy=xx_large)\n\n一楼![img](https://z1.muscache.cn/im/pictures/e7571d06-f7f2-4aa3-86f8-6f36464cf23a.jpg?aki_policy=x_large)\n\n浴室\n\n![img](https://z1.muscache.cn/im/pictures/8520777e-db2e-4a92-9c72-2cd887ecad1e.jpg?aki_policy=x_large)\n\n第二张床是沙发床\n\n![img](https://z1.muscache.cn/im/pictures/81637b31-6756-49f4-a77b-350937d5a300.jpg?aki_policy=x_large)\n\n居住位置在景区\n\n![img](https://z1.muscache.cn/im/pictures/065b876c-3b53-47e0-b810-a916058fd138.jpg?aki_policy=x_large)\n\n![img](https://z1.muscache.cn/im/pictures/f752473d-fed7-47f4-96ec-d69f62874c7f.jpg?aki_policy=x_large)\n\n#### 亮点\n\n位置极佳\n\n#### 不足\n\n沙发床不是很能让人放心（相信）\n\n一楼风格很朴实\n\n#### 位置\n\n![1](小学期苏州行房间选择/1.png)\n\n\n\n## 房源2\n\n### 80平北欧精装舒适两居 ￥358/晚\n\n[Airbnb连接](https://www.airbnb.cn/rooms/31894003?check_in=2019-06-25&check_out=2019-06-27&source_impression_id=p3_1560416642_BiaHiXUQRNA%2BDUP1&s=7ElWlnte)\n\n2间卧室 2张床\n\n![img](https://z1.muscache.cn/im/pictures/fa134c76-aad8-4fb1-875f-274c6fa1d508.jpg?aki_policy=xx_large)\n\n![img](https://z1.muscache.cn/im/pictures/d382d8b9-465c-471c-a21b-d721005a02b4.jpg?aki_policy=x_large)\n\n![img](https://z1.muscache.cn/im/pictures/58c7ae14-35d9-4849-8a7d-b798e28dc3db.jpg?aki_policy=x_large)\n\n另一个房间\n\n![img](https://z1.muscache.cn/im/pictures/e45123b9-0c3e-4876-bb35-c7259319c44e.jpg?aki_policy=x_large)\n\n两个房间布局\n\n![img](https://z1.muscache.cn/im/pictures/7529421c-fddf-48bd-977c-8194d1973c71.jpg?aki_policy=x_large)\n\n#### 亮点\n\n小清新风格适合小高同学\n\n两个房间两张床\n\n#### 不足\n\n评价中有一人说老小区，**隔音可能不是很好，能听到走廊的脚步声？？？**\n\n#### 位置\n\n![2](小学期苏州行房间选择/2.png)\n\n\n\n## 房源3\n\n### 【观前街】萌猫帝国个性主题房 ￥328/晚\n\n[Airbnb连接](https://www.airbnb.cn/rooms/34184191?check_in=2019-06-25&check_out=2019-06-27&source_impression_id=p3_1560417216_GnAN21hX2XC0J0CO&s=7ElWlnte)\n\n![img](https://z1.muscache.cn/im/pictures/6c7a9663-6157-42d7-97af-71a00864c3b5.jpg?aki_policy=x_large)\n\n![img](https://z1.muscache.cn/im/pictures/e9964441-2d72-4803-aa27-9600f18dd8f0.jpg?aki_policy=xx_large)\n\n一楼的床\n\n![img](https://z1.muscache.cn/im/pictures/9dea1c53-3025-4183-a5c7-5ed6769dfefe.jpg?aki_policy=x_large)\n\n![img](https://z1.muscache.cn/im/pictures/f788b022-98f4-4fba-8f56-fc416066234f.jpg?aki_policy=x_large)\n\n二楼的床\n\n![img](https://z1.muscache.cn/im/pictures/2e930ad4-9935-465c-ac7c-f653935853f0.jpg?aki_policy=x_large)\n\n#### 亮点\n\n一屋两人三餐四季\n\n投影可以看电影\n\n白天采光可能很舒服\n\n#### 不足\n\n二楼的床有点狭小\n\n#### 位置\n\n![3](小学期苏州行房间选择/3.png)\n\n\n\n## 房源4\n\n### 日式两室一厅套房【叹 · 闲】提供和服木屐凹造型/独院 ￥385/晚\n\n[Airbnb连接](https://www.airbnb.cn/rooms/28928447?check_in=2019-06-25&check_out=2019-06-27&source_impression_id=p3_1560416738_9ZylSijnaIaI63eb&s=7ElWlnte)\n\n2间卧室 2张床\n\n![img](https://z1.muscache.cn/im/pictures/ec0c0ece-a04c-41c3-a414-754e72ba2f4a.jpg?aki_policy=xx_large)\n\n![img](https://z1.muscache.cn/im/pictures/9f2f4db6-59aa-4823-98ee-f00223bb9901.jpg?aki_policy=x_large)\n\n![img](https://z1.muscache.cn/im/pictures/e52ee22a-66bb-4719-9864-8469fd160fda.jpg?aki_policy=x_large)\n\n我估计就要睡下面这个逼仄的小屋了/傻笑.jpg\n\n![img](https://z1.muscache.cn/im/pictures/fecfd1f4-21d7-4c4e-b541-7857d4683fb3.jpg?aki_policy=x_large)\n\n![img](https://z1.muscache.cn/im/pictures/d99b5120-6c6a-4114-9b19-88cf663b3536.jpg?aki_policy=x_large)\n\n![img](https://z1.muscache.cn/im/pictures/d4b179fa-f8ac-463f-b866-2b7b784c32a8.jpg?aki_policy=x_large)\n\n#### 亮点-日式风格\n\n![img](https://z1.muscache.cn/im/pictures/3e5d963a-3a88-4868-8380-021828290dc2.jpg?aki_policy=x_large)\n\n#### 不足\n\n位置：坐地铁需要额外步行几百米。离我们要去的景点远了一点。\n\n前面两个房源可以晚上（平江街区、苏州大学）直接回家，这个房子回家还要走一段路。\n\n#### 位置\n\n![4](小学期苏州行房间选择/4.png)\n\n\n\n### 以上是瀚文挑选出来的4套房源，看小高同学喜欢哪个建筑风格哦💗\n\n\n\n  ","tags":["恋爱","旅行"],"categories":["文字"]},{"title":"瀚文小高幸福苏州三日游规划","url":"/suzhou-route/","content":"\n## 路线概览\n\nD1\t[寒山寺](http://www.mafengwo.cn/poi/8812.html) → [枫桥古镇(可选)](http://www.mafengwo.cn/travel-scenic-spot/mafengwo/10430.html)   → [虎丘山风景区(可选)](<http://www.mafengwo.cn/poi/648.html>)→ [七里山塘](http://www.mafengwo.cn/poi/648.html) → [山塘昆曲馆](http://www.mafengwo.cn/poi/5758474.html)\n\nD2\t[拙政园](http://www.mafengwo.cn/poi/638.html) → [苏州博物馆](http://www.mafengwo.cn/poi/5674.html) → [平江路](http://www.mafengwo.cn/poi/5752.html) → [金鸡湖景区](http://www.mafengwo.cn/poi/642.html)\n\nD3\t[狮子林](http://www.mafengwo.cn/poi/639.html) → [苏州大学](http://www.mafengwo.cn/poi/8550.html) → [网师园](http://www.mafengwo.cn/poi/5722.html)\n\n## Day1\n\n[寒山寺](http://www.mafengwo.cn/poi/8812.html) → [枫桥古镇(可选)](http://www.mafengwo.cn/travel-scenic-spot/mafengwo/10430.html)   → [虎丘山风景区(可选)](<http://www.mafengwo.cn/poi/648.html>)→ [七里山塘](http://www.mafengwo.cn/poi/648.html) → [山塘昆曲馆](http://www.mafengwo.cn/poi/5758474.html)\n\n![Day1](瀚文小高幸福苏州三日游/Day1.PNG)\n\n### 火车Train🚆\n\n交大出发，上海-苏州\n\n从苏州火车站出发抵达住的民宿。\n\n最重要的事情，吃饭一定要规划好！\n\n在住的地方吃一点，大约12-13点出发。\n\n### 寒山寺\n\n月落乌啼霜满天， 江枫渔火对愁眠。\n姑苏城外寒山寺， 夜半钟声到客船。 \n\n——张继《枫桥夜泊》\n\n![img](http://b2-q.mafengwo.net/s5/M00/F6/ED/wKgB3FFuXIiAJA8dAAwBQ7YfPRk56.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://b4-q.mafengwo.net/s5/M00/B1/0B/wKgB3FFZqY6AJfRzABULvCOfj5433.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://n3-q.mafengwo.net/s1/M00/47/CA/wKgBm03BTROBDqmdAAJKki95KpY12.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n寒山寺位于苏州西郊，初名“妙利普明塔院”，始建于南朝萧梁代天监年间（公元502～519年）。\n\n因唐代诗人张继的名诗《枫桥夜泊》中“姑苏城外寒山寺、夜半钟声到客船”一句而闻名天下。\n\n寒山寺是著名的祈福胜地，每天来寺中撞钟进香、祈求平安的信徒络绎不绝。主要由大雄宝殿、钟楼、碑廊、藏经楼等建筑组成。大雄宝殿内高大的须弥座以汉白玉雕筑，座上安奉释迦牟尼佛金身佛像，两侧靠墙供奉着明代成化年间铸造的十八尊精铁鎏金罗汉像，是由佛教圣地***五台山***移置于此。\n\n在碑廊可见到“江南四大才子”中的文征明、唐寅所书碑文的残片，还有岳飞、康有为等名人的诗碑，而清末著名学者俞樾书写的诗碑《枫桥夜泊》更是寒山寺中的一绝。\n\n#### 景点小历史\n\n##### 1.为啥叫寒山寺？\n\n寒山寺属于禅宗中的临济宗。唐代贞观年间，当时的名僧寒山、希迁两位高僧创建寒山寺。\n\n##### 2.损毁\n\n1000多年内寒山寺先后5次遭到火毁（一说是7次），最后一次重建是清代光绪年间。\n\n历史上寒山寺曾是中国十大名寺之一。\n\n#### 瀚文旅行小助手👇\n\n##### 如何到达\n\n民宿出发，313路/33路/301路到达。\n\n##### 门票\n\n学生证半价￥10\n\n\n\n枫桥古镇（可选）\n\n![img](http://b4-q.mafengwo.net/s7/M00/94/31/wKgB6lSrmr-AF0GQAAe9tg01NN4152.png?imageMogr2%2Fthumbnail%2F%211020x540r%2Fgravity%2FCenter%2Fcrop%2F%211020x540%2Fquality%2F100)\n\n慢慢逛逛，和小高多拍一点照片~\n\n\n\n### 虎丘山风景名胜区（和古镇选择，时间长）\n\n吴中第一名胜\n\n![img](http://n2-q.mafengwo.net/s7/M00/38/31/wKgB6lPkd_6ANcNgAA1KT4_-UGQ66.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://n4-q.mafengwo.net/s5/M00/81/4F/wKgB3FDqKOuAJIa0ABa9cjevLaE27.jpeg?imageMogr2%2Fthumbnail%2F%21337x450r%2Fgravity%2FCenter%2Fcrop%2F%21337x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n#### 景点小知识\n\n虎丘距今已有2500多年，是到访苏州必去之地，最有名的就是虎丘塔和虎丘剑池。\n\n依托着秀美的景色，悠久的历史文化景观，享有“吴中第一名胜”的美誉。\n\n虎丘塔被称为“东方比萨斜塔”，而“虎丘剑池”四个大字据说出自颜真卿的手笔。\n\n每年虎丘都会举办几次花会庙会活动，将会展出大量中外名花植物，布景静美。\n\n#### 瀚文旅行小助手👇\n\n##### 如何到达\n\n寒山寺出发，816路到达。\n\n##### 门票\n\n学生证半价￥30-40\n\n##### ***需注意开放时间***\n\n7:30-17:00\n\n\n\n### 七里山塘\n\n民歌唱到：“上有天堂，下有苏杭。杭州有西湖，苏州有山塘。两处好地方，无限好风光。” \n\n![img](http://b4-q.mafengwo.net/s11/M00/9E/85/wKgBEFpVvWeAUQYqAC1M4OGY5sU66.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://p3-q.mafengwo.net/s6/M00/12/8B/wKgB4lKRXwiABgogAB_gpQMb8To68.jpeg?imageMogr2%2Fthumbnail%2F%21300x450r%2Fgravity%2FCenter%2Fcrop%2F%21300x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://n3-q.mafengwo.net/s12/M00/8E/79/wKgED1vDZM2AIEE2AA1elIXBOTI44.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n#### 景点小知识\n\n东连“红尘中一、二等富贵风流之地”阊门，西接“吴中第一名胜”虎丘，长约七里。\n\n唐代大诗人白居易任苏州刺史时募工凿河堆堤而成，至今已有一千一百余年历史。\n\n七里山塘曾是明清时期中国商贸、文化最为发达的街区之一，被誉为“神州第一古街”、“老苏州的缩影，吴文化的窗口”。\n\n夜晚的山塘街很有意境，适合拍照。也可以找家茶馆喝茶、听评弹，感受老苏州的传统文化。\n\n#### 瀚文旅行小助手👇\n\n##### 如何到达\n\n枫桥景区出发，好行1号线南线。\n\n虎丘山景区出发的话，打车就行了。\n\n##### 门票\n\n景区免费，游船需另外购买船票（可坐船看看夜景）\t\n\n##### Tips\n\n日落黄昏后的古镇夜景\n\n越过山塘胜迹的牌匾，左侧就是七里山塘了。刚进山塘，就有点被香香的吃食吸引到！！！***（小高的幸福晚餐就在这里！）***\n\n苏州是个水乡，河道多，桥多，而山塘街是最具苏州街巷特征的典型。山塘街中间是山塘河，山塘街则紧傍河的北侧，通过一座座石桥与另一侧的街道连接。\n\n放眼眺望两岸的黛瓦粉墙，枕河人家，舟来楫往，一股浓郁的水乡风情画卷扑面而来。 \n\n![img](http://n1-q.mafengwo.net/s12/M00/BA/EF/wKgED1wKDUKAQtNhAA-PquCNCFY06.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n\n\n雪景很美哟\n\n![img](http://b4-q.mafengwo.net/s12/M00/23/05/wKgED1wsg_aAQ8CYAAVc02ofZ0854.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://p4-q.mafengwo.net/s12/M00/23/09/wKgED1wsg_iAOt5nAALBA1kToYc97.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n\n\n### 山塘昆曲馆\n\n苏州唯一一家全天都有演出的昆曲馆。\n\n柳丝长，春雨细,，赏心乐事谁家院？不在梅边在柳边…….\n\n![img](http://n1-q.mafengwo.net/s12/M00/82/78/wKgED1uvdVWAbk1AABDoRcPjvzw48.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://n2-q.mafengwo.net/s6/M00/11/7A/wKgB4lN1t36AP7K_AAFXehsvTm409.jpeg?imageMogr2%2Fthumbnail%2F%21690x370r%2Fgravity%2FCenter%2Fcrop%2F%21690x370%2Fquality%2F100)\n\n#### 景点小知识\n\n来苏州，不听昆曲，似乎总觉得差了点什么。位于山塘街入口处的山塘昆曲馆，点上一壶茶水，边听轻清柔缓的评弹，边喝茶，惬意的享受。\n\n150元的票子能坐在第三排，身侧的小几上摆着热水瓶与茶叶供取用，与古装剧里的景象无异。剧目是脍炙人口的《牡丹亭》中折子戏三种——《惊梦》、《寻梦》与《拾画》，开演前有说书人先行简要介绍。\n\n昆曲乃“百戏之祖”，为雅乐正统，细腻声腔与举手投足都值得玩味。演罢另附赠了两曲苏州评弹，一首开篇《宫怨·贵妃醉酒》，一首民歌《好一朵茉莉花》，素手拨弄琵琶便将吴侬软语的韵致烘托到好处。\n\n#### 瀚文旅行小助手👇\n\n##### 如何到达\n\n七里山塘。\n\n##### 门票\n\n携程可提前订票（避免售罄）\n\n需提前一天预定！\n\n<https://piao.ctrip.com/ticket/dest/t1402091.html>\n\n##### 演出时间\n\n每天19:30\n\n#### 昆曲看小高意愿💗想听我们就听\n\n听完归\n\n\n\n## Day2\n\n[拙政园](http://www.mafengwo.cn/poi/638.html) → [苏州博物馆](http://www.mafengwo.cn/poi/5674.html) → [平江路](http://www.mafengwo.cn/poi/5752.html) → [金鸡湖景区](http://www.mafengwo.cn/poi/642.html)\n\n![Day2](瀚文小高幸福苏州三日游/Day2.PNG)\n\n### 拙政园\n\n拙政园位居中国所有园林之首，与北京颐和园、承德避暑山庄、苏州留园一起被誉为中国四大名园。\n\n![img](http://b3-q.mafengwo.net/s9/M00/D2/43/wKgBs1b-OvGAWgVEABJtuL1YlrM62.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n#### 景点小知识\n\n园区以水为中心，山木环绕。东部开阔疏朗，西部建筑精美，中部以水池为中心，池中堆山，是全园精华所在。\n\n园区南部是传统江南地区建筑格局，设有国内唯一的园林专题博物馆——苏州园林博物馆。\n\n园林中建有春夏秋冬四座亭子，每座亭子周围设计了与此相应的景致；春的周围种植了牡丹和芍药，夏的亭子前面的池塘是莲花，秋的亭子附近栽种了红枫，冬的亭子旁栽种的白色的玉兰，四季有景。\n\n园中所栽种的紫藤相传是文征明亲手种植。园中也常见竹子，且种类繁多，金竹，紫竹，还有那湘妃泣泪染净身的湘妃竹，也许这就是文人墨客之居：宁可食无肉，不可居无竹；有学者分析在31个景点中，超过一半的景色，都与植物和植物本身的意涵有关。\n\n\n\n***学习一下给小高拍照（不是故意放‘其他人’的照片的）***\n\n![img](http://n2-q.mafengwo.net/s9/M00/D2/45/wKgBs1b-OvSAYElvAAidf0ZUirg27.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://n2-q.mafengwo.net/s9/M00/D2/45/wKgBs1b-OvaADyqiAAe07NLkuLc62.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://n3-q.mafengwo.net/s9/M00/D2/4E/wKgBs1b-OwuAQzqLAAifNLIxEyk22.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://b4-q.mafengwo.net/s9/M00/D2/49/wKgBs1b-Ov6AL7pPAAnR9rXzawg09.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://p4-q.mafengwo.net/s9/M00/D2/63/wKgBs1b-OzKAOfMIAAWS6C0K8xg46.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://b2-q.mafengwo.net/s11/M00/3C/79/wKgBEFsrNDOABHwyACrydFIJxd049.jpeg?imageMogr2%2Fthumbnail%2F%21299x450r%2Fgravity%2FCenter%2Fcrop%2F%21299x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://n3-q.mafengwo.net/s11/M00/3C/8A/wKgBEFsrNDqAYT5XAC5jLysgOK805.jpeg?imageMogr2%2Fthumbnail%2F%21299x450r%2Fgravity%2FCenter%2Fcrop%2F%21299x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://n3-q.mafengwo.net/s11/M00/3C/4A/wKgBEFsrNBWAAV21ACvOs1fH-2Y74.jpeg?imageMogr2%2Fthumbnail%2F%21310x466r%2Fgravity%2FCenter%2Fcrop%2F%21310x466%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n在拍摄的时候，除了避开人群，也要学会合理的使用前景，这样拍出来的照片至少可以层次分明，虚虚实实，空间和梦幻感十足。\n\n细细品来，拙政园如果要好好的感受，建议你花大半天的时间，千万不要像游人走马观花，这是需要耐心的景点，甚至是二刷（嘿嘿嘿我就是二刷）。\n\n![img](http://b3-q.mafengwo.net/s11/M00/ED/32/wKgBEFr0COiAWOv5ABP_-C5-9gs63.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://n1-q.mafengwo.net/s11/M00/ED/22/wKgBEFr0COSAM3N9ABH57Yi_lhk09.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n全园以水为中心，山水萦绕，厅榭精美，花木繁茂，具有浓郁的江南汉族水乡特色。\n\n#### 瀚文旅行小助手👇\n\n##### 如何到达 \n\n离住的地方很近（打车很便宜）\n\n##### 门票 \n\n￥70（学生证可以买半价票）\n\n可以***请讲解***来讲\n\n##### 开放时间\n\n早上要提早出发\n\n07:30-17:30 (03月01日-11月15日 周一-周日)\n\n***游完园子吃午饭！！！***\n\n\n\n### 苏州博物馆\n\n苏州园林博物馆，是国内唯一的园林专题博物馆哦。\n\n——贝聿铭先生的封山之作\n\n![img](http://n3-q.mafengwo.net/s7/M00/D7/23/wKgB6lTukCaAP7KfAAiQhHuwxIE11.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://n3-q.mafengwo.net/s13/M00/E6/AF/wKgEaVxmMUqAP9ItAAC_COcywpk59.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://n1-q.mafengwo.net/s7/M00/D7/1A/wKgB6lTukBWAJD4WAAtItQL1kIE95.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://b2-q.mafengwo.net/s11/M00/23/BB/wKgBEFt450mAbtZTABTy-k2UTVA26.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n#### 景点小知识\n\n传统的苏州园林风格，高低错落，深灰色屋面与白墙相衬，整个博物馆宛若一座小园林。\n\n由新馆和忠王府(旧馆)两部分组成，新馆内可看到远古到近代的陶器等，忠王府内，能看到苏式彩绘。\n\n馆内设有吴地遗珍、吴塔国宝、吴中风雅、吴门书画四个富有苏州特色的常设展览。\n\n民俗展览供游客了解苏州一带风俗习惯，还可以参观太平天国时古建筑，感受当时的场景。\n\n***镇馆之宝[五代]秘色瓷莲花碗***\n\n碗高8.9厘米，口径13.9厘米，盏托高6.6厘米，底径9.3厘米，通高13.5厘米。1956年在苏州虎丘云岩寺塔第三层发现。这件越窑秘色青瓷莲花碗由碗和盏托两部分组成。碗为直口深腹圈足，盏托形状如豆，盘口外翻，束腰，圈足外撇。碗身外壁、盏托盘面和圈足均饰重瓣莲花，如浅浮雕状凸起，被认为是五代、北宋年间秘色瓷标准器。\n\n![img](http://p2-q.mafengwo.net/s13/M00/E4/5D/wKgEaVxmMDWAff-QAAHjKoiG4Yw07.jpeg?imageMogr2%2Fthumbnail%2F%21336x450r%2Fgravity%2FCenter%2Fcrop%2F%21336x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n#### 瀚文旅行小助手👇\n\n##### 如何到达\n\n拙政园出口\n\n##### 门票\n\n***网站/苏州博物馆的微信公众号***预约参观时间\n\n志愿者讲解\n\n09:00-17:00\n\n\n\n### 平江路\n\n![img](http://b2-q.mafengwo.net/s6/M00/50/2C/wKgB4lJab8OAE1MgAAQzNptgEhI79.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://b4-q.mafengwo.net/s7/M00/66/B3/wKgB6lQDD3-AWfPcAAaTSmWhWKc59.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://b1-q.mafengwo.net/s9/M00/42/6F/wKgBs1duYJqATooZACCTInOwvkg89.jpeg?imageMogr2%2Fthumbnail%2F%21300x450r%2Fgravity%2FCenter%2Fcrop%2F%21300x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://p1-q.mafengwo.net/s9/M00/D3/25/wKgBs1b-PSCAMx8LAApHN8_fkaM94.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n#### 景点小知识\n\n平江路是苏州的一条历史老街，一条沿河的小路，全长约1.6公里，苏州古城迄今为止保存最为完整的一个区域，堪称古城缩影。\n\n东西两侧有悬桥巷、大儒巷、中张家巷、大新桥巷等小巷，尤其东边还保留了多条水巷，水陆并行、河街相邻，很有江南水城的特色。\n\n街区留住了街巷的旧貌，哪怕是改造而成的酒吧、纪念品店、咖啡馆也不张扬，看起来好似民居。\n\n远离城市的喧嚣，一切都显得那么美好。\n\n午后的阳光，将柳叶照得通透，搭配上老房民居，比起河对岸的店铺成群，这才是传统水乡原本的样子。\n\n![img](http://b3-q.mafengwo.net/s10/M00/64/82/wKgBZ1xPFHyAMPBqABJ31gYDyUw68.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://p4-q.mafengwo.net/s2/M00/A1/FB/wKgIDFxPFHiAJRx_AD21f9I1rJg90.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://b2-q.mafengwo.net/s12/M00/09/CA/wKgED1wqA6uAESdvAA2_exhayO417.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n\n\n#### 瀚文旅行小助手👇\n\n##### 如何到达\n\n都是超级近\n\n\n\n## 金鸡湖景区\n\n中国最大的内城湖泊。\n\n![img](http://n4-q.mafengwo.net/s1/M00/59/C7/wKgIC1xQZGCADWIlACGse-ksXZ856.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://b3-q.mafengwo.net/s10/M00/26/59/wKgBZ1iq1EaASYSEAAd11oPnW8g48.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://b3-q.mafengwo.net/s12/M00/0E/DB/wKgED1uvK6uAeIUwAAohURp5y3I99.jpeg?imageMogr2%2Fthumbnail%2F%21337x450r%2Fgravity%2FCenter%2Fcrop%2F%21337x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n\n\n#### 景点小知识\n\n景区有四个入口，一般游从西入口入园，地铁口出来就有自行车租赁点，想骑车环湖的话，可在此租借自行车。\n\n李公堤是苏州金鸡湖中唯一的湖中长堤，保留了传统的苏州民居建筑形态，附近有李公堤国际风情商业水街。\n\n夜幕下的金鸡湖大桥不容错过，利用数码灯光等高科技手段制作出来的五彩数码瀑布从桥上飞流而下，风景绮丽。\n\n![img](http://n1-q.mafengwo.net/s7/M00/06/AA/wKgB6lPc2VCAZjA5AAOthyMtCYw06.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n苏州摩天轮高120米，是国内最大的水上摩天轮。\n\n![img](http://p1-q.mafengwo.net/s12/M00/89/64/wKgED1xHLqmAa5x0ABGjuh_mqUI84.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n金鸡湖很大，如果步行游玩一圈，对体力是很大的考验，骑个单车是最好的方式了。\n\n水墨长堤李公堤\n\n![img](http://n4-q.mafengwo.net/s12/M00/1D/2A/wKgED1xG2MCANBoaAACeAuy2b3853.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n\n\n#### 瀚文旅行小助手👇\n\n##### 如何到达\n\n倒车（￥5） or 地铁（￥3） or 打车（￥27）\n\n吃夜宵，回去夜生活啦~\n\n## Day3\n\n[狮子林](http://www.mafengwo.cn/poi/639.html) → [苏州大学](http://www.mafengwo.cn/poi/8550.html) → [网师园](http://www.mafengwo.cn/poi/5722.html)\n\n![Day3](瀚文小高幸福苏州三日游/Day3.PNG)\n\n### 狮子林\n\n![img](http://n2-q.mafengwo.net/s7/M00/46/4A/wKgB6lPkgxyAKYdZABacyWoTDaQ82.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://n1-q.mafengwo.net/s7/M00/94/80/wKgB6lPky9CAJwvXAA3mT3E61eo21.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://n1-q.mafengwo.net/s9/M00/18/19/wKgBs1duEciAG4u0ABZD_Iszfsk76.jpeg?imageMogr2%2Fthumbnail%2F%21337x450r%2Fgravity%2FCenter%2Fcrop%2F%21337x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n\n\n#### 景点小知识\n\n始建于公元1342年，是汉族古典私家园林建筑的代表之一。\n\n园林可分祠堂、住宅与庭园三部分，现园子的入口原是贝氏宗祠。\n\n狮子林在元代叫菩提正宗寺。狮子是佛教中的神兽，佛被称为人中狮子，禅宗寺院又叫丛林。因此苏州古典园林——狮子林，本身是宗教用语.\n\n狮子林是乾隆最喜爱的苏州园林，最大的特色就是大片大片的假山。一般的苏州园林，选取少量假山点缀其中，狮子林则是以假山为重点，是一座假山园林。这种喜大喜多的偏好和乾隆对各种釉彩大瓶的喜爱如出一辙。\n\n大部分地方都能遮风避雨 ✌\n\n里面的假山群设计精妙绝伦，看起来只是一小块地方，实际上在里面走来走去能绕上个半小时。\n\n园子不太大，没有拙政园大，很紧凑。和拙政园是完全不同的两种感觉。虽然都是苏州园林，拙政园给人的感觉是大气，恢弘。狮子林却透着谐趣。充分表现出了园主的独具匠心。\n\n各种太湖石都能找到“狮子”的影子，不愧狮子林的名声。但需要一定想像力的哦。\n\n![img](http://n2-q.mafengwo.net/s8/M00/B4/DE/wKgBpVXlfrSAO59yAAU3T9FhfE423.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n【瀚文学习给小高拍照！】\n\n![img](http://b4-q.mafengwo.net/s11/M00/2F/B3/wKgBEFqBpmqAI0q_AAnEerbv3eY16.jpeg?imageMogr2%2Fthumbnail%2F%21310x465r%2Fgravity%2FCenter%2Fcrop%2F%21310x465%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://b3-q.mafengwo.net/s11/M00/5B/01/wKgBEFs-WbWAELVqAAfh3KmpERM87.jpeg?imageMogr2%2Fthumbnail%2F%21310x466r%2Fgravity%2FCenter%2Fcrop%2F%21310x466%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://p1-q.mafengwo.net/s11/M00/5B/09/wKgBEFs-Wb6AXARoAAkW44TFOjE00.jpeg?imageMogr2%2Fthumbnail%2F%21299x450r%2Fgravity%2FCenter%2Fcrop%2F%21299x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://p4-q.mafengwo.net/s11/M00/5B/04/wKgBEFs-WbmAENagAAyqORfteHA91.jpeg?imageMogr2%2Fthumbnail%2F%21310x466r%2Fgravity%2FCenter%2Fcrop%2F%21310x466%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n\n\n#### 瀚文旅行小助手👇\n\n##### 如何到达\n\n离住宿的地方很近\n\n##### 门票\n\n学生淡季半价（￥15）\n\n##### 开放时间\n\n07:30-17:30 (03月01日-10月15日 周一-周日)\n\n\n\n### 苏州大学\n\n让我同学带我们逛吧~\n\n![img](http://p4-q.mafengwo.net/s6/M00/A5/B0/wKgB4lJ1IdmAAdFeABXQpA7z6uA58.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://n1-q.mafengwo.net/s9/M00/39/51/wKgBs1cl7i2AZ9pZABL1dvGVugs38.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n\n\n#### 景点小知识\n\n苏州大学坐落于古城苏州，是国家211工程重点建设高校，其前身为创建于1900年光绪年间的东吴大学。\n\n苏州大学本部是最有历史感的一个校区，最吸引人的是满校园的老式建筑，最有名的是红楼和钟楼。\n\n进入校园会感觉回到了民国时期，校园的建筑保养的也很好，而且还在用于上课教学。\n\n【瀚文学习拍照】\n\n![img](http://p1-q.mafengwo.net/s12/M00/64/DC/wKgED1uoyGKAUKZiAGOA2NpA7L488.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n\n\n#### 瀚文旅行小助手👇\n\n##### 如何到达\n\n狮子林出发，2km，可以骑共享单车\n\n（才意识到这些近的地方的通勤，都可以骑共享单车）\n\n##### 可能需要学生卡？？？\n\n\n\n### 网师园\n\n网师园是苏州四大名园，是苏州园林中极具艺术特色和文化价值的代表作品。\n\n![img](http://b3-q.mafengwo.net/s7/M00/0C/80/wKgB6lRHq0qAOEcWAA9Wl5bVqag59.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n![img](http://p2-q.mafengwo.net/s5/M00/7E/F2/wKgB3FEckjmAb52EAAcDsj_GG-E50.jpeg?imageMogr2%2Fthumbnail%2F%21690x450r%2Fgravity%2FCenter%2Fcrop%2F%21690x450%2Fquality%2F90%7Cwatermark%2F1%2Fimage%2FaHR0cDovL2I0LXEubWFmZW5nd28ubmV0L3MxMS9NMDAvNDQvOUIvd0tnQkVGc1A1UnlBRHY3cEFBQUhaWlVQUmxROTkwLnBuZw%3D%3D%2Fgravity%2FSouthEast%2Fdx%2F10%2Fdy%2F11)\n\n#### 景点小知识\n\n\n\n网师园为苏州四大名园之一，是苏州园林中极具艺术特色和文化价值的代表作品。\n\n始称“渔隐”，至公元1765年定名为“网师园”，表明园林主人渔隐之意。 \n\n整个园林建筑虽多不见其密，池不足亩而不觉其小，堪称中国园林以少胜多的典范。\n\n自大门至轿厅、万卷堂、撷秀楼，沿中轴线依次展开，主厅万卷堂屋宇高敞，装饰雅致。\n\n除了了解布局的奥妙，每年夜花园开放时，晚上欣赏曲艺表演是这里的一大特色。\n\n⭐网师园夜游是有园内身着传统服装的年轻讲解员带队，如果遇到夜间游客多的时候，她们会按照不同的路线带游客走，避免游客拥挤。无论是哪种路线行进，游客都能欣赏到昆曲、评弹、舞蹈、古琴、箫、江南丝竹等共计8个苏州特色的表演。虽然这些演出都仅仅是几分钟短短的片段，但是表演者从服饰到妆容都一丝不苟，没有半点业余。夜游的一个多小时，能让你在最短的时间体验苏州的古典艺术。\n\n\n\n#### 瀚文旅行小助手👇\n\n##### 如何到达\n\n##### 门票\n\n学生淡季半价（￥15）\n\n***还可以夜游（晚上额外买票 票价100元/人）***\n\n##### 开放时间\n\n07:30-17:30 (4月21日-10月20日 周一-周日)\n\n晚上也开放夜游\n\n\n\n### 火车Train🚆\n\n回住处收拾东西\n\n苏州出发，苏州-上海\n\n我们回家咯~\n\n💗💗💗爱小高的每一天💗💗💗\n\n\n\n","tags":["恋爱","旅行"],"categories":["文字"]},{"title":"Hello World","url":"/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n"}]